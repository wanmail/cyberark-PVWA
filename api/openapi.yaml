openapi: 3.0.1
info:
  description: Display the PVWA REST APIs below for a description of how to use them
    and try them out. Access information about additional REST APIs through the online
    documentation.
  license:
    name: Web Services Documentation
    url: ../../HelpCenter/PAS/latest/en/Content/WebServices/Implementing%20Privileged%20Account%20Security%20Web%20Services%20.htm?tocpath=Developer%7CREST%20Web%20Services%7C_____0
  title: Privileged Access Security REST API
  version: v1
servers:
- url: https://localhost/PasswordVault
paths:
  /api/AccountGroups:
    get:
      description: "This method returns all the account groups in a specific Safe.\
        \ \r\n\r\nThe user performing this task must have the following permissions\
        \ in the Safe:\r\nList Accounts."
      operationId: AccountGroups_GetGroups
      parameters:
      - description: The name of the Safe where the account groups are.
        in: query
        name: safe
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
          description: List of relevant groups
      tags:
      - Account Groups
    post:
      description: "This method enables application managers to define a new account\
        \ group automatically, and manage accounts as part of a group.\r\n\r\nTo create\
        \ an account group, users require the following permissions in the Safe where\
        \ the group is created:\r\nAdd accounts, Update account content, Update account\
        \ properties, Create folders"
      operationId: AccountGroups_AddAccountGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccountGroupData'
          text/json:
            schema:
              $ref: '#/components/schemas/AddAccountGroupData'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddAccountGroupData'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddAccountGroupData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddAccountGroupData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddAccountGroupData'
        description: The account group data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
          description: The created group information
      tags:
      - Account Groups
      x-codegen-request-body-name: addAccountGroupData
  /api/AccountGroups/{groupId}/members:
    get:
      description: "This method returns all the members of an existing account group.\
        \ These accounts can be either password accounts or SSH Key accounts.\r\n\r\
        \nThe user performing this task must have the following permissions in the\
        \ Safe:\r\nList Accounts."
      operationId: AccountGroups_GetGroupAccounts
      parameters:
      - description: The unique ID of the group.
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupMember'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountGroupMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountGroupMember'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountGroupMember'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountGroupMember'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountGroupMember'
          description: List of members for an existing account group
      tags:
      - Account Groups
    post:
      description: "This method adds an account as a member to an existing account\
        \ group. \r\n\r\nThe account can contain either a password or an SSH key.\
        \ All members of an account group must be stored in the same Safe as the group\
        \ itself.\r\n\r\nTo add an account as a member to an account group, users\
        \ require the following permissions in the Safe where the group is created:\r\
        \nAdd accounts, Update account content, Update account properties."
      operationId: AccountGroups_AddAccountToGroup
      parameters:
      - description: The unique ID of account group.
        in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemberToAccountGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/AddMemberToAccountGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddMemberToAccountGroup'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddMemberToAccountGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddMemberToAccountGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddMemberToAccountGroup'
        description: The member to add
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemberToAccountGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/AddMemberToAccountGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddMemberToAccountGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/AddMemberToAccountGroup'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AddMemberToAccountGroup'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AddMemberToAccountGroup'
          description: The added member data
      tags:
      - Account Groups
      x-codegen-request-body-name: addMemberData
  /api/AccountGroups/{groupId}/members/{accountId}:
    delete:
      description: "This method removes an account member from an account group. This\
        \ account can be either a password account or an SSH Key account.\r\n\r\n\
        The user performing this task must have the following permissions in the Safe:\r\
        \nAdd accounts, Update account content, Update account properties, Create\
        \ folders"
      operationId: AccountGroups_DeleteAccountFromGroup
      parameters:
      - description: The unique ID of the group.
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "204":
          content: {}
          description: Deleted
      tags:
      - Account Groups
  /api/Accounts:
    get:
      description: "This method returns a list of all the accounts in the Vault.\r\
        \n\r\nThe user who runs this web service requires List Accounts permission\
        \ in the Safe."
      operationId: Accounts_GetAccounts
      parameters:
      - description: List of keywords separated with space to search in accounts.
        in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: "Property or properties to sort returned accounts, followed by\
          \ asc (default) or desc to control sort direction. Multiple sorts are comma-separated.\
          \ Maximum number of properties is 3."
        explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Offset of the first returned account into the collection of results.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: "Maximum number of returned accounts. If not specified, the default\
          \ value is 50. The maximum number that can be specified is 1000."
        in: query
        name: limit
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: "Search for accounts filtered by specific Safe. Filter=safename\
          \ eq [safe name]"
        in: query
        name: filter
        schema:
          type: string
      - description: Type of search to perform - if keywords are contained in the
          relevant account properties values or in the start of the properties values
          (the later enhances performance)
        in: query
        name: searchType
        schema:
          enum:
          - Contains
          - StartsWith
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
          description: OK
      tags:
      - Accounts
    post:
      description: "This method adds a new privileged account or SSH key to the Vault\r\
        \nThe user who runs this web service requires the following permission in\
        \ the Vault\r\n- Add account AND\r\n \r\nEither\r\n- Update password\r\nOR\r\
        \n- Update password properties"
      operationId: Accounts_AddAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccountModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountModel'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountModel'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: Created
      tags:
      - Accounts
      x-codegen-request-body-name: account
  /api/Accounts/{accountId}:
    patch:
      description: "This method updates an existing account's details.\r\n\r\nIt isn't\
        \ mandatory to send all the account’s details. \r\n\r\nAny values sent in\
        \ the request that were changed will be updated. \r\n\r\nAll other properties\
        \ values will remain the same. \r\n\r\nOn each property, the following are\
        \ the allowed operations: \r\n\r\n - Replace (to replace the existing value\
        \ of that property)\r\n\r\n - Remove (to remove the property from the account)\r\
        \n\r\n - Add (to add that property to the account)\r\n \r\nIt is possible\
        \ to set several properties using the same command using the following structure:\r\
        \n\r\n{ \"op\": \"replace\", \"path\": \"/platformaccountproperties\", \"\
        value\": \"{\\\"{PropertyID1}\\\":\\\"{Value}\\\",\\\"{PropertyID2}\\\":\\\
        \"{Value}\\\",\\\"{PropertyID3}\\\":\\\"{Value}\\\"}\"}\r\n\r\nWhen sending\
        \ several operations on the same property – only the last operation will affect."
      operationId: Accounts_UpdateAccount
      parameters:
      - description: The unique ID of the account to update. This is retrieved by
          the Get Account Service.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument[AccountModel]"
          text/json:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument[AccountModel]"
          application/xml:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument[AccountModel]"
          text/xml:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument[AccountModel]"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument[AccountModel]"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument[AccountModel]"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountModel'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountModel'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: accountPatch
  /api/Accounts/{accountId}/Change:
    post:
      description: "This method marks the account for an immediate credentials change\
        \ by the CPM to a new random password.\r\n\r\nThe user who runs this web service\
        \ requires the following permission in the Safe where the privileged account\
        \ is stored:\r\n'Initiate CPM password management operations'"
      operationId: Accounts_CPMChangeNow
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCredentialsNowProperties'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeCredentialsNowProperties'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeCredentialsNowProperties'
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangeCredentialsNowProperties'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeCredentialsNowProperties'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeCredentialsNowProperties'
        description: The change credentials properties.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: changeProperties
  /api/Accounts/{accountId}/CheckIn:
    post:
      description: "This method checks an exclusive account into the Vault.\r\n\r\n\
        If the account is managed automatically by the CPM, after it is checked in,\
        \ the password is changed immediately.\r\n\r\nIf the account is managed manually,\
        \ a notification is sent to a user who is authorized to change the password.\
        \ \r\n\r\nThe account is checked in automatically after it has been changed.\r\
        \n\r\nThe user who runs this web service requires the following permission\
        \ in the Safe where the privileged account is stored: 'Initiate CPM password\
        \ management operations'"
      operationId: Accounts_CheckIn
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
  /api/Accounts/{accountId}/GrantAdministrativeAccess:
    post:
      description: "This method requests and receives access to a target Windows machine\
        \ with administrative rights.\r\n\r\nThe domain user who runs this web service\
        \ will be added to the local Administrators group of the target machine.\r\
        \n\r\nMake sure that all users who want to request access to the target Windows\
        \ machine must have the following permission in the Safe: List accounts, Use\
        \ accounts \r\nMake sure that the platform is enabled for ad hoc access at\
        \ platform level. For more information, see the product documentation.\r\n\
        \r\nEnd user machine environment that will be able to get Ad-Hoc access: \r\
        \n- Windows Server 2012/2012R2/2016\r\n- Windows 8, Windows 10"
      operationId: Accounts_GrantAccess
      parameters:
      - description: The local account that will be used to add the logged on user
          to the Administrators group on the machine.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
  /api/Accounts/{accountId}/LinkAccount/{extraPasswordIndex}:
    delete:
      description: "This method enables a user to remove association between linked\
        \ account and source account.\r\nTo run this service, the user must have the\
        \ following Safe member authorizations for the Safe of the source account:\r\
        \nList accounts\r\nUpdate account properties\r\nManage Safe - This authorization\
        \ is needed only in case \"RequireManageSafeToClearLinkedAccount\" is enabled\
        \ in the configuration"
      operationId: Accounts_ClearAccount
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: "The linked account's extra password index.\r\n            The\
          \ index can be for Reconcile account, Logon account, or other linked account\
          \ that is defined in the Platform configuration."
        in: path
        name: extraPasswordIndex
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Accounts
  /api/Accounts/{accountId}/Password/Retrieve:
    post:
      description: "This method enables users to retrieve the password or SSH key\
        \ of an existing account that is identified by its Account ID. It enables\
        \ users to specify a reason and ticket ID, if required. This method can be\
        \ used from v10 and replaces the Get Account Value method."
      operationId: Accounts_Retrieve
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
        description: The account content prerequisites.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: accountContentPrerequisites
  /api/Accounts/{accountId}/Password/Update:
    post:
      description: "This method enables users to set the account's credentials and\
        \ change it in the Vault. This will not affect the credentials on the target\
        \ device.\r\n\r\nThe user who runs this web service requires the following\
        \ permission in the Safe where the privileged account is stored:\r\n'Update\
        \ password value'"
      operationId: Accounts_ChangeCredentialsInTheVault
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeInVaultProperties'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeInVaultProperties'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeInVaultProperties'
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangeInVaultProperties'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeInVaultProperties'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeInVaultProperties'
        description: The change properties data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: changeProperties
  /api/Accounts/{accountId}/PSMConnect:
    post:
      description: "This method allows you to connect with an account through PSM\
        \ using an RDP file or to the PSMGW, by returning RDP settings that can be\
        \ used with an RDP client application or settings for the PSMGW. \r\n\r\n\
        It requires the PVWA and PSM to be configured for transparent connections\
        \ through PSM with RDP files or with PSMGW configuration. \r\n\r\nFor more\
        \ information, refer to Configuring the PSM Session User Experience for Connections\
        \ Through PVWA in the documentation.\r\n  \r\nNote that the Accept header\
        \ can be passed to receive the connection data as application/json"
      operationId: Accounts_PSMConnect
      parameters:
      - description: The unique ID of the account to retrieve and use to connect to
          the target system through PSM.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
        description: The information of the request to connect.
        required: true
      responses:
        "200":
          content: {}
          description: "The content of an RDP file. For example: full address: 10.10.11.70\
            \ server port: 3389 username: s:PSM@1d6de91fCan also be PSMGW JSON response\
            \ depending on the configuration for example: {\"PSMGWURL\": https://1.1.1.1:8443/guac/direct,\
            \ \"PSMGWRequest\": <Base64EncodedRequest>}The PSMGW can be connected\
            \ via post request to the given URL with the body parameter as json"
      tags:
      - Accounts
      x-codegen-request-body-name: request
  /api/Accounts/{accountId}/Reconcile:
    post:
      description: "This method marks an account for automatic reconciliation by the\
        \ CPM.\r\n\r\nThe user who runs this web service requires the following permission\
        \ in the Safe where the privileged account is stored: 'Initiate CPM password\
        \ management operations'"
      operationId: Accounts_Reconcile
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
  /api/Accounts/{accountId}/RevokeAdministrativeAccess:
    post:
      description: "This method revokes JIT access to a target Windows machine with\
        \ administrative rights.\r\nThe domain user who runs this web service will\
        \ be removed from the local Administrators group of the target machine."
      operationId: Accounts_RevokeAccess
      parameters:
      - description: The local account for the target machine on which the logged
          on user will be removed from the Administrators group
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Accounts
  /api/Accounts/{accountId}/Secret/Generate:
    post:
      description: "This method allows generates a new password for an existing account\
        \ or based on a given complexity.\r\nThe new password will be returned, but\
        \ not stored on the account.\r\nGiven an account, the old password and complexity\
        \ will be taken from the account and account's platform respectfully."
      operationId: Accounts_GeneratePassword
      parameters:
      - description: Unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePasswordAccountDetailsJson'
          text/json:
            schema:
              $ref: '#/components/schemas/GeneratePasswordAccountDetailsJson'
          application/xml:
            schema:
              $ref: '#/components/schemas/GeneratePasswordAccountDetailsJson'
          text/xml:
            schema:
              $ref: '#/components/schemas/GeneratePasswordAccountDetailsJson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeneratePasswordAccountDetailsJson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeneratePasswordAccountDetailsJson'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeneratedPassword'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeneratedPassword'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/GeneratedPassword'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/GeneratedPassword'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/GeneratedPassword'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/GeneratedPassword'
                type: array
          description: Generates a new password for an existing account.
      tags:
      - Accounts
      x-codegen-request-body-name: accDetails
  /api/Accounts/{accountId}/Secret/Retrieve:
    post:
      description: This method allows users to retrieve a private SSH key file to
        their local computer. It enables users to specify a reason and Ticket ID.
        The private SSH key file is from an existing account that is identified by
        its Account ID.
      operationId: Accounts_Download
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountContentPrerequsites'
        description: The account content prerequisites.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: accountContentPrerequisites
  /api/Accounts/{accountId}/Secret/Versions:
    get:
      description: "This method returns all secret versions.\r\nIn order to run this\
        \ method, the user needs the following Safe member authorization:\r\nList\
        \ Accounts\r\nView Safe Members"
      operationId: Accounts_GetVersions
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Whether to return both real and temporary password version or
          only real.
        in: query
        name: showTemporary
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VersionData'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/VersionData'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VersionData'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VersionData'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/VersionData'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/VersionData'
                type: array
          description: OK
      tags:
      - Accounts
  /api/Accounts/{accountId}/SetNextPassword:
    post:
      description: "This method gives the ability to set the account's credentials\
        \ for the next CPM change.\r\n\r\nThe user who runs this web service requires\
        \ the following permissions in the Safe where the privileged account is stored:\r\
        \n'Initiate CPM password management operations', 'Specify next password value'"
      operationId: Accounts_CPMSetNext
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNextCredentialsProperties'
          text/json:
            schema:
              $ref: '#/components/schemas/SetNextCredentialsProperties'
          application/xml:
            schema:
              $ref: '#/components/schemas/SetNextCredentialsProperties'
          text/xml:
            schema:
              $ref: '#/components/schemas/SetNextCredentialsProperties'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetNextCredentialsProperties'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetNextCredentialsProperties'
        description: change properties data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: changeProperties
  /api/Accounts/{accountId}/Verify:
    post:
      description: "This method marks an account for verification by the CPM, and\
        \ can be used in versions from v9.10.\r\n\r\nThe user who runs this web service\
        \ requires the following permission in the Safe where the privileged account\
        \ is stored:\r\n'Initiate CPM password management operations'"
      operationId: Accounts_Verify
      parameters:
      - description: The unique ID of the account.
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
  /api/Accounts/{id}:
    delete:
      description: "This method deletes a specific account in the Vault.\r\nThe user\
        \ who runs this web service requires Delete Accounts permission in the Vault"
      operationId: Accounts_DeleteAccount
      parameters:
      - description: "The account's unique ID, composed of the SafeID and internal\
          \ AccountID of the account to delete."
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Accounts
    get:
      description: "This method returns information about an account identified by\
        \ its id.\r\n\r\nThe user who runs this web service requires List Accounts\
        \ permission in the Vault."
      operationId: Accounts_GetAccount
      parameters:
      - description: The account's unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountModel'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountModel'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountModel'
          description: OK
      tags:
      - Accounts
  /api/Accounts/{id}/LinkAccount:
    post:
      description: "This method gives the ability to associate a linked account that\
        \ already exists on the account level.\r\nIt can be Reconcile, Logon Account\
        \ or other linked account which is defined in the platform configuration.\r\
        \nPlease not: The type of linked accounts allowed are determined in the platform\
        \ settings. Not every platform supports every type of linked account.\r\n\
        In order to run this service the user needs the following Safe member authorization\
        \ (the safe of the linked account):\r\nList accounts\r\nUpdate account properties"
      operationId: Accounts_LinkAccount
      parameters:
      - description: The unique ID of the account.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkAccountData'
          text/json:
            schema:
              $ref: '#/components/schemas/LinkAccountData'
          application/xml:
            schema:
              $ref: '#/components/schemas/LinkAccountData'
          text/xml:
            schema:
              $ref: '#/components/schemas/LinkAccountData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkAccountData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkAccountData'
        description: The details of the linked account.
        required: true
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Accounts
      x-codegen-request-body-name: linkAccount
  /api/Accounts/AdHocConnect:
    post:
      description: "This method allows you to connect through PSM without using an\
        \ existing account, by returning RDP settings that can be used with an RDP\
        \ client application or settings for the PSMGW.\r\n\r\nYou must enable the\
        \ Privileged Session Monitoring and Secure Connect via the PVWA configuration.\r\
        \n\r\nFor more information, refer to Configuring the PSM Session User Experience\
        \ for Connections Through PVWA in the Privileged Account Security Implementation\
        \ Guide."
      operationId: Accounts_AdHocConnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdHocConnectionData'
          text/json:
            schema:
              $ref: '#/components/schemas/AdHocConnectionData'
          application/xml:
            schema:
              $ref: '#/components/schemas/AdHocConnectionData'
          text/xml:
            schema:
              $ref: '#/components/schemas/AdHocConnectionData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdHocConnectionData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdHocConnectionData'
        description: The information for the connection request.
        required: true
      responses:
        "200":
          content: {}
          description: "The content of an RDP file. For example: full address: 10.10.11.70\
            \ server port: 3389 username: s:PSM@1d6de91f. Can also be PSMGW JSON response\
            \ depending on the configuration for example: {\"PSMGWURL\": https://1.1.1.1:8443/guac/direct,\
            \ \"PSMGWRequest\": <Base64EncodedRequest>}. The PSMGW can be connected\
            \ via post request to the given URL with the body parameter as json"
      tags:
      - Accounts
      x-codegen-request-body-name: connectionData
  /api/Auth/{type}/Logon:
    post:
      description: "This method authenticates a user to the Vault and returns a token\
        \ that can be used in subsequent web services calls.\r\n\r\nIn addition, this\
        \ method allows you to set a new password.\r\n\r\nAfter the configured timeout\
        \ expires, users have to log on again using their username and password.\r\
        \n\r\nUsers can authenticate using CyberArk, Windows, LDAP, RADIUS or SAML\
        \ authentication.\r\n\r\nFor Windows authentication type:\r\n\r\nWindows authentication\
        \ require to negotiate NTLM request and response access in order to logon\
        \ using  windows credentials.\r\n\r\nFor SAML authentication type:\r\n\r\n\
        For SAML authentication you need to send the header \"Content-Type\" with\
        \ value set to \"application/x-www-form-urlencoded\", alongside the following\
        \ keys:  \r\n\r\n•\t“SAMLResponse” and its value (Required)\r\n\r\n•\t“apiUse”\
        \ set to “true” (Required)\r\n\r\n•\t“concurrentSession” set to \"true\" or\
        \ \"false\" (Optional)\r\n\r\n•\t“secureMode” set to \"true\" or \"false\"\
        \ (Optional)\r\n\r\nThe keys should be encoded in key-value tuples separated\
        \ by '&amp;'.  <br />\r\nEach key and value should be separated by  '=’."
      operationId: Auth_Logon
      parameters:
      - description: "The authentication type. (for example: cyberark)"
        in: path
        name: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogonData'
          text/json:
            schema:
              $ref: '#/components/schemas/LogonData'
          application/xml:
            schema:
              $ref: '#/components/schemas/LogonData'
          text/xml:
            schema:
              $ref: '#/components/schemas/LogonData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogonData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogonData'
        description: The login information.
        required: true
      responses:
        "200":
          content: {}
          description: The session token
      tags:
      - Auth
      x-codegen-request-body-name: data
  /api/Auth/Logoff:
    post:
      description: This method logs off the user and removes the Vault session.
      operationId: Auth_Logoff
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoffData'
            text/json:
              schema:
                $ref: '#/components/schemas/LogoffData'
            application/xml:
              schema:
                $ref: '#/components/schemas/LogoffData'
            text/xml:
              schema:
                $ref: '#/components/schemas/LogoffData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LogoffData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LogoffData'
          description: The logoff result
      tags:
      - Auth
  /api/AutomaticOnboardingRules:
    get:
      description: "This method returns information about all the defined onboarding\
        \ rules.\r\nThe user who runs this web service must belong to the following\
        \ group: Vault Admins"
      operationId: AutomaticOnboardingRules_GetAutomaticOnboardingRules
      parameters:
      - description: List of names
        explode: true
        in: query
        name: names
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            text/json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            application/xml:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            text/xml:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
          description: List of all the defined onboarding rules.
      tags:
      - Automatic Onboarding Rules
    post:
      description: "This method adds a new onboarding rule to the Vault that filters\
        \ discovered local privileged pending accounts. When a discovered pending\
        \ account matches a rule, it will automatically be onboarded to the Safe that\
        \ is defined in the rule and the password will be reconciled. \r\n\r\nThe\
        \ Safe and the reconcile account must be created according to the rule’s definition\
        \ before you run this API in order to onboard the pending account automatically.\
        \ The reconcile account must be associated to the platform that is defined\
        \ in the rule. \r\n\r\nThe user who runs this web service must belong to the\
        \ following group: Vault Admins."
      operationId: AutomaticOnboardingRules_PostAutomaticOnboardingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          text/json:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          application/xml:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          text/xml:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
        description: The onboarding rule to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            text/json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            application/xml:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            text/xml:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
          description: The created onboarding rule
      tags:
      - Automatic Onboarding Rules
      x-codegen-request-body-name: data
  /api/AutomaticOnboardingRules/{id}:
    delete:
      description: "This method deletes an automatic onboarding rule from the Vault.\r\
        \n<para />\r\nThe user who runs this web service must belong to the following\
        \ group: Vault Admins."
      operationId: AutomaticOnboardingRules_DeleteAutomaticOnboardingRule
      parameters:
      - description: The unique ID of the rule to delete.
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: The rule was deleted.
      tags:
      - Automatic Onboarding Rules
    put:
      description: "This method Updates an existing Automatic Onboarding Rule.\r\n\
        \            \r\nThe user who runs this web service must belong to the following\
        \ group: Vault Admins."
      operationId: AutomaticOnboardingRules_UpdateAutomaticOnboardingRule
      parameters:
      - description: The unique ID of the rule to update
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          text/json:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          application/xml:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          text/xml:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutomaticOnboardingRuleDataIn'
        description: The onboarding rule to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            text/json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            application/xml:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            text/xml:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AutomaticOnboardingRuleData'
          description: The updated onboarding rule
      tags:
      - Automatic Onboarding Rules
      x-codegen-request-body-name: data
  /api/BulkActions/Accounts:
    get:
      description: This method gets the status of all bulk account uploads that the
        user performed.
      operationId: BulkAccounts_GetUserBulkAccountsActions
      parameters:
      - description: "Maximum number of returned bulk account actions. If not specified,\
          \ the default value is 10. The maximum number that can be specified is 1000."
        in: query
        name: limit
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: Search for bulk account actions filtered by spesific status.
          e.g. Filter=status eq InProgress
        in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBulkAccountsActionsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GetBulkAccountsActionsResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetBulkAccountsActionsResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBulkAccountsActionsResult'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetBulkAccountsActionsResult'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetBulkAccountsActionsResult'
          description: OK
      tags:
      - Bulk Accounts
    post:
      description: "This method allows a developer to add multiple accounts to exsiting\
        \ Safes.\r\nThe response contains the ID of the bulk action that was created."
      operationId: BulkAccounts_AddBulkAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAccountsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BulkAccountsModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/BulkAccountsModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/BulkAccountsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkAccountsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkAccountsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                format: int64
                type: integer
            text/json:
              schema:
                format: int64
                type: integer
            application/xml:
              schema:
                format: int64
                type: integer
            text/xml:
              schema:
                format: int64
                type: integer
            multipart/form-data:
              schema:
                format: int64
                type: integer
            application/vnd.cyberark.api+json:
              schema:
                format: int64
                type: integer
          description: Accepted
      tags:
      - Bulk Accounts
      x-codegen-request-body-name: bulkAccountsModel
  /api/BulkActions/Accounts/{bulkId}:
    get:
      description: "This method returns the result of the bulk account upload, which\
        \ is identified by the ID of the bulk account upload.\r\nWhen the upload has\
        \ finished, the API returns the result. The result contains a list of all\
        \ the accounts that succeeded or failed to upload."
      operationId: BulkAccounts_GetBulkAction
      parameters:
      - description: The identifier of the bulk account upload.
        in: path
        name: bulkId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAccountsOperationResultExtended'
            text/json:
              schema:
                $ref: '#/components/schemas/BulkAccountsOperationResultExtended'
            application/xml:
              schema:
                $ref: '#/components/schemas/BulkAccountsOperationResultExtended'
            text/xml:
              schema:
                $ref: '#/components/schemas/BulkAccountsOperationResultExtended'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/BulkAccountsOperationResultExtended'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/BulkAccountsOperationResultExtended'
          description: OK
      tags:
      - Bulk Accounts
  /api/ComponentsMonitoringDetails/{componentId}:
    get:
      description: "This method returns details about specific components and all\
        \ their installed instances, and system health information for each one."
      operationId: ComponentsMonitoringDetails_GetComponentsMonitoringDetails
      parameters:
      - description: The type of component for which data will be retrieved.
        in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringDetailsData'
            text/json:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringDetailsData'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringDetailsData'
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringDetailsData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringDetailsData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringDetailsData'
          description: The relevant component details
      tags:
      - Components Monitoring Details
  /api/ComponentsMonitoringSummary:
    get:
      description: "This method returns consolidated information about the Vault,\
        \ PVWA, CPM, PSM/PSMP, and AIM, including all clients that are relevant to\
        \ each specific component."
      operationId: ComponentsMonitoringSummary_GetComponentsMonitoringSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringSummaryData'
            text/json:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringSummaryData'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringSummaryData'
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringSummaryData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringSummaryData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/ComponentsMonitoringSummaryData'
          description: The relevant consolidated information
      tags:
      - Components Monitoring Summary
  /api/Configuration/AccessRestriction/AllowedReferrers:
    get:
      description: "This method returns the allowed referrer list. This means access\
        \ is allowed from all URLs in the list, to the PVWA.\r\nAny user who is a\
        \ member of the Vault admins group can run this web service."
      operationId: AllowedReferrerConfiguration_GetAllAllowedReferrers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AllowedReferrerDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AllowedReferrerDto'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AllowedReferrerDto'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AllowedReferrerDto'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/AllowedReferrerDto'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/AllowedReferrerDto'
                type: array
          description: OK
      tags:
      - Allowed Referrer Configuration
    post:
      description: "This method adds a web application URL to the allowed referrer\
        \ list.This means access is allowed from the URL to the PVWA.\r\nAny user\
        \ who is a member of the Vault admins group can run this web service."
      operationId: AllowedReferrerConfiguration_AddAllowedReferrer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowedReferrerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AllowedReferrerDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/AllowedReferrerDto'
          text/xml:
            schema:
              $ref: '#/components/schemas/AllowedReferrerDto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllowedReferrerDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllowedReferrerDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedReferrerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AllowedReferrerDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/AllowedReferrerDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/AllowedReferrerDto'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AllowedReferrerDto'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AllowedReferrerDto'
          description: Created
      tags:
      - Allowed Referrer Configuration
      x-codegen-request-body-name: item
  /api/Configuration/AuthenticationMethods:
    get:
      description: "This method returns a list of all existing authentication methods.\r\
        \nAny user who is a member of the Vault Admins group can run this web service."
      operationId: AuthenticationMethodConfigurations_GetAuthenticationMethods
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethodsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethodsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethodsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethodsResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AuthenticationMethodsResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethodsResponse'
          description: List of authentication methods
      tags:
      - Authentication Method Configurations
    post:
      description: "This method adds a new authentication method.\r\nAny user who\
        \ is a member of the Vault Admins group can run this web service."
      operationId: AuthenticationMethodConfigurations_AddConfigurationValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
        description: The authentication method information
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
          description: Created
      tags:
      - Authentication Method Configurations
      x-codegen-request-body-name: authenticationMethod
  /api/Configuration/AuthenticationMethods/{id}:
    delete:
      description: "This method deletes a specific authentication method.\r\nAny user\
        \ who is a member of the Vault Admins group can run this web service."
      operationId: AuthenticationMethodConfigurations_DeleteAuthenticationMethod
      parameters:
      - description: The authentication method unique identifier.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NoContent
      tags:
      - Authentication Method Configurations
    get:
      description: "This method returns a specific authentication method.\r\nAny user\
        \ who is a member of the Vault Admins group can run this web service."
      operationId: AuthenticationMethodConfigurations_GetAuthenticationMethod
      parameters:
      - description: The authentication method unique identifier.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
          description: OK
      tags:
      - Authentication Method Configurations
    put:
      description: "This method updates the properties for a specific authentication\
        \ method.\r\nAny user who is a member of the Vault Admins group can run this\
        \ web service."
      operationId: AuthenticationMethodConfigurations_UpdateAuthenticationMethod
      parameters:
      - description: The authentication method unique identifier.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationMethodBase'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthenticationMethodBase'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthenticationMethodBase'
          text/xml:
            schema:
              $ref: '#/components/schemas/AuthenticationMethodBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticationMethodBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationMethodBase'
        description: The authentication method information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
          description: OK
      tags:
      - Authentication Method Configurations
      x-codegen-request-body-name: value
  /api/Configuration/LDAP/Directories:
    get:
      description: "This method returns a list of existing directories in the Vault.\r\
        \n\r\nEach directory will be returned with its own data.\r\n\r\nTo run this\
        \ web service, the user must be a member of the Vault Admins group."
      operationId: LDAPDirectories_GetDirectories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPDirectoryBase'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPDirectoryBase'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPDirectoryBase'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPDirectoryBase'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPDirectoryBase'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPDirectoryBase'
                type: array
          description: OK
      tags:
      - LDAP Directories
    post:
      description: "This method creates a directory in the Vault.\r\n\r\nAny user\
        \ who is a member of the Vault Admins group can run this WS.\r\n\r\nNote:\
        \ The BindUsername and BindPassword parameters are only optional if you have\
        \ the bind user account already onboarded to the Vault Internal  safe (the\
        \ account name must be DomainName.pass)"
      operationId: LDAPDirectories_AddDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPDirectory'
          text/json:
            schema:
              $ref: '#/components/schemas/LDAPDirectory'
          application/xml:
            schema:
              $ref: '#/components/schemas/LDAPDirectory'
          text/xml:
            schema:
              $ref: '#/components/schemas/LDAPDirectory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LDAPDirectory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LDAPDirectory'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            text/json:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            application/xml:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            text/xml:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
          description: Created
      tags:
      - LDAP Directories
      x-codegen-request-body-name: directory
  /api/Configuration/LDAP/Directories/{directoryName}:
    delete:
      description: "This method deletes a specific directory along with its mappings.\r\
        \n\r\nEvery user that is a member of the Vault Admins group and has the following\
        \ Vault authorizations can run this web service:\r\n\r\n\"Audit users\",\r\
        \n\"Add/Update users\",\r\n\"Manage Directory mappings\",\r\n\"Add Safes\"\
        ,\r\n\"Reset Users' Passwords\",\r\n\"Activate Users\",\r\n\"Add Network Areas\"\
        ,\r\n\"Manage Server File Categories\"\r\n\r\nNote: Once a mapping is deleted,\
        \ all LDAP users created in the Vault and mapped to this mapping will be automatically\
        \ deleted in the Vault during the next periodic LDAP sync."
      operationId: LDAPDirectories_DeleteDirectory
      parameters:
      - in: path
        name: directoryName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Deleted
      tags:
      - LDAP Directories
    get:
      description: "This method returns all the details of a specific directory that\
        \ is defined in the Vault.\r\n\r\nTo run this web service, the user must be\
        \ a member of the Vault Admins group and have Audit Users permissions.\r\n\
        \r\nNote: be sure to add '/' at the end of the URL of this web service."
      operationId: LDAPDirectories_GetDirectory
      parameters:
      - description: The address/DNS name of the domain.
        in: path
        name: directoryName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            text/json:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            application/xml:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            text/xml:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LDAPDirectory'
          description: OK
      tags:
      - LDAP Directories
  /api/Configuration/LDAP/Directories/{directoryName}/Mappings:
    get:
      description: "This method returns a list of existing directory mappings in the\
        \ Vault.\r\n\r\nTo run this web service, the user must be a member of the\
        \ Vault Admins group and have\r\npermissions to \"Manage Directory Mapping\"\
        \ (Vault Authorization)."
      operationId: LDAPDirectories_GetDirectoryMappings
      parameters:
      - description: Directory name
        in: path
        name: directoryName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPMappingData'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPMappingData'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPMappingData'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPMappingData'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPMappingData'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/LDAPMappingData'
                type: array
          description: OK
      tags:
      - LDAP Directories
    post:
      description: "This method creates a directory mapping in the Vault.\r\n\r\n\
        Every user that is a member of the Vault Admins group and has the following\
        \ Vault authorizations can run this web service:\r\n\r\n\"Audit users\",\r\
        \n\"Add/Update users\",\r\n\"Manage Directory mappings\""
      operationId: LDAPDirectories_AddDirectoryMapping
      parameters:
      - in: path
        name: directoryName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          text/json:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          application/xml:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          text/xml:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            text/json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            application/xml:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            text/xml:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
          description: Created
      tags:
      - LDAP Directories
      x-codegen-request-body-name: mappingData
  /api/Configuration/LDAP/Directories/{directoryName}/Mappings/{mappingID}:
    delete:
      description: "This method deletes a specific directory mapping.\r\n\r\nTo run\
        \ this method you must:\r\n\r\n1. Be a member of Vault Admin group and have\
        \ the Manage Directory Mapping authorization.   \r\n2. Have at least all the\
        \ authorizations that the mapping has.\r\n\r\n \r\n  Note: Once a mapping\
        \ is deleted, all LDAP users created in the Vault and mapped to this mapping\
        \ will be automatically deleted from the vault during the next periodic LDAP\
        \ sync."
      operationId: LDAPDirectories_DeleteDirectoryMapping
      parameters:
      - description: The Directory name
        in: path
        name: directoryName
        required: true
        schema:
          type: string
      - description: The Mapping id to delete
        in: path
        name: mappingID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: NoContent
      tags:
      - LDAP Directories
    get:
      description: "This method returns all the details of specific directory mapping\
        \ that is defined in the Vault.\r\nTo run this web service, the user must\
        \ be a member of the Vault Admins group and have permissions to \"Manage Directory\
        \ Mapping\" (Vault Authorization)."
      operationId: LDAPDirectories_GetDirectoryMapping
      parameters:
      - description: The address/DNS name of the domain.
        in: path
        name: directoryName
        required: true
        schema:
          type: string
      - description: Unique ID of the directory mapping.
        in: path
        name: mappingID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            text/json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            application/xml:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            text/xml:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
          description: OK
      tags:
      - LDAP Directories
    put:
      description: "This method edits an existing directory mapping.\r\nEvery user\
        \ that is a member of the Vault Admins group and has the following Vault authorizations\
        \ can run this web service:\r\n\r\n\"Audit users\"\r\n\"Add/Update users\"\
        \r\n\"Manage Directory mappings\""
      operationId: LDAPDirectories_UpdateDirectoryMapping
      parameters:
      - description: Directory name
        in: path
        name: directoryName
        required: true
        schema:
          type: string
      - description: Mapping ID
        in: path
        name: mappingID
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          text/json:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          application/xml:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          text/xml:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LDAPMappingData'
        description: Updated Mapping data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            text/json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            application/xml:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            text/xml:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LDAPMappingData'
          description: OK
      tags:
      - LDAP Directories
      x-codegen-request-body-name: mappingToEdit
  /api/Configuration/LDAP/Directories/{directoryName}/Mappings/Reorder:
    post:
      description: "This method will modify the order of all mappings that belong\
        \ to a certain directory.\r\n Every user that is a member of the Vault Admins\
        \ group and has the following Vault authorizations can run this web service:\r\
        \n\r\n\"Audit users\",\r\n\"Add/Update users\",\r\n\"Manage Directory mappings\""
      operationId: LDAPDirectories_SetDirectoryMappingsOrder
      parameters:
      - description: Directory name
        in: path
        name: directoryName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPMappingsOrder'
          text/json:
            schema:
              $ref: '#/components/schemas/LDAPMappingsOrder'
          application/xml:
            schema:
              $ref: '#/components/schemas/LDAPMappingsOrder'
          text/xml:
            schema:
              $ref: '#/components/schemas/LDAPMappingsOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LDAPMappingsOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LDAPMappingsOrder'
        required: true
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - LDAP Directories
      x-codegen-request-body-name: mappingsOrder
  /api/Configuration/OIDC/Providers:
    get:
      description: "This method return a list of all OIDC Identity Providers.\r\n\r\
        \nAny user who is a member of the Vault Admins group can run this web service."
      operationId: OIDCConfiguration_GetProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPConfigurations'
            text/json:
              schema:
                $ref: '#/components/schemas/OPConfigurations'
            application/xml:
              schema:
                $ref: '#/components/schemas/OPConfigurations'
            text/xml:
              schema:
                $ref: '#/components/schemas/OPConfigurations'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/OPConfigurations'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/OPConfigurations'
          description: OK
      tags:
      - OIDC Configuration
    post:
      description: "This method creates an OIDC Identity Provider in the Vault.\r\n\
        \r\nAny user who is a member of the Vault Admins group can run this web service."
      operationId: OIDCConfiguration_AddProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPConfigurationData'
          text/json:
            schema:
              $ref: '#/components/schemas/OPConfigurationData'
          application/xml:
            schema:
              $ref: '#/components/schemas/OPConfigurationData'
          text/xml:
            schema:
              $ref: '#/components/schemas/OPConfigurationData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OPConfigurationData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OPConfigurationData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            text/json:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            application/xml:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            text/xml:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
          description: Created
      tags:
      - OIDC Configuration
      x-codegen-request-body-name: configurationData
  /api/Configuration/OIDC/Providers/{id}:
    delete:
      description: "This method deletes a specific OIDC Identity Provider.\r\n\r\n\
        Any user who is a member of the Vault Admins group can run this web service."
      operationId: OIDCConfiguration_DeleteProvider
      parameters:
      - description: "The unique identifier of the provider.\r\n            This ID\
          \ is used to identify the OIDC Identity Provider in PVWA."
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NoContent
      tags:
      - OIDC Configuration
    get:
      description: "This method returns a specific OIDC Identity Provider.\r\n\r\n\
        Any user who is a member of the Vault Admins group can run this web service."
      operationId: OIDCConfiguration_GetProvider
      parameters:
      - description: "The unique identifier of the provider.\r\n            This ID\
          \ is used to identify the OIDC Identity Provider in PVWA."
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            text/json:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            application/xml:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            text/xml:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/OPConfigurationData'
          description: OK
      tags:
      - OIDC Configuration
    put:
      description: "This method updates an existing OIDC Identity Provider.\r\n\r\n\
        Any user who is a member of the Vault Admins group can run this web service."
      operationId: OIDCConfiguration_UpdateProvider
      parameters:
      - description: "The unique identifier of the provider.\r\n            This ID\
          \ is used to identify the OIDC Identity Provider in PVWA."
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPConfigurationBase'
          text/json:
            schema:
              $ref: '#/components/schemas/OPConfigurationBase'
          application/xml:
            schema:
              $ref: '#/components/schemas/OPConfigurationBase'
          text/xml:
            schema:
              $ref: '#/components/schemas/OPConfigurationBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OPConfigurationBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OPConfigurationBase'
        required: true
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - OIDC Configuration
      x-codegen-request-body-name: configurationData
  /api/ConnectionComponents/import:
    post:
      description: This method allows administrators to import a new connection component.
      operationId: ConnectionComponents_Import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportConnectionComponentData'
          text/json:
            schema:
              $ref: '#/components/schemas/ImportConnectionComponentData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportConnectionComponentData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportConnectionComponentData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportConnectionComponentData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportConnectionComponentData'
        description: The ZIP file containing the connection component and additional
          configuration parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportConnectionComponentResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ImportConnectionComponentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportConnectionComponentResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportConnectionComponentResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ImportConnectionComponentResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/ImportConnectionComponentResponse'
          description: The unique ID of the connection component
      tags:
      - Connection Components
      x-codegen-request-body-name: importConnectionComponent
  /api/DiscoveredAccounts:
    delete:
      description: "This method deletes all discovered accounts and related dependencies\
        \ from the Pending Accounts list.\r\n\r\nTo run this web service, the user\
        \ must be a member of the Vault admins group.\r\n            \r\nNote: When\
        \ thousands of accounts are deleted, it may take a few minutes to complete\
        \ the process."
      operationId: DiscoveredAccounts_DeleteDiscoveredAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Discovered Accounts
    get:
      description: "This method returns a list of all the discovered accounts from\
        \ the Pending Accounts list.\r\n\r\nTo run this web service, the user must\
        \ be a member of the Vault admins group.\r\n\r\nNote: Discovered accounts\
        \ that were onboarded either manually or automatically, according to predefined\
        \ rules, won't be returned using this method."
      operationId: DiscoveredAccounts_GetDiscoveredAccounts
      parameters:
      - description: "Searches according to REST standard (search=\"search word\"\
          ).\r\n\r\nSearch is supported for userName and address."
        in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: "The type of search to perform. \r\n\r\nThe keyword can either\
          \ be contained within the account property values, or at the beginning of\
          \ the value\r\nspecified in the search parameter.\r\n\r\nWhen using a keyword\
          \ at the beginning of a value, performance is enhanced.\r\n\r\nValid values:\
          \ contains (default) or startswith"
        in: query
        name: searchType
        schema:
          enum:
          - Contains
          - StartsWith
          type: string
      - description: The offset of the first returned accounts into the list of results.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: "The maximum number of returned accounts. \r\n\r\nIf not specified,\
          \ the server limits the results to 100.\r\n\r\nThe maximum number that can\
          \ be specified is 1000."
        in: query
        name: limit
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      - description: "Search for accounts filtered by:\r\n\r\n• platformType - Get\
          \ discovered accounts of a specific platform, using the platform type name.\r\
          \n\r\n    Usage: filter=platformType eq Windows Server Local\r\n    \r\n\
          \    Type: string\r\n    \r\n    Valid values:\r\n    \r\n        o Windows\
          \ Server Local\r\n        \r\n        o Windows Desktop Local\r\n      \
          \  \r\n        o Windows Domain\r\n        \r\n        o Unix\r\n      \
          \  \r\n        o Unix SSH Key\r\n        \r\n        o AWS\r\n        \r\
          \n        o AWS Access Keys\r\n        \r\n        o Azure Password Management\r\
          \n    \r\n• privileged - Get only privileged or non-privileged discovered\
          \ accounts.\r\n\r\n    Usage: filter=privileged eq true\r\n    \r\n    Type:\
          \ boolean\r\n    \r\n    Valid values: true/false\r\n    \r\n• accountEnabled\
          \ - Get only enabled or disabled discovered accounts.\r\n   \r\n    Usage:\
          \ filter=accountEnabled eq true\r\n    \r\n    Type: boolean\r\n    \r\n\
          \    Valid values: true/false\r\n            \r\n\r\nNote: To use more than\
          \ one filter, you can use the AND operator. \r\n\r\n    filter=platformType\
          \ eq Windows Server Local AND privileged eq true"
        in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccountsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccountsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccountsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccountsResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccountsResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccountsResponse'
          description: OK
      tags:
      - Discovered Accounts
    post:
      description: "This RPC service adds newly discovered accounts and its dependencies.\r\
        \nThe account is onboarded according to matching onboarding rules or added\
        \ directly to the Pending Accounts list.\r\n\r\nIf the account already exists\
        \ in the Pending Account list, it will be updated as needed.\r\n\r\nIf the\
        \ onboarded process failed for any reason, the account will be added to the\
        \ Pending Accounts list.\r\n\r\nTo run this web service, you need the following:\r\
        \n\r\n1. Owner of 'PasswordManager_Pending' Safe with the following permissions\
        \ to add pending accounts:\r\n\r\na. Update Account Properties\r\n\r\nb. Add\
        \ Account\r\n\r\nc. List Files\r\n\r\n2. Owner of the target Safe of the on-boarding\
        \ rule with the following permissions to on-board the account:\r\n\r\na. Update\
        \ Account Properties\r\n\r\nb. Add Account\r\n\r\nc. Initiate CPM account\
        \ management operations"
      operationId: DiscoveredAccounts_AddDiscoveredAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveredAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/DiscoveredAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/DiscoveredAccount'
          text/xml:
            schema:
              $ref: '#/components/schemas/DiscoveredAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscoveredAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscoveredAccount'
        description: The discovered account to add
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveredAccountResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscoveredAccountResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscoveredAccountResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/DiscoveredAccountResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/DiscoveredAccountResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/DiscoveredAccountResponse'
          description: Created
      tags:
      - Discovered Accounts
      x-codegen-request-body-name: discoveredAccount
  /api/DiscoveredAccounts/{id}:
    get:
      description: "This method returns information about a discovered account and\
        \ its dependencies from the Pending Accounts list.\r\nThe discovered account\
        \ is identified by its ID.\r\n\r\nTo run this web service, the user must be\
        \ a member of the Vault admins group.\r\n\r\nNote: Discovered accounts that\
        \ were onboarded either manually or automatically, according to predefined\
        \ rules, won't be returned using this method."
      operationId: DiscoveredAccounts_GetDiscoveredAccount
      parameters:
      - description: The account's unique ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccount'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccount'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccount'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredAccount'
          description: OK
      tags:
      - Discovered Accounts
  /api/IncomingRequests:
    get:
      description: This method returns a list of all the requests for the confirmer
        to respond to.
      operationId: IncomingRequests_GetRequests
      parameters:
      - description: Only requests waiting for approval will be listed.
        in: query
        name: onlyWaiting
        schema:
          type: boolean
      - description: "Expired requests\twill be included in the list."
        in: query
        name: expired
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
          description: List of all the relevant requests
      tags:
      - Incoming Requests
  /api/IncomingRequests/{RequestID}:
    get:
      description: This method returns details of a specific request in the Incoming
        Requests list.
      operationId: IncomingRequests_GetRequest
      parameters:
      - description: The unique ID of the request.
        in: path
        name: RequestID
        required: true
        schema:
          type: string
      - description: The unique ID of the request.
        in: query
        name: requestID
        schema:
          type: string
      - in: query
        name: safeName
        schema:
          type: string
      - in: query
        name: requestorUserName
        schema:
          type: string
      - in: query
        name: requestorReason
        schema:
          type: string
      - in: query
        name: userReason
        schema:
          type: string
      - in: query
        name: creationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: expirationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operationType
        schema:
          format: int32
          type: integer
      - in: query
        name: accessType
        schema:
          type: string
      - in: query
        name: confirmationsLeft
        schema:
          format: int64
          type: integer
      - in: query
        name: accessFrom
        schema:
          format: int64
          type: integer
      - in: query
        name: accessTo
        schema:
          format: int64
          type: integer
      - in: query
        name: status
        schema:
          format: int32
          type: integer
      - in: query
        name: statusTitle
        schema:
          type: string
      - in: query
        name: invalidRequestReason
        schema:
          format: int32
          type: integer
      - in: query
        name: currentConfirmationLevel
        schema:
          format: int32
          type: integer
      - in: query
        name: requiredConfirmersCountLevel2
        schema:
          format: int32
          type: integer
      - in: query
        name: ticketingSystemProperties.name
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.number
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.status
        schema:
          type: string
      - in: query
        name: additionalInfo
        schema:
          type: object
      - in: query
        name: accountDetails.accountID
        schema:
          type: string
      - in: query
        name: accountDetails.properties
        schema:
          type: object
      - explode: true
        in: query
        name: confirmers
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/IncomingRequest'
          description: The relevant request
      tags:
      - Incoming Requests
  /api/IncomingRequests/{RequestID}/confirm:
    post:
      description: "This method enables a request confirmer to confirm a single request,\
        \ identified by its request ID."
      operationId: IncomingRequests_ConfirmRequests
      parameters:
      - description: The unique ID of the request to confirm.
        in: path
        name: RequestID
        required: true
        schema:
          type: string
      - in: query
        name: requestorFullName
        schema:
          type: string
      - description: The unique ID of the request to confirm.
        in: query
        name: requestID
        schema:
          type: string
      - in: query
        name: safeName
        schema:
          type: string
      - in: query
        name: requestorUserName
        schema:
          type: string
      - in: query
        name: requestorReason
        schema:
          type: string
      - in: query
        name: userReason
        schema:
          type: string
      - in: query
        name: creationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: expirationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operationType
        schema:
          format: int32
          type: integer
      - in: query
        name: accessType
        schema:
          type: string
      - in: query
        name: confirmationsLeft
        schema:
          format: int64
          type: integer
      - in: query
        name: accessFrom
        schema:
          format: int64
          type: integer
      - in: query
        name: accessTo
        schema:
          format: int64
          type: integer
      - in: query
        name: status
        schema:
          format: int32
          type: integer
      - in: query
        name: statusTitle
        schema:
          type: string
      - in: query
        name: invalidRequestReason
        schema:
          format: int32
          type: integer
      - in: query
        name: currentConfirmationLevel
        schema:
          format: int32
          type: integer
      - in: query
        name: requiredConfirmersCountLevel2
        schema:
          format: int32
          type: integer
      - in: query
        name: ticketingSystemProperties.name
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.number
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.status
        schema:
          type: string
      - in: query
        name: additionalInfo
        schema:
          type: object
      - in: query
        name: accountDetails.accountID
        schema:
          type: string
      - in: query
        name: accountDetails.properties
        schema:
          type: object
      - explode: true
        in: query
        name: confirmers
        schema:
          items:
            type: object
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          text/json:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
        description: The confirmation info.
        required: true
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Incoming Requests
      x-codegen-request-body-name: confirmationInfo
  /api/IncomingRequests/{RequestID}/reject:
    post:
      description: "This method enables a request confirmer to reject a single request,\
        \ identified by its request ID."
      operationId: IncomingRequests_RejectRequests
      parameters:
      - description: The unique ID of the request to reject.
        in: path
        name: RequestID
        required: true
        schema:
          type: string
      - in: query
        name: requestorFullName
        schema:
          type: string
      - description: The unique ID of the request to reject.
        in: query
        name: requestID
        schema:
          type: string
      - in: query
        name: safeName
        schema:
          type: string
      - in: query
        name: requestorUserName
        schema:
          type: string
      - in: query
        name: requestorReason
        schema:
          type: string
      - in: query
        name: userReason
        schema:
          type: string
      - in: query
        name: creationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: expirationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operationType
        schema:
          format: int32
          type: integer
      - in: query
        name: accessType
        schema:
          type: string
      - in: query
        name: confirmationsLeft
        schema:
          format: int64
          type: integer
      - in: query
        name: accessFrom
        schema:
          format: int64
          type: integer
      - in: query
        name: accessTo
        schema:
          format: int64
          type: integer
      - in: query
        name: status
        schema:
          format: int32
          type: integer
      - in: query
        name: statusTitle
        schema:
          type: string
      - in: query
        name: invalidRequestReason
        schema:
          format: int32
          type: integer
      - in: query
        name: currentConfirmationLevel
        schema:
          format: int32
          type: integer
      - in: query
        name: requiredConfirmersCountLevel2
        schema:
          format: int32
          type: integer
      - in: query
        name: ticketingSystemProperties.name
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.number
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.status
        schema:
          type: string
      - in: query
        name: additionalInfo
        schema:
          type: object
      - in: query
        name: accountDetails.accountID
        schema:
          type: string
      - in: query
        name: accountDetails.properties
        schema:
          type: object
      - explode: true
        in: query
        name: confirmers
        schema:
          items:
            type: object
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          text/json:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmRejectData'
        description: The confirmation info.
        required: true
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Incoming Requests
      x-codegen-request-body-name: rejectionInfo
  /api/LiveSessions:
    get:
      description: This method returns details of live sessions.
      operationId: LiveSessions_GetLiveSessions
      parameters:
      - description: The returned URL.
        in: query
        name: returnURL
        schema:
          type: string
      - description: Determines the number of lives sessions that are returned in
          the list. The maximum value is defined in the MaxRecords property in Options
          -> Privileged Session Management -> General Setting -> Search Properties.
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Determines which recording results will be returned, according\
          \ to a specific place in the returned list. This value defines the recording's\
          \ place in the list and how many results will be skipped."
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - in: query
        name: useCache
        schema:
          type: boolean
      - description: "The sort can be done by each property on the recording file:\
          \ RiskScore, FileName, SafeName, FolderName, PSMVaultUserName, FromIP, RemoteMachine,\
          \ Client, Protocol, AccountUserName, AccountAddress, AccountPlatformID,\
          \ PSMStartTime, TicketID. The sort can be in ascending or descending order.\
          \ To sort in descending order, specify ' - ' (dash) before the recording\
          \ property by which to sort."
        explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Returns lives sessions that are filtered by properties that contain
          the specified search text.
        in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: Returns lives sessions with specific activities.
        in: query
        name: activities
        schema:
          type: string
      - description: Returns lives sessions from a specific date.
        in: query
        name: fromTime
        schema:
          format: int64
          type: integer
      - description: Returns lives sessions before a specific date.
        in: query
        name: toTime
        schema:
          format: int64
          type: integer
      - description: Returns lives sessions that use accounts from a specific Safe.
        in: query
        name: safe
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveSession'
            text/json:
              schema:
                $ref: '#/components/schemas/LiveSession'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveSession'
            text/xml:
              schema:
                $ref: '#/components/schemas/LiveSession'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LiveSession'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LiveSession'
          description: List of the relevant live sessions
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}:
    get:
      description: This method returns details of an active session.
      operationId: LiveSessions_GetLiveSession
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      - in: query
        name: returnURL
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}/activities:
    get:
      description: This method returns activities of an active session.
      operationId: LiveSessions_GetLiveSessionActivities
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}/monitor:
    get:
      description: "This method returns connection data necessary to launch live monitoring\
        \ of an active PSM session.\r\n  \r\nNote that the Accept header can be passed\
        \ to receive the connection data as application/json"
      operationId: LiveSessions_PSMMonitor
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}/properties:
    get:
      description: This method returns properties of an active session.
      operationId: LiveSessions_GetLiveSessionProperties
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}/resume:
    post:
      description: This method resume a suspended active PSM session and allow the
        privileged user to continue working with the session.
      operationId: LiveSessions_PSMSessionResume
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}/suspend:
    post:
      description: "This method suspend (prevents a user from interacting with an\
        \ active PSM session) until a security manager resumes the session. \r\nSecurity\
        \ teams can review the potentially risky session's audit trail to determine\
        \ whether to allow the privileged user to continue to work with the session."
      operationId: LiveSessions_PSMSuspend
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Live Sessions
  /api/LiveSessions/{liveSessionId}/terminate:
    post:
      description: "This method terminates an active PSM session immediately.\r\n\
        This enables the system to terminate an active PSM session immediately to\
        \ prevent high-risk activities.\r\n\r\nIn the PVWA system configuration, specify\
        \ the following:\r\n            \r\nAllowPSMNotifications - Set Privileged\
        \ Session Management &gt; General settings &gt; Server settings &gt; Live\
        \ Session Monitoring settings &gt; AllowPSMNotifications to Yes to enable\
        \ users to suspend active sessions.\r\nNote: This parameter is not supported\
        \ on PSMP and OPM sessions.\r\nTerminating Active Sessions Users And Groups\
        \ - Users need to be added as a user in the Terminating Active Sessions Users\
        \ And Groups parameter.The default group is PSMLiveSessionTerminators."
      operationId: LiveSessions_PSMAutoTermination
      parameters:
      - description: The unique ID of the PSM Active Session.
        in: path
        name: liveSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: ""
      tags:
      - Live Sessions
  /api/LoginsInfo:
    get:
      operationId: LoginsInfo_GetLoginsInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginsInfoData'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginsInfoData'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginsInfoData'
            text/xml:
              schema:
                $ref: '#/components/schemas/LoginsInfoData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/LoginsInfoData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/LoginsInfoData'
          description: This method returns data about the User that is currently logged
            into the system
      tags:
      - Logins Info
  /api/MyRequests:
    get:
      description: This method returns a list of the end user's requests.
      operationId: MyRequests_GetRequests
      parameters:
      - description: '"Only requests waiting for approval will be listed.'
        in: query
        name: onlyWaiting
        schema:
          type: boolean
      - description: "Expired requests\twill be included in the list."
        in: query
        name: expired
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/MyRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/MyRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/MyRequest'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/MyRequest'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/MyRequest'
          description: List of the end user's requests
      tags:
      - My Requests
    post:
      description: This method creates an access request for a specific account. This
        account may be either a password account or an SSH Key account.
      operationId: MyRequests_CreateRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/NewRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/NewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewRequest'
        description: The request to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
            text/json:
              schema:
                $ref: '#/components/schemas/Request'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request'
            text/xml:
              schema:
                $ref: '#/components/schemas/Request'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Request'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/Request'
          description: The created request
      tags:
      - My Requests
      x-codegen-request-body-name: request
  /api/MyRequests/{RequestID}:
    delete:
      description: This method deletes a request made by a user.
      operationId: MyRequests_DeleteMyRequests
      parameters:
      - description: "The request's unique ID, composed of the SafeName and internal\
          \ RequestID."
        in: path
        name: RequestID
        required: true
        schema:
          type: string
      - description: "The request's unique ID, composed of the SafeName and internal\
          \ RequestID."
        in: query
        name: requestID
        schema:
          type: string
      - in: query
        name: safeName
        schema:
          type: string
      - in: query
        name: requestorUserName
        schema:
          type: string
      - in: query
        name: requestorReason
        schema:
          type: string
      - in: query
        name: userReason
        schema:
          type: string
      - in: query
        name: creationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: expirationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operationType
        schema:
          format: int32
          type: integer
      - in: query
        name: accessType
        schema:
          type: string
      - in: query
        name: confirmationsLeft
        schema:
          format: int64
          type: integer
      - in: query
        name: accessFrom
        schema:
          format: int64
          type: integer
      - in: query
        name: accessTo
        schema:
          format: int64
          type: integer
      - in: query
        name: status
        schema:
          format: int32
          type: integer
      - in: query
        name: statusTitle
        schema:
          type: string
      - in: query
        name: invalidRequestReason
        schema:
          format: int32
          type: integer
      - in: query
        name: currentConfirmationLevel
        schema:
          format: int32
          type: integer
      - in: query
        name: requiredConfirmersCountLevel2
        schema:
          format: int32
          type: integer
      - in: query
        name: ticketingSystemProperties.name
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.number
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.status
        schema:
          type: string
      - in: query
        name: additionalInfo
        schema:
          type: object
      - in: query
        name: accountDetails.accountID
        schema:
          type: string
      - in: query
        name: accountDetails.properties
        schema:
          type: object
      - explode: true
        in: query
        name: confirmers
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "204":
          content: {}
          description: Deleted
      tags:
      - My Requests
    get:
      description: This method returns details of all the requests in My Requests
        list.
      operationId: MyRequests_GetRequest
      parameters:
      - in: path
        name: RequestID
        required: true
        schema:
          type: string
      - in: query
        name: requestID
        schema:
          type: string
      - in: query
        name: safeName
        schema:
          type: string
      - in: query
        name: requestorUserName
        schema:
          type: string
      - in: query
        name: requestorReason
        schema:
          type: string
      - in: query
        name: userReason
        schema:
          type: string
      - in: query
        name: creationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: expirationDate
        schema:
          format: int64
          type: integer
      - in: query
        name: operationType
        schema:
          format: int32
          type: integer
      - in: query
        name: accessType
        schema:
          type: string
      - in: query
        name: confirmationsLeft
        schema:
          format: int64
          type: integer
      - in: query
        name: accessFrom
        schema:
          format: int64
          type: integer
      - in: query
        name: accessTo
        schema:
          format: int64
          type: integer
      - in: query
        name: status
        schema:
          format: int32
          type: integer
      - in: query
        name: statusTitle
        schema:
          type: string
      - in: query
        name: invalidRequestReason
        schema:
          format: int32
          type: integer
      - in: query
        name: currentConfirmationLevel
        schema:
          format: int32
          type: integer
      - in: query
        name: requiredConfirmersCountLevel2
        schema:
          format: int32
          type: integer
      - in: query
        name: ticketingSystemProperties.name
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.number
        schema:
          type: string
      - in: query
        name: ticketingSystemProperties.status
        schema:
          type: string
      - in: query
        name: additionalInfo
        schema:
          type: object
      - in: query
        name: accountDetails.accountID
        schema:
          type: string
      - in: query
        name: accountDetails.properties
        schema:
          type: object
      - explode: true
        in: query
        name: confirmers
        schema:
          items:
            type: object
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/MyRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/MyRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/MyRequest'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/MyRequest'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/MyRequest'
          description: The relevant request
      tags:
      - My Requests
  /api/Platforms:
    get:
      description: This method will return all existing account platforms.
      operationId: Platforms_GetPlatforms
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: platformType
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
      - description: The search will be by Platform ID or Platform Name.
        in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - in: query
        name: systemType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlatformModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlatformModel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PlatformModel'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PlatformModel'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/PlatformModel'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/PlatformModel'
                type: array
          description: "A list of all relevant platforms, for each platform the following\
            \ should return:"
      tags:
      - Platforms
  /api/Platforms/{id}:
    get:
      description: This method retrieves details of a specified platform from the
        Vault.
      operationId: Platforms_GetPlaform
      parameters:
      - description: The unique ID of the platform.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Platform'
            text/json:
              schema:
                $ref: '#/components/schemas/Platform'
            application/xml:
              schema:
                $ref: '#/components/schemas/Platform'
            text/xml:
              schema:
                $ref: '#/components/schemas/Platform'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Platform'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/Platform'
          description: The relevant platform information
      tags:
      - Platforms
  /api/Platforms/{PlatformID}/Export:
    post:
      description: "This method enables you to export a platform to a zip file in\
        \ order to import it to a different Vault environment.\r\nNote: This method\
        \ returns a ZIP file that contains only the CPM Policy files and the PVWA\
        \ Settings.\r\nIf there are additional CPM plug-in files, they must be added\
        \ manually by the user to the ZIP file before importing.\r\nThis method can\
        \ be used by members of the Vault Admin group."
      operationId: Platforms_Export
      parameters:
      - in: path
        name: PlatformID
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Stream of the returned ZIP file that contains the CPM Policy
            file and PVWA Settings file.
      tags:
      - Platforms
  /api/Platforms/{PlatformId}/Safes:
    get:
      description: "This method gets platform's safes.\r\nThis method can be used\
        \ by members of the Vault Admin group."
      operationId: Platforms_GetSafesByPlatform
      parameters:
      - in: path
        name: PlatformId
        required: true
        schema:
          type: string
      - in: query
        name: safe
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
            multipart/form-data:
              schema:
                items:
                  type: string
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  type: string
                type: array
          description: The relevant safes' names
      tags:
      - Platforms
  /api/Platforms/Dependents:
    get:
      description: This method allows users to retrieve basic information of all existing
        dependent platforms.
      operationId: Platforms_GetDependentPlaforms
      parameters:
      - in: query
        name: search
        schema:
          maxLength: 100
          minLength: 0
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DependentPlatform'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/DependentPlatform'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/DependentPlatform'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/DependentPlatform'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/DependentPlatform'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/DependentPlatform'
                type: array
          description: A list of all relevant dependent platforms.
      tags:
      - Platforms
  /api/Platforms/Dependents/{platformID}:
    delete:
      description: "This method allows Vault Admins to delete a dependent platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DeleteDependentPlatform
      parameters:
      - description: Unique ID of the dependent platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Dependents/{platformID}/Duplicate:
    post:
      description: "This method allows Vault Admins to duplicate a dependent platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DuplicateDependentPlatform
      parameters:
      - description: Unique ID of the source dependent platform from which to duplicate
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
        description: The details of the new platform.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
      x-codegen-request-body-name: duplicatePlatformDetails
  /api/Platforms/Dependents/{platformID}/Export:
    post:
      description: "This method allows Vault Admins to export a dependent platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_ExportDependentPlatform
      parameters:
      - description: Unique ID of the dependent platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Groups:
    get:
      description: This method allows users to retrieve basic information of all existing
        group platforms.
      operationId: Platforms_GetGroupPlaforms
      parameters:
      - in: query
        name: search
        schema:
          maxLength: 100
          minLength: 0
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupPlatform'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupPlatform'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/GroupPlatform'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/GroupPlatform'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/GroupPlatform'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupPlatform'
                type: array
          description: A list of all relevant group platforms.
      tags:
      - Platforms
  /api/Platforms/Groups/{platformID}:
    delete:
      description: "This method allows Vault Admins to delete a group platform.\r\n\
        To run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DeleteGroupPlatform
      parameters:
      - description: Unique ID of the group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Groups/{platformID}/activate:
    post:
      description: "This method allows Vault Admins to activate a group platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_ActivateGroupPlatform
      parameters:
      - description: Unique ID of the group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Groups/{platformID}/deactivate:
    post:
      description: "This method allows Vault Admins to deactivate a group platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DeactivateGroupPlatform
      parameters:
      - description: Unique ID of the group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Groups/{platformID}/Duplicate:
    post:
      description: "This method allows Vault Admins to duplicate a group platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DuplicateGroupPlatform
      parameters:
      - description: Unique ID of the source group platform from which to duplicate
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
        description: The details of the new platform.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
      x-codegen-request-body-name: duplicatePlatformDetails
  /api/Platforms/Groups/{platformID}/Export:
    post:
      description: "This method allows Vault Admins to export a group platform.\r\n\
        To run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_ExportGroupPlatform
      parameters:
      - description: Unique ID of the group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/import:
    post:
      description: This method allows administrators to import a new platform.
      operationId: Platforms_Import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportPlatformData'
          text/json:
            schema:
              $ref: '#/components/schemas/ImportPlatformData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportPlatformData'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImportPlatformData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportPlatformData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportPlatformData'
        description: The ZIP file containing the platform and additional configuration
          parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPlatformResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ImportPlatformResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportPlatformResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportPlatformResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ImportPlatformResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/ImportPlatformResponse'
          description: The unique ID of the platform.
      tags:
      - Platforms
      x-codegen-request-body-name: importPlatform
  /api/Platforms/RotationalGroups:
    get:
      description: This method allows users to retrieve basic information of all existing
        rotational group platforms.
      operationId: Platforms_GetRotationalGroupPlaforms
      parameters:
      - in: query
        name: search
        schema:
          maxLength: 100
          minLength: 0
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RotationalGroupPlatform'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/RotationalGroupPlatform'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RotationalGroupPlatform'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RotationalGroupPlatform'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/RotationalGroupPlatform'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/RotationalGroupPlatform'
                type: array
          description: A list of all relevant rotational group platforms.
      tags:
      - Platforms
  /api/Platforms/RotationalGroups/{platformID}:
    delete:
      description: "This method allows Vault Admins to delete a rotational group platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DeleteRotationalGroupPlatform
      parameters:
      - description: Unique ID of the rotational group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/RotationalGroups/{platformID}/activate:
    post:
      description: "This method allows Vault Admins to activate a rotational group\
        \ platform.\r\nTo run this web service, the user must be a member of the Vault\
        \ Admins group."
      operationId: Platforms_ActivateRotationalGroupPlatform
      parameters:
      - description: Unique ID of the rotational group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/RotationalGroups/{platformID}/deactivate:
    post:
      description: "This method allows Vault Admins to deactivate a rotational group\
        \ platform.\r\nTo run this web service, the user must be a member of the Vault\
        \ Admins group."
      operationId: Platforms_DeactivateRotationalGroupPlatform
      parameters:
      - description: Unique ID of the rotational group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/RotationalGroups/{platformID}/Duplicate:
    post:
      description: "This method allows Vault Admins to duplicate a rotational group\
        \ platform.\r\nTo run this web service, the user must be a member of the Vault\
        \ Admins group."
      operationId: Platforms_DuplicateRotationalGroupPlatform
      parameters:
      - description: Unique ID of the source rotational group platform from which
          to duplicate
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
        description: The details of the new platform.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
      x-codegen-request-body-name: duplicatePlatformDetails
  /api/Platforms/RotationalGroups/{platformID}/Export:
    post:
      description: "This method allows Vault Admins to export a rotational group platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_ExportRotationalGroupPlatform
      parameters:
      - description: Unique ID of the rotational group platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Targets:
    get:
      description: This method allows users to retrieve basic information of all existing
        target platforms.
      operationId: Platforms_GetTargetPlaforms
      parameters:
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: search
        schema:
          maxLength: 100
          minLength: 0
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetPlatform'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetPlatform'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TargetPlatform'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TargetPlatform'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/TargetPlatform'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetPlatform'
                type: array
          description: A list of all relevant target platforms.
      tags:
      - Platforms
  /api/Platforms/Targets/{platformID}:
    delete:
      description: "This method allows Vault Admins to delete a target platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DeleteTargetPlatform
      parameters:
      - description: Unique ID of the target platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Targets/{platformID}/activate:
    post:
      description: "This method allows Vault Admins to activate a target platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_ActivateTargetPlatform
      parameters:
      - description: Unique ID of the target platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Targets/{platformID}/deactivate:
    post:
      description: "This method allows Vault Admins to deactivate a target platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DeactivateTargetPlatform
      parameters:
      - description: Unique ID of the target platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Targets/{platformID}/Duplicate:
    post:
      description: "This method allows Vault Admins to duplicate a target platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_DuplicateTargetPlatform
      parameters:
      - description: Unique ID of the source target platform from which to duplicate
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          text/xml:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DuplicatePlatform'
        description: The details of the new platform.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
      x-codegen-request-body-name: duplicatePlatformDetails
  /api/Platforms/Targets/{platformID}/Export:
    post:
      description: "This method allows Vault Admins to export a target platform.\r\
        \nTo run this web service, the user must be a member of the Vault Admins group."
      operationId: Platforms_ExportTargetPlatform
      parameters:
      - description: Unique ID of the target platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Platforms
  /api/Platforms/Targets/{platformID}/PrivilegedSessionManagement:
    get:
      description: "This method allows Vault Admins to retrieve the PSM Policy Section\
        \ of a target platform.\r\nTo run this web service, the user must be a member\
        \ of the Vault Admins group."
      operationId: Platforms_GetPrivilegedSessionManagementDetails
      parameters:
      - description: Unique ID of the target platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            text/json:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            application/xml:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            text/xml:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
          description: The target platform PSM Policy details.
      tags:
      - Platforms
    put:
      description: "This method allows Vault Admins to update the PSM policy section\
        \ of a target platform.\r\nTo run this web service, the user must be a member\
        \ of the Vault Admins group."
      operationId: Platforms_SetPrivilegedSessionManagementDetails
      parameters:
      - description: Unique ID of the target platform.
        in: path
        name: platformID
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivilegedSessionManagement'
          text/json:
            schema:
              $ref: '#/components/schemas/PrivilegedSessionManagement'
          application/xml:
            schema:
              $ref: '#/components/schemas/PrivilegedSessionManagement'
          text/xml:
            schema:
              $ref: '#/components/schemas/PrivilegedSessionManagement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PrivilegedSessionManagement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PrivilegedSessionManagement'
        description: Unique ID of the psm server and list of connectors
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            text/json:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            application/xml:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            text/xml:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/PrivilegedSessionManagement'
          description: Update target platform PSM Policy details.
      tags:
      - Platforms
      x-codegen-request-body-name: privilegedSessionManagement
  /api/Platforms/Targets/SystemTypes:
    get:
      description: This method allows users to retrieve all basic information on all
        existing system types.
      operationId: Platforms_GetSystemTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SystemType'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/SystemType'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SystemType'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SystemType'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/SystemType'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/SystemType'
                type: array
          description: A list of all relevant system type
      tags:
      - Platforms
  /api/PSM/Connectors:
    get:
      description: This method allows vault admins to get a list of all connectors
        of an entire environment
      operationId: PSMConnectors_GetPSMConnectorsController
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PSMConnector'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PSMConnector'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PSMConnector'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PSMConnector'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/PSMConnector'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/PSMConnector'
                type: array
          description: A list of all relevant PSM connectors.
      tags:
      - PSM Connectors
  /api/PSM/Servers:
    get:
      description: This method allows vault admins to get a list of all PSM servers
        defined for the environment
      operationId: PSMServers_GetPSMServersController
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PSMServer'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PSMServer'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PSMServer'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PSMServer'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/PSMServer'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/PSMServer'
                type: array
          description: A list of all relevant PSM servers.
      tags:
      - PSM Servers
  /api/Recordings:
    get:
      description: "This method returns the details of recordings of PSM, PSMP or\
        \ OPM sessions."
      operationId: Recordings_GetRecordings
      parameters:
      - description: The returned URL.
        in: query
        name: returnURL
        schema:
          type: string
      - description: Determines the number of recordings that are returned in the
          list. The maximum value is defined in the MaxRecords property in Options
          -> Privileged Session Management -> General Setting -> Search Properties.
        in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: "Determines which recording results will be returned, according\
          \ to a specific place in the returned list. This value defines the recording's\
          \ place in the list and how many results will be skipped."
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - in: query
        name: useCache
        schema:
          type: boolean
      - description: "The sort can be done by each property on the recording file:\
          \ RiskScore, FileName, SafeName, FolderName, PSMVaultUserName, FromIP, RemoteMachine,\
          \ Client, Protocol, AccountUserName, AccountAddress, AccountPlatformID,\
          \ PSMStartTime, TicketID. The sort can be in ascending or descending order.\
          \ To sort in descending order, specify ' - ' (dash) before the recording\
          \ property by which to sort."
        explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Returns recordings that are filtered by properties that contain
          the specified search text.
        in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: Returns recordings with specific activities.
        in: query
        name: activities
        schema:
          type: string
      - description: Returns recordings from a specific date.
        in: query
        name: fromTime
        schema:
          format: int64
          type: integer
      - description: Returns recordings before a specific date.
        in: query
        name: toTime
        schema:
          format: int64
          type: integer
      - description: Returns recordings from a specific Safe.
        in: query
        name: safe
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
            text/json:
              schema:
                $ref: '#/components/schemas/SessionData'
            application/xml:
              schema:
                $ref: '#/components/schemas/SessionData'
            text/xml:
              schema:
                $ref: '#/components/schemas/SessionData'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/SessionData'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/SessionData'
          description: List of the relevant recordings
      tags:
      - Recordings
  /api/Recordings/{recordingId}:
    get:
      description: This method returns details of a recorded session.
      operationId: Recordings_GetRecording
      parameters:
      - description: The unique ID of the PSM Recorded Session.
        in: path
        name: recordingId
        required: true
        schema:
          type: string
      - in: query
        name: returnURL
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Recordings
  /api/Recordings/{recordingId}/activities:
    get:
      description: This method returns activities of a recorded session.
      operationId: Recordings_GetRecordingActivities
      parameters:
      - description: The unique ID of the PSM Recorded Session.
        in: path
        name: recordingId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Recordings
  /api/Recordings/{recordingId}/Play:
    post:
      description: This method returns data stream of a recorded session.
      operationId: Recordings_PlayRecording
      parameters:
      - description: The unique ID of the PSM Recorded Session.
        in: path
        name: recordingId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Recordings
  /api/Recordings/{recordingId}/properties:
    get:
      description: This method returns properties of a recorded session.
      operationId: Recordings_GetRecordingProperties
      parameters:
      - description: The unique ID of the PSM Recorded Session.
        in: path
        name: recordingId
        required: true
        schema:
          type: string
      - in: query
        name: returnURL
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Recordings
  /api/Recordings/{recordingId}/valid:
    get:
      operationId: Recordings_GetRecordingFileValidityStatus
      parameters:
      - in: path
        name: recordingId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - Recordings
  /api/Safes:
    get:
      description: "This method returns a list of all Safes in the Vault that the\
        \ user has permissions for.\r\nThe user who runs this web service must be\
        \ a member of the Safes in the Vault that are returned in the list."
      operationId: Safes_GetSafes
      parameters:
      - in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: offset
        schema:
          format: int64
          type: integer
      - in: query
        name: useCache
        schema:
          type: boolean
      - explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: "Whether or not to return accounts for each Safe as part of the\
          \ response. If not sent, the value will be false."
        in: query
        name: includeAccounts
        schema:
          type: boolean
      - description: "Whether or not to return all Safe data or only SafeName as part\
          \ of the response. If not sent, the value will be true."
        in: query
        name: extendedDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SafeListItem'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/SafeListItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SafeListItem'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SafeListItem'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/SafeListItem'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/SafeListItem'
                type: array
          description: The list of Safes
      tags:
      - Safes
    post:
      description: "This method adds a new Safe to the Vault.\r\nThe user who runs\
        \ this web service requires Add Safes permission in the Vault."
      operationId: Safes_AddSafe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSafeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddSafeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddSafeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddSafeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddSafeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddSafeRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSafeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AddSafeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddSafeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSafeResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AddSafeResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AddSafeResponse'
          description: The added safe
      tags:
      - Safes
      x-codegen-request-body-name: addSafeRequest
  /api/Safes/{safeName}/accountgroups:
    get:
      description: "This method returns all the existing account groups in a specific\
        \ Safe. The user performing this task must have the following permissions\
        \ in the Safe:\r\nList Accounts."
      operationId: Safes_GetGroups
      parameters:
      - description: The name of the Safe where the account groups are.
        in: path
        name: safeName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AccountGroup'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AccountGroup'
          description: List of existing account groups in a specific Safe
      tags:
      - Safes
  /api/Safes/{safeUrlId}:
    delete:
      description: "This method deletes a safe from the Vault.\r\nThe user who runs\
        \ this web service requires Manage Safe permission on the required Safe."
      operationId: Safes_DeleteSafe
      parameters:
      - description: The name of the Safe.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "204":
          content: {}
          description: NoContent
      tags:
      - Safes
    get:
      description: "This method returns information about a specific Safe in the Vault.\r\
        \nThe user who runs this web service must be a member of the Safe in the Vault\
        \ that is returned."
      operationId: Safes_GetSafeDetails
      parameters:
      - description: The name of the Safe.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      - description: "Whether or not to return accounts for each Safe as part of the\
          \ response. If not sent, the value will be False."
        in: query
        name: includeAccounts
        schema:
          type: boolean
      - description: Whether to retrieve from session or not.
        in: query
        name: useCache
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSafeDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSafeDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetSafeDetailsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSafeDetailsResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetSafeDetailsResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetSafeDetailsResponse'
          description: Get Safe Details
      tags:
      - Safes
    put:
      description: "This method updates a single Safe in the Vault.\r\nThe user who\
        \ runs this web service requires Manage safe permissions and ViewOwners permissions\
        \ on the safe."
      operationId: Safes_UpdateSafe
      parameters:
      - description: The name of the Safe used when calling Safe APIs.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSafeRequestBody'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSafeRequestBody'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateSafeRequestBody'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSafeRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateSafeRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateSafeRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSafeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateSafeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdateSafeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSafeResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/UpdateSafeResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/UpdateSafeResponse'
          description: The Updated safe
      tags:
      - Safes
      x-codegen-request-body-name: updateSafeRequestBody
  /api/Safes/{safeUrlId}/members:
    get:
      description: "This method returns the list of members of a Safe.\r\nThe user\
        \ who run this web service requires View Safe Members permission on the Safe."
      operationId: Safes_GetSafeMembers
      parameters:
      - description: The name of the safe to return all its members
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          format: int64
          minimum: 1
          type: integer
      - in: query
        name: offset
        schema:
          format: int64
          type: integer
      - in: query
        name: useCache
        schema:
          type: boolean
      - explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: "<para>Filtering according to REST standard. </para>\r\n<para>memberType\
          \ - Return only members of single type (user or group)</para>\r\n<para>membershipExpired\
          \ - Return only members that have or don't have an expired membership</para>\r\
          \n<para>includePredefinedUsers - Include predefined users in the returned\
          \ list.</para>"
        in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeMemberResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SafeMemberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SafeMemberResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/SafeMemberResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/SafeMemberResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/SafeMemberResponse'
          description: OK
      tags:
      - Safes
    post:
      description: "This method adds an existing user as a Safe member.\r\nThe user\
        \ who run this web service requires Manage and View Members permissions in\
        \ the Safe."
      operationId: Safes_AddSafeMember
      parameters:
      - description: The name of the Safe used when calling Safe APIs.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSafeMemberRequestBody'
          text/json:
            schema:
              $ref: '#/components/schemas/AddSafeMemberRequestBody'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddSafeMemberRequestBody'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddSafeMemberRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddSafeMemberRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddSafeMemberRequestBody'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSafeMemberResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AddSafeMemberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddSafeMemberResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSafeMemberResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/AddSafeMemberResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/AddSafeMemberResponse'
          description: The added member
      tags:
      - Safes
      x-codegen-request-body-name: addSafeMemberRequestBody
  /api/Safes/{safeUrlId}/members/{memberName}:
    delete:
      description: "This method removes a specific member from a Safe.\r\nThe user\
        \ who run this web service requires Manage Safe Members permission on the\
        \ Safe."
      operationId: Safes_DeleteSafeMember
      parameters:
      - description: The name of the Safe from which to delete the member.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      - description: The name of the Safe member to delete from the list of Safe members.
        in: path
        name: memberName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "204":
          content: {}
          description: NoContent
      tags:
      - Safes
    get:
      description: "This method returns a member of a Safe.\r\nTo run this web service,\
        \ the user must have View Safe Members permission for the Safe."
      operationId: Safes_GetSafeMember
      parameters:
      - description: The name of the Safe used when calling Safe APIs.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      - description: "The Vault user name, Domain user name or group name of the Safe\
          \ member."
        in: path
        name: memberName
        required: true
        schema:
          type: string
      - description: Whether to retrieve from session or not.
        in: query
        name: useCache
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSafeMemberResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSafeMemberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetSafeMemberResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSafeMemberResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetSafeMemberResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetSafeMemberResponse'
          description: OK
      tags:
      - Safes
    put:
      description: "This method updates an existing safe member.\r\nThe user who run\
        \ this web service requires Manage and View Safe Members permissions on the\
        \ Safe."
      operationId: Safes_UpdateSafeMember
      parameters:
      - description: The name of the Safe used when calling Safe APIs.
        in: path
        name: safeUrlId
        required: true
        schema:
          type: string
      - description: "The Vault user name, Domain user name or group name of the Safe\
          \ member."
        in: path
        name: memberName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSafeMemberRequestBody'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSafeMemberRequestBody'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateSafeMemberRequestBody'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSafeMemberRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateSafeMemberRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateSafeMemberRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSafeMemberResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateSafeMemberResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdateSafeMemberResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateSafeMemberResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/UpdateSafeMemberResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/UpdateSafeMemberResponse'
          description: OK
      tags:
      - Safes
      x-codegen-request-body-name: updateSafeMemberRequestBody
  /api/UserGroups:
    get:
      description: "This method will return a list of all existing groups in the Vault.\r\
        \n            \r\nTo run this web service, the user must have Audit users\
        \ permissions in the Vault.\r\n            \r\nThe user who runs this web\
        \ service can see groups either only on the same level, or lower in the Vault\
        \ hierarchy: this depends on the HideVaultUsersTree parameter defined in the\
        \ dbparam.ini.\r\nIf HideVaultUsersTree is set to No, all groups will be returned\
        \ (not only those in the same level or lower in the Vault hierarchy).\r\n\
        If this parameter is set to Yes, only auditors and managers will be allowed\
        \ to get all groups."
      operationId: UserGroups_GetUserGroups
      parameters:
      - in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: filter
        schema:
          type: string
      - description: "Whether or not to return members for each User Group as part\
          \ of the response. If not sent, the value will be False."
        in: query
        name: includeMembers
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetUserGroupsResponse'
          description: The list of requested groups
      tags:
      - User Groups
    post:
      description: "This method adds a new Vault group.\r\nEvery user that has the\
        \ following Vault authorization can run this web service:\r\nAdd\\Update Users"
      operationId: UserGroups_CreateUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          text/xml:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserGroup'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/UserGroup'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: The create group
      tags:
      - User Groups
      x-codegen-request-body-name: userGroup
  /api/UserGroups/{groupId}:
    delete:
      description: "This method deletes a Vault group.\r\nTo run this web service,\
        \ the user must have the following permissions:\r\nAdd\\Update Users"
      operationId: UserGroups_DeleteUserGroup
      parameters:
      - description: The unique ID of the group.
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - User Groups
    put:
      description: "This method edit a Vault group.\r\nTo run this web service, the\
        \ user must have the following permissions:\r\nAdd\\Update Users"
      operationId: UserGroups_EditUserGroup
      parameters:
      - description: The unique ID of the group.
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          text/xml:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseUserGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
            application/vnd.cyberark.api+json:
              schema:
                type: object
          description: OK
      tags:
      - User Groups
      x-codegen-request-body-name: group
  /api/UserGroups/{groupId}/Members:
    post:
      description: "This method adds a member (that can be regular Vault user, LDAP\
        \ mapped group or LDAP user) to an existing Vault group.\r\n\r\nEvery user\
        \ that has the following Vault authorization can run this web service: \"\
        Add/Update users\"."
      operationId: UserGroups_AddMemberToGroup
      parameters:
      - description: The unique ID of the Vault group.
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMember'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupMember'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupMember'
          text/xml:
            schema:
              $ref: '#/components/schemas/GroupMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupMember'
        description: The parameters for the member to be added
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMember'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupMember'
            text/xml:
              schema:
                $ref: '#/components/schemas/GroupMember'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GroupMember'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GroupMember'
          description: Created
      tags:
      - User Groups
      x-codegen-request-body-name: memberToAdd
  /api/UserGroups/{groupId}/Members/{memberName}:
    delete:
      description: "This method removes a user/group from the members of a user group.\
        \ \r\nTo run this web service, the user must have permission to \"Add/Update\
        \ users\" (Vault Authorization)."
      operationId: UserGroups_RemoveUserFromGroup
      parameters:
      - description: The unique ID of the group.
        in: path
        name: groupId
        required: true
        schema:
          format: int64
          type: integer
      - description: The name of the user/group to remove from the group members
        in: path
        name: memberName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NoContent
      tags:
      - User Groups
  /api/Users:
    get:
      description: "This method will return a list of all existing users in the Vault\
        \ except of the Master and the Batch built-in users.\r\n\r\nTo run this web\
        \ service, the user must have the Audit users permissions in the Vault.\r\n\
        \r\nThe user who runs this web service can see users only on the same location\
        \ or lower in the Vault hierarchy.\r\n\r\nThe HideVaultUsersTree  parameter\
        \ in the dbparam.ini determines the users that are displayed.If HideVaultUsersTree\
        \ is set to No, all users will be returned (not only those in the same level\
        \ or lower in the Vault hierarchy). If this parameter is set to Yes, only\
        \ auditors and managers will be allowed to get all users.\r\n\r\nNote: We\
        \ currently support returning up to X users in up to Y minutes. If the amount\
        \ of users is above that number, the REST request might take longer"
      operationId: Users_GetUsers
      parameters:
      - description: returns users group membership if true
        in: query
        name: ExtendedDetails
        schema:
          type: boolean
      - in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The name of the user.
        in: query
        name: userName
        schema:
          type: string
      - description: The type of the user.
        in: query
        name: userType
        schema:
          type: string
      - description: Whether the user is a known component or not.
        in: query
        name: componentUser
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseUser'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseUser'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BaseUser'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BaseUser'
                type: array
            multipart/form-data:
              schema:
                items:
                  $ref: '#/components/schemas/BaseUser'
                type: array
            application/vnd.cyberark.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseUser'
                type: array
          description: OK
      tags:
      - Users
    post:
      description: "This method adds a new user to the Vault.\r\n\r\nTo run this web\
        \ service, the user must have the Add/Update Users authorization in the Vault."
      operationId: Users_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          text/xml:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created
      tags:
      - Users
      x-codegen-request-body-name: user
  /api/Users/{userID}:
    delete:
      description: "This method deletes information about a specific User in the Vault.\r\
        \n\r\nTo run this web service, the user must have the AddUpdate users permissions\
        \ in the Vault."
      operationId: Users_DeleteUser
      parameters:
      - description: The ID of the User to delete.
        in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
    get:
      description: "This method returns information about a specific User in the Vault.\r\
        \n\r\nTo run this web service, the user must have the Audit users permissions\
        \ in the Vault."
      operationId: Users_GetUserDetails
      parameters:
      - description: The ID of the User for which information is returned.
        in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      tags:
      - Users
    put:
      description: "This method edit an existing user.\r\nTo run this web service,\
        \ the user must have the Add/Update Users authorization in the Vault.\r\n\
        In order to Edit \"changePasswordOnTheNextLogon\" the user must have the Reset\
        \ Password authorization in the Vault."
      operationId: Users_EditUser
      parameters:
      - description: The ID of the user to update.
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          text/xml:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      tags:
      - Users
      x-codegen-request-body-name: user
  /api/Users/{userID}/Activate:
    post:
      description: "This method activates an existing Vault user who was suspended\
        \ after reaching the maximum number of violations.\r\nTo run this web service,\
        \ the user must have the Audit users and Activate Users permissions in the\
        \ Vault.\r\nTo activate a user, the user must be associated with only one\
        \ network area."
      operationId: Users_ActivateUser
      parameters:
      - description: The ID of the user to activate.
        in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
  /api/Users/{userID}/ResetPassword:
    post:
      description: "This method resets an existing Vault user's password.\r\nTo run\
        \ this web service, the user must have the Audit users and Reset Users' Passwords\
        \ permissions in the Vault.\r\nIn addition, the user who runs this web service\
        \ must be in the same Vault Location or higher as the user whose password\
        \ is being reset."
      operationId: Users_ResetUserPassword
      parameters:
      - description: The ID of the user whose password will be reset.
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetUserPassword'
        required: true
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
      x-codegen-request-body-name: resetUserPassword
  /api/Users/{userID}/Secret/SSHKeys:
    delete:
      description: "This method deletes an ssh public key on the vault for the user\
        \ id\r\n\r\nTo run this web service, the user must have the Audit users permissions\
        \ in the Vault."
      operationId: Users_DeleteUserSSHKey
      parameters:
      - description: The ID of the user to delete the public ssh key from.
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserSSHKeyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteUserSSHKeyModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserSSHKeyModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserSSHKeyModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeleteUserSSHKeyModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeleteUserSSHKeyModel'
        description: The SSH Key fingerprint to delete
        required: true
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
      x-codegen-request-body-name: sshKeyToDel
    get:
      description: "This method gets the ssh public keys stored in the vault for the\
        \ user\r\n\r\nTo run this web service, the user must have reset users password\
        \ permissions."
      operationId: Users_GetUserSSHKeys
      parameters:
      - description: The ID of the user for which public ssh keys are returned.
        in: path
        name: userID
        required: true
        schema:
          type: string
      - description: The key type filter
        in: query
        name: keyStoreTypeFilter
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserSSHKeysResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetUserSSHKeysResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserSSHKeysResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserSSHKeysResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GetUserSSHKeysResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GetUserSSHKeysResponse'
          description: OK
      tags:
      - Users
    post:
      description: "This method adds an ssh public key to the vault for the user id\r\
        \n\r\nTo run this web service, the user must have the Audit users permissions\
        \ in the Vault."
      operationId: Users_AddUserSSHKey
      parameters:
      - description: The ID of the user to add the ssh key to.
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserSSHKeyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddUserSSHKeyModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddUserSSHKeyModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddUserSSHKeyModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddUserSSHKeyModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddUserSSHKeyModel'
        description: The ssh key to add to the user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSSHKeyModel'
            text/json:
              schema:
                $ref: '#/components/schemas/PublicSSHKeyModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublicSSHKeyModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/PublicSSHKeyModel'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/PublicSSHKeyModel'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/PublicSSHKeyModel'
          description: OK
      tags:
      - Users
      x-codegen-request-body-name: sshKeyToAdd
  /api/Users/{userID}/Secret/SSHKeys/Cache:
    delete:
      description: "This method deletes the cached ssh public key for the given user\
        \ id from the vault\r\n\r\nTo run this web service, the user must have the\
        \ Audit users permissions in the Vault."
      operationId: Users_DestroyUserCachedSSHKey
      parameters:
      - description: The ID of the User for which the cached ssh key will be destroyed.
        in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
    post:
      description: "This method generates a cached ssh public key a given user and\
        \ stores it on the vault\r\n\r\nTo run this web service, the user must have\
        \ the Audit users permissions in the Vault."
      operationId: Users_GenerateUserCachedSSHKey
      parameters:
      - description: The ID of the User for which the key will be generated
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
        description: The information as to how to format and output the generated
          ssh key
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
          description: OK
      tags:
      - Users
      x-codegen-request-body-name: genModel
  /api/Users/Secret/SSHKeys/Cache:
    delete:
      description: "This method deletes the cached ssh public key for the logged user\
        \ from the vault\r\n\r\nTo run this web service, the user must only be authenticated\
        \ to the vault"
      operationId: Users_DestroyCurrentUserCachedSSHKey
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
    post:
      description: "This method generates a cached ssh public key for the logged user\
        \ and stores it on the vault\r\n\r\nTo run this web service, the user must\
        \ only be authenticated to the vault"
      operationId: Users_GenerateCurrentUserCachedSSHKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateUserCachedSSHKeyModel'
        description: The information as to how to format and output the generated
          ssh key
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
            application/vnd.cyberark.api+json:
              schema:
                $ref: '#/components/schemas/GenerateUserCachedSSHKeyResponse'
          description: OK
      tags:
      - Users
      x-codegen-request-body-name: genModel
  /api/Users/Secret/SSHKeys/ClearCache:
    delete:
      description: "This method deletes all the cached ssh public key for all the\
        \ users with the given filters\r\n\r\nTo run this web service, the user must\
        \ have the Audit users permissions in the Vault."
      operationId: Users_DestroyAllUsersCachedSSHKey
      parameters:
      - in: query
        name: search
        schema:
          maxLength: 500
          minLength: 0
          type: string
      - description: The type of the user.
        in: query
        name: userType
        schema:
          type: string
      - description: Whether the user is a known component or not.
        in: query
        name: componentUser
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: OK
      tags:
      - Users
components:
  schemas:
    AccountGroup:
      example:
        GroupName: GroupName
        Safe: Safe
        GroupPlatformID: GroupPlatformID
        GroupID: GroupID
      properties:
        GroupID:
          type: string
        GroupName:
          type: string
        GroupPlatformID:
          type: string
        Safe:
          type: string
      type: object
    AddAccountGroupData:
      example:
        GroupName: GroupName
        Safe: Safe
        GroupPlatformId: GroupPlatformId
      properties:
        GroupName:
          description: The name of the newly created group.
          maxLength: 170
          minLength: 0
          type: string
        GroupPlatformId:
          description: "The name of the platform of the group.\r\nThe associated platform\
            \ must be set to PolicyType = Group."
          maxLength: 170
          minLength: 0
          type: string
        Safe:
          description: The name of the Safe where the group will be created.
          maxLength: 170
          minLength: 0
          type: string
      required:
      - GroupName
      - GroupPlatformId
      - Safe
      type: object
    AddMemberToAccountGroup:
      example:
        AccountId: AccountId
      properties:
        AccountId:
          description: The ID of the account that will be added as a member to the
            group.
          maxLength: 170
          minLength: 0
          type: string
      required:
      - AccountId
      type: object
    AccountGroupMember:
      example:
        AccountID: AccountID
        UserName: UserName
        Address: Address
        SafeName: SafeName
        PlatformID: PlatformID
      properties:
        AccountID:
          type: string
        SafeName:
          type: string
        PlatformID:
          type: string
        Address:
          type: string
        UserName:
          type: string
      type: object
    GeneratePasswordAccountDetailsJson:
      example:
        AccountId: AccountId
      properties:
        AccountId:
          type: string
      required:
      - AccountId
      type: object
    GeneratedPassword:
      example:
        Password: Password
      properties:
        Password:
          type: string
      type: object
    AccountContentPrerequsites:
      example:
        isUse: true
        TicketId: TicketId
        ActionType: ActionType
        Version: 0
        TicketingSystem: TicketingSystem
        Reason: Reason
        Machine: Machine
      properties:
        Reason:
          description: The reason that is required to retrieve the password/SSH key
          type: string
        TicketId:
          description: The ticket ID of the ticketing system
          type: string
        TicketingSystem:
          description: The name of the ticketing system
          type: string
        isUse:
          description: Internal parameter (for PSMP only)
          type: boolean
        ActionType:
          description: The action this password/SSH key will be used for. (Show/Copy/Connect
            for password; Retrieve for SSH key)
          type: string
        Machine:
          description: The address of the remote machine the user wants to connect
            to using the password/SSH key
          type: string
        Version:
          description: "The version number of the required password/SSH key. Must\
            \ be a positive number. If the value is left empty or the value passed\
            \ does not exist, then the current password/SSH key version is returned"
          format: int64
          minimum: 0
          type: integer
      type: object
    VersionData:
      example:
        versionID: 0
        modificationDate: 6
        modifiedBy: modifiedBy
        isTemporary: true
      properties:
        versionID:
          description: Secret's version unique ID
          format: int64
          type: integer
        modifiedBy:
          description: The user that modified the secret
          type: string
        modificationDate:
          description: Secret's modification date
          format: int64
          type: integer
        isTemporary:
          description: Indication whether it's temporary or real password
          type: boolean
      type: object
    GetAccountsRequest:
      properties:
        search:
          description: List of keywords separated with space to search in accounts.
          maxLength: 500
          minLength: 0
          type: string
        sort:
          description: "Property or properties to sort returned accounts, followed\
            \ by asc (default) or desc to control sort direction. Multiple sorts are\
            \ comma-separated. Maximum number of properties is 3."
          items:
            type: string
          type: array
        offset:
          description: Offset of the first returned account into the collection of
            results.
          format: int32
          type: integer
        limit:
          description: "Maximum number of returned accounts. If not specified, the\
            \ default value is 50. The maximum number that can be specified is 1000."
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        filter:
          description: "Search for accounts filtered by specific Safe. Filter=safename\
            \ eq [safe name]"
          type: string
        searchType:
          description: Type of search to perform - if keywords are contained in the
            relevant account properties values or in the start of the properties values
            (the later enhances performance)
          enum:
          - Contains
          - StartsWith
          type: string
      type: object
    GetAccountsResponse:
      example:
        count: 2
        value:
        - address: address
          platformAccountProperties:
            key: platformAccountProperties
          secretManagement:
            lastReconciledTime: 1
            lastModifiedTime: 6
            automaticManagementEnabled: true
            manualManagementReason: manualManagementReason
            lastVerifiedTime: 5
            status: inProcess
          platformId: platformId
          secret: secret
          userName: userName
          remoteMachinesAccess:
            remoteMachines: remoteMachines
            accessRestrictedToRemoteMachines: true
          secretType: key
          name: name
          createdTime: 5
          id: id
          safeName: safeName
          categoryModificationTime: 0
        - address: address
          platformAccountProperties:
            key: platformAccountProperties
          secretManagement:
            lastReconciledTime: 1
            lastModifiedTime: 6
            automaticManagementEnabled: true
            manualManagementReason: manualManagementReason
            lastVerifiedTime: 5
            status: inProcess
          platformId: platformId
          secret: secret
          userName: userName
          remoteMachinesAccess:
            remoteMachines: remoteMachines
            accessRestrictedToRemoteMachines: true
          secretType: key
          name: name
          createdTime: 5
          id: id
          safeName: safeName
          categoryModificationTime: 0
        nextLink: nextLink
      properties:
        value:
          items:
            $ref: '#/components/schemas/AccountModel'
          type: array
        count:
          format: int32
          type: integer
        nextLink:
          type: string
      type: object
    AccountModel:
      example:
        address: address
        platformAccountProperties:
          key: platformAccountProperties
        secretManagement:
          lastReconciledTime: 1
          lastModifiedTime: 6
          automaticManagementEnabled: true
          manualManagementReason: manualManagementReason
          lastVerifiedTime: 5
          status: inProcess
        platformId: platformId
        secret: secret
        userName: userName
        remoteMachinesAccess:
          remoteMachines: remoteMachines
          accessRestrictedToRemoteMachines: true
        secretType: key
        name: name
        createdTime: 5
        id: id
        safeName: safeName
        categoryModificationTime: 0
      properties:
        categoryModificationTime:
          format: int64
          type: integer
        id:
          type: string
        name:
          description: The name of the account.
          type: string
        address:
          description: "The name or address of the machine where the account will\
            \ be used.\r\nValid values: DNS/IP/URL where the account is managed"
          type: string
        userName:
          description: Account user's name.
          type: string
        platformId:
          description: "The platform assigned to this account.\r\nValid values: Valid\
            \ platform IDs, example: WinServerLocal"
          type: string
        safeName:
          description: The Safe where the account will be created.
          type: string
        secretType:
          description: "Description The type of password.\r\nValid values password,\
            \ key"
          enum:
          - key
          - password
          type: string
        secret:
          type: string
        platformAccountProperties:
          additionalProperties:
            type: string
          description: "Object containing key-value pairs to associate with the account,\
            \ as defined by the account platform.\r\nThese properties are validated\
            \ against the mandatory and optional properties of the specified platform's\
            \ definition.\r\nOptional properties that do not exist on the account\
            \ will not be returned here.\r\nInternal properties are not returned.\r\
            \nValid values example: {\"Location\": \"IT\", \"OwnerName\":\"MSSPAdmin\"\
            }"
          type: object
        secretManagement:
          $ref: '#/components/schemas/AutomaticSecretManagement'
        remoteMachinesAccess:
          $ref: '#/components/schemas/RemoteMachinesAccess'
        createdTime:
          description: Date and time account was created
          format: int64
          type: integer
      required:
      - platformId
      - safeName
      type: object
    AutomaticSecretManagement:
      example:
        lastReconciledTime: 1
        lastModifiedTime: 6
        automaticManagementEnabled: true
        manualManagementReason: manualManagementReason
        lastVerifiedTime: 5
        status: inProcess
      properties:
        automaticManagementEnabled:
          description: "Whether the account secret is automatically managed by the\
            \ CPM. Default: true."
          type: boolean
        manualManagementReason:
          description: Reason for disabling automatic secret management
          type: string
        status:
          description: Account management status.
          enum:
          - inProcess
          - success
          - failure
          type: string
        lastModifiedTime:
          description: Last modified date of the account.
          format: int64
          type: integer
        lastReconciledTime:
          description: Last reconciled date of the account.
          format: int64
          type: integer
        lastVerifiedTime:
          description: Last verified date of the account.
          format: int64
          type: integer
      type: object
    RemoteMachinesAccess:
      example:
        remoteMachines: remoteMachines
        accessRestrictedToRemoteMachines: true
      properties:
        remoteMachines:
          description: "List of remote machines, separated by semicolons."
          type: string
        accessRestrictedToRemoteMachines:
          description: Whether or not to restrict access only to specified remote
            machines.
          type: boolean
      type: object
    AdHocConnectionData:
      example:
        address: address
        PSMConnectPrerequisites:
          ConnectionComponent: ConnectionComponent
          TicketId: TicketId
          ConnectionType: ConnectionType
          TicketingSystemName: TicketingSystemName
          ConnectionParams:
            key:
              ShouldSave: true
              value: value
          Reason: Reason
        secret: secret
        platformId: platformId
        userName: userName
        extraFields:
          key: extraFields
      properties:
        secret:
          type: string
        address:
          type: string
        userName:
          type: string
        platformId:
          type: string
        PSMConnectPrerequisites:
          $ref: '#/components/schemas/AccountPSMConnectPrerequisites'
        extraFields:
          additionalProperties:
            type: string
          type: object
      required:
      - PSMConnectPrerequisites
      - address
      - platformId
      - secret
      - userName
      type: object
    AccountPSMConnectPrerequisites:
      example:
        ConnectionComponent: ConnectionComponent
        TicketId: TicketId
        ConnectionType: ConnectionType
        TicketingSystemName: TicketingSystemName
        ConnectionParams:
          key:
            ShouldSave: true
            value: value
        Reason: Reason
      properties:
        Reason:
          description: Required reason to request the access
          type: string
        TicketingSystemName:
          description: The name of the Ticketing System used in the request
          type: string
        TicketId:
          description: The ticket ID of the ticketing system
          type: string
        ConnectionType:
          type: string
        ConnectionComponent:
          description: The name of the connection component to connect with as defined
            in the configuration
          type: string
        ConnectionParams:
          additionalProperties:
            $ref: '#/components/schemas/ConnectionParameter'
          description: "A list of parameters required to perform the connection. Defined\
            \ in each connection component configuration\r\nEach item contains: key,\
            \ \r\n{ value - The content of the parameter, \r\nShouldSave - Whether\
            \ or not this value will be saved with the account for future attempts\
            \ to connect to the remote machine.}"
          type: object
      required:
      - ConnectionComponent
      type: object
    ConnectionParameter:
      example:
        ShouldSave: true
        value: value
      properties:
        value:
          type: string
        ShouldSave:
          type: boolean
      type: object
    JsonPatchDocument[AccountModel]:
      properties:
        Operations:
          items:
            $ref: "#/components/schemas/Operation[AccountModel]"
          readOnly: true
          type: array
      type: object
    Operation[AccountModel]:
      properties:
        value:
          properties: {}
          type: object
        path:
          type: string
        op:
          type: string
        from:
          type: string
      type: object
    LinkAccountData:
      example:
        extraPasswordIndex: 1
        folder: folder
        name: name
        safe: safe
      properties:
        name:
          description: The linked account name.
          type: string
        safe:
          description: The safe in which the linked account is stored.
          maxLength: 28
          minLength: 1
          type: string
        folder:
          description: The folder in which the linked account is stored.
          type: string
        extraPasswordIndex:
          description: "The linked account extra pass index.\r\nThe index can be of\
            \ Reconcile Account, Logon Account or other linked account which is defined\
            \ in the platform configuration."
          format: int32
          maximum: 3
          minimum: 1
          type: integer
      required:
      - extraPasswordIndex
      - folder
      - name
      - safe
      type: object
    ChangeCredentialsNowProperties:
      example:
        ChangeEntireGroup: true
      properties:
        ChangeEntireGroup:
          description: "Whether or not the CPM will change the credentials in all\
            \ the accounts that belong to the same group. \r\nThis parameter is only\
            \ relevant for accounts that belong to an account group, and if this parameter\
            \ does not belong to a group, \r\nit will be ignored.If this account is\
            \ part of an account group and this value is not specified, the default\
            \ value will be applied."
          type: boolean
      type: object
    SetNextCredentialsProperties:
      example:
        NewCredentials: NewCredentials
        ChangeImmediately: true
      properties:
        NewCredentials:
          description: The new account credentials that will be allocated to the account
            in the Vault.
          type: string
        ChangeImmediately:
          description: Whether or not the password will be changed immediately in
            the Vault.
          type: boolean
      required:
      - NewCredentials
      type: object
    ChangeInVaultProperties:
      example:
        NewCredentials: NewCredentials
        ChangeEntireGroup: true
      properties:
        ChangeEntireGroup:
          description: "Whether or not to change the password in all accounts that\
            \ belong to the same group.\r\nThis parameter is only relevant for accounts\
            \ that belong to an account group.If this parameter does not belong to\
            \ a group, it will be ignored."
          type: boolean
        NewCredentials:
          description: "Whether or not the password will be generated according to\
            \ the password policy rules. If the CPM is not configured to enforce a\
            \ password policy rule, this parameter is irrelevant.\r\nIf the NewCredentails\
            \ parameter contains a value, this parameter will be ignored."
          type: string
      required:
      - NewCredentials
      type: object
    AllowedReferrerDto:
      example:
        regularExpression: true
        referrerURL: referrerURL
      properties:
        referrerURL:
          description: "The URL from where users will be able to access PVWA. You\
            \ can specify either of the following:\r\nA portal URL that allows access\
            \ from any page or sub-directory under the company’s portal URL.\r\nFor\
            \ example, https://CompanyA/portal/.\r\nThe exact name of a URL that only\
            \ allows access from a specific page.For example, https://CompanyB/management/dashboard."
          type: string
        regularExpression:
          description: Defines whether or not the URL is a regular expression.
          type: boolean
      required:
      - referrerURL
      type: object
    LogoffData:
      example:
        LogoffUrl: LogoffUrl
      properties:
        LogoffUrl:
          type: string
      type: object
    LogonData:
      example:
        NewPassword: NewPassword
        AdditionalInfo: AdditionalInfo
        Type: Type
        UserName: UserName
        SecureMode: true
        concurrentSession: true
        Password: Password
      properties:
        UserName:
          description: The name of the user who will logon to the Vault
          type: string
        Password:
          description: The password of the user
          type: string
        NewPassword:
          description: "The new password of the user. This parameter is optional,\
            \ and enables you to change a password\r\nThis parameter can be used with\
            \ the following authentication methods:\r\nCyberArk,\r\nLDAP"
          type: string
        Type:
          type: string
        AdditionalInfo:
          type: string
        SecureMode:
          type: boolean
        concurrentSession:
          description: "Set this parameter to true In order to allow more than one\
            \ connection for the same user simultaneously.\r\n\r\nUp to 300 concurrent\
            \ sessions."
          type: boolean
      type: object
    AuthenticationMethod:
      example:
        id: AuthenticationMethodId
        displayName: AuthenticationMethodId
        enabled: false
        mobileEnabled: false
        logoffUrl: https://domain.com/provider/logoff
        secondFactorAuth: cyberark
        signInLabel: ""
        usernameFieldLabel: username
        passwordFieldLabel: password
      properties:
        id:
          description: The authentication module identifier.
          maxLength: 50
          minLength: 0
          type: string
        displayName:
          description: The display name of the authentication method.
          maxLength: 50
          minLength: 0
          type: string
        enabled:
          description: Whether or not the authentication method is enabled for use.
          type: boolean
        mobileEnabled:
          description: Whether or not the authentication method is available from
            the mobile application.
          type: boolean
        logoffUrl:
          description: "The logoff page URL of the 3rd party server.\r\nThe user is\
            \ redirected to this page in order to complete the logoff."
          maxLength: 2000
          minLength: 0
          type: string
        secondFactorAuth:
          description: "Defines which second factor authentication to use when connecting\
            \ to the Vault.\r\nEmpty value will disable the second factor authentication.\r\
            \nValid values: cyberark, radius, ldap."
          enum:
          - cyberark
          - radius
          - ldap
          type: string
        signInLabel:
          description: "Defines the sign-in text for this authentication method.\r\
            \nRelevant only for CyberArk, RADIUS and LDAP authentication methods."
          maxLength: 100
          minLength: 0
          type: string
        usernameFieldLabel:
          description: "Defines the label of the username field for this authentication\
            \ method.\r\nRelevant only for CyberArk, RADIUS and LDAP authentication\
            \ methods."
          maxLength: 50
          minLength: 0
          type: string
        passwordFieldLabel:
          description: "Defines the label of the password field for this authentication\
            \ method.\r\nRelevant only for CyberArk, RADIUS and LDAP authentication\
            \ methods."
          maxLength: 50
          minLength: 0
          type: string
      required:
      - id
      type: object
    AuthenticationMethodBase:
      example:
        displayName: AuthenticationMethodId
        enabled: false
        mobileEnabled: false
        logoffUrl: https://domain.com/provider/logoff
        secondFactorAuth: cyberark
        signInLabel: ""
        usernameFieldLabel: ""
        passwordFieldLabel: ""
      properties:
        displayName:
          description: The display name of the authentication method.
          maxLength: 50
          minLength: 0
          type: string
        enabled:
          description: Whether or not the authentication method is enabled for use.
          type: boolean
        mobileEnabled:
          description: Whether or not the authentication method is available from
            the mobile application.
          type: boolean
        logoffUrl:
          description: "The logoff page URL of the 3rd party server.\r\nThe user is\
            \ redirected to this page in order to complete the logoff."
          maxLength: 2000
          minLength: 0
          type: string
        secondFactorAuth:
          description: "Defines which second factor authentication to use when connecting\
            \ to the Vault.\r\nEmpty value will disable the second factor authentication.\r\
            \nValid values: cyberark, radius, ldap."
          enum:
          - cyberark
          - radius
          - ldap
          type: string
        signInLabel:
          description: "Defines the sign-in text for this authentication method.\r\
            \nRelevant only for CyberArk, RADIUS and LDAP authentication methods."
          maxLength: 100
          minLength: 0
          type: string
        usernameFieldLabel:
          description: "Defines the label of the username field for this authentication\
            \ method.\r\nRelevant only for CyberArk, RADIUS and LDAP authentication\
            \ methods."
          maxLength: 50
          minLength: 0
          type: string
        passwordFieldLabel:
          description: "Defines the label of the password field for this authentication\
            \ method.\r\nRelevant only for CyberArk, RADIUS and LDAP authentication\
            \ methods."
          maxLength: 50
          minLength: 0
          type: string
      type: object
    AuthenticationMethodsResponse:
      example:
        Methods:
        - id: AuthenticationMethodId
          displayName: AuthenticationMethodId
          enabled: false
          mobileEnabled: false
          logoffUrl: https://domain.com/provider/logoff
          secondFactorAuth: cyberark
          signInLabel: ""
          usernameFieldLabel: username
          passwordFieldLabel: password
        - id: AuthenticationMethodId
          displayName: AuthenticationMethodId
          enabled: false
          mobileEnabled: false
          logoffUrl: https://domain.com/provider/logoff
          secondFactorAuth: cyberark
          signInLabel: ""
          usernameFieldLabel: username
          passwordFieldLabel: password
      properties:
        Methods:
          items:
            $ref: '#/components/schemas/AuthenticationMethod'
          type: array
      type: object
    AutomaticOnboardingRuleDataIn:
      example:
        UserNameFilter: UserNameFilter
        RuleDescription: RuleDescription
        AddressMethod: 5
        AccountCategoryFilter: 5
        TargetPlatformId: TargetPlatformId
        IsAdminIDFilter: true
        AddressFilter: AddressFilter
        UserNameMethod: 1
        TargetSafeName: TargetSafeName
        SystemTypeFilter: 6
        RuleName: RuleName
        MachineTypeFilter: 0
      properties:
        TargetPlatformId:
          description: The ID of the platform that will be associated to the onboarded
            account.
          maxLength: 99
          minLength: 0
          type: string
        TargetSafeName:
          description: The name of the Safe where the onboarded account will be stored.
          maxLength: 28
          minLength: 0
          type: string
        IsAdminIDFilter:
          type: boolean
        MachineTypeFilter:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        SystemTypeFilter:
          description: The System Type by which to filter.
          enum:
          - 0
          - 1
          format: int32
          type: integer
        UserNameFilter:
          description: The name of the user by which to filter.
          maxLength: 512
          minLength: 0
          type: string
        RuleName:
          maxLength: 255
          minLength: 0
          type: string
        RuleDescription:
          maxLength: 255
          minLength: 0
          type: string
        UserNameMethod:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        AddressFilter:
          description: The Machine Type by which to filter.
          maxLength: 255
          minLength: 0
          type: string
        AddressMethod:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        AccountCategoryFilter:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
      required:
      - SystemTypeFilter
      - TargetPlatformId
      - TargetSafeName
      type: object
    AutomaticOnboardingRuleData:
      example:
        AccountTypeFilter: AccountTypeFilter
        RuleDescription: RuleDescription
        AddressMethod: AddressMethod
        RuleId: 0
        RulePrecedence: 6
        UserNameMethod: UserNameMethod
        LastOnboardedTime: 5
        TargetSafeName: TargetSafeName
        SystemTypeFilter: SystemTypeFilter
        MachineTypeFilter: MachineTypeFilter
        UserNameFilter: UserNameFilter
        TargetDeviceType: TargetDeviceType
        AccountCategoryFilter: AccountCategoryFilter
        TargetPlatformId: TargetPlatformId
        IsAdminIDFilter: true
        CreationTime: 1
        AddressFilter: AddressFilter
        ReconcileAccountId: ReconcileAccountId
        RuleName: RuleName
      properties:
        RuleId:
          description: "A numeric identifier for the rule, assigned by the system."
          format: int64
          type: integer
        RuleName:
          description: Name of the rule. This is either auto-generated or specified
            by the user when the rule is created.
          type: string
        RuleDescription:
          description: A description of the rule.
          type: string
        RulePrecedence:
          description: "The order in which the rules are run.\r\nRules are ordered\
            \ based on creation time.The most recently created rule will have a precedence\
            \ of 1, the next most recently created rule will have a precedence of\
            \ 2, and so on.\r\nDuring discovery, when a new account is discovered,\
            \ it is first compared to the rule with precedence 1 to check if the account\
            \ matches the rule's filters. If so, the account is onboarded according\
            \ to the rule. If not, the account is compared to the next rule by precedence,\
            \ and so on."
          format: int32
          type: integer
        TargetPlatformId:
          description: The ID of the platform that the onboarded account will be associated
            with.
          type: string
        TargetDeviceType:
          description: Device type of the Target Platform
          type: string
        TargetSafeName:
          description: "The name of the Safe where the onboarded account will be stored.\r\
            \nSecurity requirement: If the user is not an owner of the Safe, a null\
            \ string will be returned."
          type: string
        IsAdminIDFilter:
          description: "Whether or not only accounts with the following admin ID will\
            \ be onboarded automatically according to this rule.\r\nUnix accounts\
            \ whose UID is 0.\r\nWindows accounts whose SID ends with 500.\r\nIf this\
            \ value is set to false, the admin ID will not be considered and all accounts\
            \ matching the rule will be onboarded."
          type: boolean
        MachineTypeFilter:
          description: The Machine Type by which to filter.
          type: string
        SystemTypeFilter:
          description: The System Type by which to filter.
          type: string
        CreationTime:
          description: The date and time when the rule was created.
          format: int32
          type: integer
        UserNameFilter:
          description: The name of the user by which to filter.
          type: string
        UserNameMethod:
          description: The method to use when applying the username filter.
          type: string
        AddressFilter:
          description: The IP address or DNS domain name of the machine by which to
            filter.
          type: string
        AddressMethod:
          description: The method to use when applying the address filter.
          type: string
        AccountTypeFilter:
          description: ""
          type: string
        AccountCategoryFilter:
          description: Filter for privileged or non-privileged accounts.
          type: string
        ReconcileAccountId:
          description: ""
          type: string
        LastOnboardedTime:
          description: The last time that an account was successfully onboarded using
            this rule.
          format: int32
          type: integer
      type: object
    RuleFiltersQS:
      properties:
        Names:
          description: List of names
          items:
            type: string
          type: array
      type: object
    BulkAccountsModel:
      example:
        accountsList:
        - address: address
          platformAccountProperties:
            key: platformAccountProperties
          secretManagement:
            lastReconciledTime: 1
            lastModifiedTime: 6
            automaticManagementEnabled: true
            manualManagementReason: manualManagementReason
            lastVerifiedTime: 5
            status: inProcess
          platformId: platformId
          secret: secret
          error: error
          userName: userName
          uploadIndex: 6
          groupName: groupName
          remoteMachinesAccess:
            remoteMachines: remoteMachines
            accessRestrictedToRemoteMachines: true
          secretType: key
          name: name
          createdTime: 1
          id: id
          groupPlatformId: groupPlatformId
          safeName: safeName
          categoryModificationTime: 0
        - address: address
          platformAccountProperties:
            key: platformAccountProperties
          secretManagement:
            lastReconciledTime: 1
            lastModifiedTime: 6
            automaticManagementEnabled: true
            manualManagementReason: manualManagementReason
            lastVerifiedTime: 5
            status: inProcess
          platformId: platformId
          secret: secret
          error: error
          userName: userName
          uploadIndex: 6
          groupName: groupName
          remoteMachinesAccess:
            remoteMachines: remoteMachines
            accessRestrictedToRemoteMachines: true
          secretType: key
          name: name
          createdTime: 1
          id: id
          groupPlatformId: groupPlatformId
          safeName: safeName
          categoryModificationTime: 0
        source: source
      properties:
        accountsList:
          description: The object that contains a list of account object. Each account
            object contains the parameters for that account.
          items:
            $ref: '#/components/schemas/BulkAccountModel'
          type: array
        source:
          description: Free text that describes the souce of the bulk account upload.
          type: string
      type: object
    BulkAccountModel:
      example:
        address: address
        platformAccountProperties:
          key: platformAccountProperties
        secretManagement:
          lastReconciledTime: 1
          lastModifiedTime: 6
          automaticManagementEnabled: true
          manualManagementReason: manualManagementReason
          lastVerifiedTime: 5
          status: inProcess
        platformId: platformId
        secret: secret
        error: error
        userName: userName
        uploadIndex: 6
        groupName: groupName
        remoteMachinesAccess:
          remoteMachines: remoteMachines
          accessRestrictedToRemoteMachines: true
        secretType: key
        name: name
        createdTime: 1
        id: id
        groupPlatformId: groupPlatformId
        safeName: safeName
        categoryModificationTime: 0
      properties:
        categoryModificationTime:
          format: int64
          type: integer
        groupName:
          description: The name of the group to associate the account with.
          type: string
        groupPlatformId:
          type: string
        error:
          type: string
        uploadIndex:
          description: The numeric identifier for the account.
          format: int32
          type: integer
        id:
          type: string
        name:
          description: The name of the account.
          type: string
        address:
          description: "The name or address of the machine where the account will\
            \ be used.\r\nValid values: DNS/IP/URL where the account is managed"
          type: string
        userName:
          description: Account user's name.
          type: string
        platformId:
          description: "The platform assigned to this account.\r\nValid values: Valid\
            \ platform IDs, example: WinServerLocal"
          type: string
        safeName:
          description: The Safe where the account will be created.
          type: string
        secretType:
          description: "Description The type of password.\r\nValid values password,\
            \ key"
          enum:
          - key
          - password
          type: string
        secret:
          type: string
        platformAccountProperties:
          additionalProperties:
            type: string
          description: "Object containing key-value pairs to associate with the account,\
            \ as defined by the account platform.\r\nThese properties are validated\
            \ against the mandatory and optional properties of the specified platform's\
            \ definition.\r\nOptional properties that do not exist on the account\
            \ will not be returned here.\r\nInternal properties are not returned.\r\
            \nValid values example: {\"Location\": \"IT\", \"OwnerName\":\"MSSPAdmin\"\
            }"
          type: object
        secretManagement:
          $ref: '#/components/schemas/AutomaticSecretManagement'
        remoteMachinesAccess:
          $ref: '#/components/schemas/RemoteMachinesAccess'
        createdTime:
          description: Date and time account was created
          format: int64
          type: integer
      required:
      - platformId
      - safeName
      type: object
    GetBulkAccountsActionsRequest:
      properties:
        Limit:
          description: "Maximum number of returned bulk account actions. If not specified,\
            \ the default value is 10. The maximum number that can be specified is\
            \ 1000."
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        Filter:
          description: Search for bulk account actions filtered by spesific status.
            e.g. Filter=status eq InProgress
          type: string
      type: object
    GetBulkAccountsActionsResult:
      example:
        Total: 0
        BulkActions:
        - Status: 5
          CreationTime: 1
          Id: 6
          Source: Source
          Result:
            Succeeded: 5
            Failed: 2
            Error: Error
        - Status: 5
          CreationTime: 1
          Id: 6
          Source: Source
          Result:
            Succeeded: 5
            Failed: 2
            Error: Error
      properties:
        Total:
          format: int32
          readOnly: true
          type: integer
        BulkActions:
          items:
            $ref: '#/components/schemas/BulkAccountsOperationResult'
          type: array
      type: object
    BulkAccountsOperationResult:
      example:
        Status: 5
        CreationTime: 1
        Id: 6
        Source: Source
        Result:
          Succeeded: 5
          Failed: 2
          Error: Error
      properties:
        Id:
          description: The single identifier for the bulk action.
          format: int64
          type: integer
        Source:
          description: Free-text description of the source of the bulk account upload.
          type: string
        CreationTime:
          description: The time the bulk action was created.
          format: int64
          type: integer
        Status:
          description: "The possible statuses are:\r\ninProgress: the bulk upload\
            \ is still processing\r\ncompleted: the bulk upload completed and all\
            \ accounts were uploaded successfully\r\ncompletedWithErrors: the bulk\
            \ upload completed but there were accounts that failed to upload\r\nfailed:\
            \ the bulk upload process failed to run"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          type: integer
        Result:
          $ref: '#/components/schemas/BulkOperationSummary'
      type: object
    BulkOperationSummary:
      example:
        Succeeded: 5
        Failed: 2
        Error: Error
      properties:
        Succeeded:
          format: int32
          type: integer
        Failed:
          format: int32
          type: integer
        Error:
          type: string
      type: object
    BulkAccountsOperationResultExtended:
      example:
        Status: 1
        FailedItems:
          Total: 5
          Items:
          - address: address
            platformAccountProperties:
              key: platformAccountProperties
            secretManagement:
              lastReconciledTime: 1
              lastModifiedTime: 6
              automaticManagementEnabled: true
              manualManagementReason: manualManagementReason
              lastVerifiedTime: 5
              status: inProcess
            platformId: platformId
            secret: secret
            error: error
            userName: userName
            uploadIndex: 6
            groupName: groupName
            remoteMachinesAccess:
              remoteMachines: remoteMachines
              accessRestrictedToRemoteMachines: true
            secretType: key
            name: name
            createdTime: 1
            id: id
            groupPlatformId: groupPlatformId
            safeName: safeName
            categoryModificationTime: 0
          - address: address
            platformAccountProperties:
              key: platformAccountProperties
            secretManagement:
              lastReconciledTime: 1
              lastModifiedTime: 6
              automaticManagementEnabled: true
              manualManagementReason: manualManagementReason
              lastVerifiedTime: 5
              status: inProcess
            platformId: platformId
            secret: secret
            error: error
            userName: userName
            uploadIndex: 6
            groupName: groupName
            remoteMachinesAccess:
              remoteMachines: remoteMachines
              accessRestrictedToRemoteMachines: true
            secretType: key
            name: name
            createdTime: 1
            id: id
            groupPlatformId: groupPlatformId
            safeName: safeName
            categoryModificationTime: 0
        CreationTime: 6
        Id: 0
        SucceededItems:
          Total: 5
          Items:
          - address: address
            platformAccountProperties:
              key: platformAccountProperties
            secretManagement:
              lastReconciledTime: 1
              lastModifiedTime: 6
              automaticManagementEnabled: true
              manualManagementReason: manualManagementReason
              lastVerifiedTime: 5
              status: inProcess
            platformId: platformId
            secret: secret
            error: error
            userName: userName
            uploadIndex: 6
            groupName: groupName
            remoteMachinesAccess:
              remoteMachines: remoteMachines
              accessRestrictedToRemoteMachines: true
            secretType: key
            name: name
            createdTime: 1
            id: id
            groupPlatformId: groupPlatformId
            safeName: safeName
            categoryModificationTime: 0
          - address: address
            platformAccountProperties:
              key: platformAccountProperties
            secretManagement:
              lastReconciledTime: 1
              lastModifiedTime: 6
              automaticManagementEnabled: true
              manualManagementReason: manualManagementReason
              lastVerifiedTime: 5
              status: inProcess
            platformId: platformId
            secret: secret
            error: error
            userName: userName
            uploadIndex: 6
            groupName: groupName
            remoteMachinesAccess:
              remoteMachines: remoteMachines
              accessRestrictedToRemoteMachines: true
            secretType: key
            name: name
            createdTime: 1
            id: id
            groupPlatformId: groupPlatformId
            safeName: safeName
            categoryModificationTime: 0
        Source: Source
        Result:
          Succeeded: 5
          Failed: 2
          Error: Error
      properties:
        Id:
          description: The single identifier for the bulk action.
          format: int64
          type: integer
        Source:
          description: Free-text description of the source of the bulk account upload.
          type: string
        CreationTime:
          description: The time the bulk action was created.
          format: int64
          type: integer
        Status:
          description: "The possible statuses are:\r\ninProgress: the bulk upload\
            \ is still processing\r\ncompleted: the bulk upload completed and all\
            \ accounts were uploaded successfully\r\ncompletedWithErrors: the bulk\
            \ upload completed but there were accounts that failed to upload\r\nfailed:\
            \ the bulk upload process failed to run"
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          type: integer
        Result:
          $ref: '#/components/schemas/BulkOperationSummary'
        SucceededItems:
          $ref: '#/components/schemas/BulkAccountsList'
        FailedItems:
          $ref: '#/components/schemas/BulkAccountsList'
      type: object
    BulkAccountsList:
      example:
        Total: 5
        Items:
        - address: address
          platformAccountProperties:
            key: platformAccountProperties
          secretManagement:
            lastReconciledTime: 1
            lastModifiedTime: 6
            automaticManagementEnabled: true
            manualManagementReason: manualManagementReason
            lastVerifiedTime: 5
            status: inProcess
          platformId: platformId
          secret: secret
          error: error
          userName: userName
          uploadIndex: 6
          groupName: groupName
          remoteMachinesAccess:
            remoteMachines: remoteMachines
            accessRestrictedToRemoteMachines: true
          secretType: key
          name: name
          createdTime: 1
          id: id
          groupPlatformId: groupPlatformId
          safeName: safeName
          categoryModificationTime: 0
        - address: address
          platformAccountProperties:
            key: platformAccountProperties
          secretManagement:
            lastReconciledTime: 1
            lastModifiedTime: 6
            automaticManagementEnabled: true
            manualManagementReason: manualManagementReason
            lastVerifiedTime: 5
            status: inProcess
          platformId: platformId
          secret: secret
          error: error
          userName: userName
          uploadIndex: 6
          groupName: groupName
          remoteMachinesAccess:
            remoteMachines: remoteMachines
            accessRestrictedToRemoteMachines: true
          secretType: key
          name: name
          createdTime: 1
          id: id
          groupPlatformId: groupPlatformId
          safeName: safeName
          categoryModificationTime: 0
      properties:
        Total:
          format: int32
          readOnly: true
          type: integer
        Items:
          items:
            $ref: '#/components/schemas/BulkAccountModel'
          type: array
      type: object
    ComponentsMonitoringDetailsData:
      example:
        ComponentsDetails:
        - ComponentIP: ComponentIP
          IsLoggedOn: true
          ComponentSpecificStat: 0
          ComponentUserName: ComponentUserName
          LastLogonDate: 6
          ComponentVersion: ComponentVersion
        - ComponentIP: ComponentIP
          IsLoggedOn: true
          ComponentSpecificStat: 0
          ComponentUserName: ComponentUserName
          LastLogonDate: 6
          ComponentVersion: ComponentVersion
      properties:
        ComponentsDetails:
          items:
            $ref: '#/components/schemas/ComponentMonitoringDetailsData'
          type: array
      type: object
    ComponentMonitoringDetailsData:
      example:
        ComponentIP: ComponentIP
        IsLoggedOn: true
        ComponentSpecificStat: 0
        ComponentUserName: ComponentUserName
        LastLogonDate: 6
        ComponentVersion: ComponentVersion
      properties:
        ComponentIP:
          type: string
        ComponentUserName:
          type: string
        ComponentVersion:
          type: string
        ComponentSpecificStat:
          format: int64
          type: integer
        IsLoggedOn:
          type: boolean
        LastLogonDate:
          format: int64
          type: integer
      type: object
    ComponentsMonitoringSummaryData:
      example:
        Components:
        - Description: Description
          ConnectedComponentCount: 0
          ComponentTotalCount: 6
          ComponentName: ComponentName
          ComponentSpecificStat: 1
          ComponentID: ComponentID
        - Description: Description
          ConnectedComponentCount: 0
          ComponentTotalCount: 6
          ComponentName: ComponentName
          ComponentSpecificStat: 1
          ComponentID: ComponentID
        Vaults:
        - Role: Role
          IsLoggedOn: true
          IP: IP
        - Role: Role
          IsLoggedOn: true
          IP: IP
      properties:
        Components:
          items:
            $ref: '#/components/schemas/ComponentMonitoringSummaryData'
          type: array
        Vaults:
          items:
            $ref: '#/components/schemas/ComponentMonitoringSummaryVaultData'
          type: array
      type: object
    ComponentMonitoringSummaryData:
      example:
        Description: Description
        ConnectedComponentCount: 0
        ComponentTotalCount: 6
        ComponentName: ComponentName
        ComponentSpecificStat: 1
        ComponentID: ComponentID
      properties:
        ComponentID:
          type: string
        ComponentName:
          type: string
        Description:
          type: string
        ConnectedComponentCount:
          format: int32
          type: integer
        ComponentTotalCount:
          format: int32
          type: integer
        ComponentSpecificStat:
          format: int64
          type: integer
      type: object
    ComponentMonitoringSummaryVaultData:
      example:
        Role: Role
        IsLoggedOn: true
        IP: IP
      properties:
        IP:
          type: string
        Role:
          type: string
        IsLoggedOn:
          type: boolean
      type: object
    ImportConnectionComponentData:
      example:
        ImportFile: ImportFile
      properties:
        ImportFile:
          description: The ZIP file containing the connection component.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      required:
      - ImportFile
      type: object
    ImportConnectionComponentResponse:
      example:
        ConnectionComponentID: ConnectionComponentID
      properties:
        ConnectionComponentID:
          type: string
      type: object
    DiscoveredAccount:
      example:
        passwordExpirationDateTime: 5
        passwordNeverExpires: true
        privilegedCriteria: privilegedCriteria
        address: address
        osFamily: Workstation
        platformTypeAccountProperties: "{}"
        platformType: platformType
        osGroups: osGroups
        userDisplayName: userDisplayName
        description: description
        userName: userName
        lastLogonDateTime: 6
        accountEnabled: true
        dependencies:
        - address: address
          name: name
          taskFolder: taskFolder
          type: type
        - address: address
          name: name
          taskFolder: taskFolder
          type: type
        lastPasswordSetDateTime: 1
        privileged: true
        osVersion: osVersion
        domain: domain
        discoveryDateTime: 0
        id: id
        additionalProperties: "{}"
        organizationalUnit: organizationalUnit
      properties:
        id:
          type: string
        userName:
          description: The name of the account user
          type: string
        address:
          description: The name or address of the machine where the account is located
          type: string
        discoveryDateTime:
          description: The date the account was discovered
          format: int64
          type: integer
        accountEnabled:
          description: "The state of the account, defined in the discovery source.\r\
            \nNote: Domain accounts are discovered in the Active Directory. Local\
            \ accounts are discovered on machines.\r\nIf this parameter is not set,\
            \ it is considered null"
          type: boolean
        osGroups:
          description: The name of the group the account belongs such as Administrators
            or Operators
          type: string
        platformType:
          description: "The platform where the discovered account is located.\r\n\
            One of the following: Windows Server Local, Windows Desktop Local, Windows\
            \ Domain, Unix, Unix SSH Key, AWS, AWS Access Keys, Azure Password Management"
          type: string
        domain:
          description: The domain of the account
          type: string
        lastLogonDateTime:
          description: "The date this account was last logged into, defined in the\
            \ discovery source"
          format: int64
          type: integer
        lastPasswordSetDateTime:
          description: "The date this password was last set, defined in the discovery\
            \ source"
          format: int64
          type: integer
        passwordNeverExpires:
          description: "Whether or not this password expires defined in the discovery\
            \ source.\r\nIf this parameter is not set, it is considered null.\r\n\
            This attribute cannot be set if passwordExpirationDateTime is specified"
          type: boolean
        osVersion:
          description: The version of the OS where the account was discovered
          type: string
        privileged:
          description: "Whether the discovered account is privileged or non-privileged.\r\
            \nIf this parameter is not set, it is considered null"
          type: boolean
        privilegedCriteria:
          description: "The criteria that determines whether or not the discovered\
            \ account is privileged. For example, the user or group name"
          type: string
        userDisplayName:
          description: The user's display name
          type: string
        description:
          description: "A description of the account, defined in the discovery source"
          type: string
        passwordExpirationDateTime:
          description: "The expiration date of the account, defined in the discovery\
            \ source"
          format: int64
          type: integer
        osFamily:
          description: "The type of machine where the account was discovered.\r\n\
            If this parameter is not set, it is considered null and will not be returned\
            \ in the result"
          enum:
          - Workstation
          - Server
          type: string
        additionalProperties:
          description: "List of name=value pairs for additional properties added to\
            \ the account.\r\nThis is an open list that is not validated.\r\nThe List\
            \ of properties should be valid File Properties in the vault"
          properties: {}
          type: object
        organizationalUnit:
          description: The Organizational Unit where the account is defined
          type: string
        platformTypeAccountProperties:
          description: "Object containing key-value pairs to associate with the account,\
            \ as defined by the account platform type schema. \r\nOnly properties\
            \ that appear in the platform type schema are allowed"
          properties: {}
          type: object
        dependencies:
          description: List of Windows dependencies
          items:
            $ref: '#/components/schemas/DiscoveredDependency'
          type: array
      required:
      - address
      - platformType
      - userName
      type: object
    DiscoveredDependency:
      example:
        address: address
        name: name
        taskFolder: taskFolder
        type: type
      properties:
        name:
          description: The dependency name
          type: string
        address:
          description: The dependency address
          type: string
        type:
          description: "The dependency type.\r\nOne of the following: COM+ Application,\
            \ IIS Anonymous Authentication, IIS Application Pool, Windows Scheduled\
            \ Task, Windows Service"
          type: string
        taskFolder:
          description: The dependency task folder - For Windows Scheduled Task
          type: string
      required:
      - address
      - type
      type: object
    DiscoveredAccountResponse:
      example:
        address: address
        safe: safe
        id: id
        userName: userName
        status: status
        dependencies:
        - address: address
          failureReason: failureReason
          name: name
          id: id
          type: type
          status: status
        - address: address
          failureReason: failureReason
          name: name
          id: id
          type: type
          status: status
      properties:
        id:
          description: The ID of the on-boarded or pending account.
          type: string
        status:
          description: "The status of the account. The possible values are:\r\naddedAccount\
            \ - the account was on-boarded to the Vault.\r\naddedAsPending - the account\
            \ was added to the Pending Accounts list.\r\nupdatedAccount - the account\
            \ is already exists and new dependencies were added to it.\r\nupdatedPending\
            \ - the pending account already exists and it was updated if needed.\r\
            \nalreadyExists - the account is already exists and no new dependencies\
            \ were added."
          type: string
        userName:
          description: The name of the account user.
          type: string
        address:
          description: The name or address of the machine where the account is located.
          type: string
        safe:
          description: The name of the safe of the account.
          type: string
        dependencies:
          description: The dependencies of the account.
          items:
            $ref: '#/components/schemas/DiscoveredDependencyResponse'
          type: array
      type: object
    DiscoveredDependencyResponse:
      example:
        address: address
        failureReason: failureReason
        name: name
        id: id
        type: type
        status: status
      properties:
        id:
          description: The ID of the on-boarded or pending dependency.
          type: string
        status:
          description: "The status of the dependency. The possible values are:\r\n\
            addedDependency - the dependency was on-boarded to the Vault.\r\naddedAsPending\
            \ - the dependency was added to the Pending Accounts list.\r\nalreadyExists\
            \ - the dependency is already exists or already pending.\r\nfailed - there\
            \ was a failure during dependency creation.\r\nskip - the dependency wasn't\
            \ added since there was a failure in previous dependency creation."
          type: string
        name:
          description: The dependency name.
          type: string
        address:
          description: The dependency address.
          type: string
        type:
          description: The dependency type.
          type: string
        failureReason:
          description: "The failure message, in case the dependency failed to create."
          type: string
      type: object
    GetDiscoveredAccountsRequest:
      properties:
        search:
          description: "Searches according to REST standard (search=\"search word\"\
            ).\r\n\r\nSearch is supported for userName and address."
          maxLength: 500
          minLength: 0
          type: string
        searchType:
          description: "The type of search to perform. \r\n\r\nThe keyword can either\
            \ be contained within the account property values, or at the beginning\
            \ of the value\r\nspecified in the search parameter.\r\n\r\nWhen using\
            \ a keyword at the beginning of a value, performance is enhanced.\r\n\r\
            \nValid values: contains (default) or startswith"
          enum:
          - Contains
          - StartsWith
          type: string
        offset:
          description: The offset of the first returned accounts into the list of
            results.
          format: int32
          type: integer
        limit:
          description: "The maximum number of returned accounts. \r\n\r\nIf not specified,\
            \ the server limits the results to 100.\r\n\r\nThe maximum number that\
            \ can be specified is 1000."
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        filter:
          description: "Search for accounts filtered by:\r\n\r\n• platformType - Get\
            \ discovered accounts of a specific platform, using the platform type\
            \ name.\r\n\r\n    Usage: filter=platformType eq Windows Server Local\r\
            \n    \r\n    Type: string\r\n    \r\n    Valid values:\r\n    \r\n  \
            \      o Windows Server Local\r\n        \r\n        o Windows Desktop\
            \ Local\r\n        \r\n        o Windows Domain\r\n        \r\n      \
            \  o Unix\r\n        \r\n        o Unix SSH Key\r\n        \r\n      \
            \  o AWS\r\n        \r\n        o AWS Access Keys\r\n        \r\n    \
            \    o Azure Password Management\r\n    \r\n• privileged - Get only privileged\
            \ or non-privileged discovered accounts.\r\n\r\n    Usage: filter=privileged\
            \ eq true\r\n    \r\n    Type: boolean\r\n    \r\n    Valid values: true/false\r\
            \n    \r\n• accountEnabled - Get only enabled or disabled discovered accounts.\r\
            \n   \r\n    Usage: filter=accountEnabled eq true\r\n    \r\n    Type:\
            \ boolean\r\n    \r\n    Valid values: true/false\r\n            \r\n\r\
            \nNote: To use more than one filter, you can use the AND operator. \r\n\
            \r\n    filter=platformType eq Windows Server Local AND privileged eq\
            \ true"
          type: string
      type: object
    GetDiscoveredAccountsResponse:
      example:
        count: 2
        value:
        - passwordExpirationDateTime: 5
          passwordNeverExpires: true
          privilegedCriteria: privilegedCriteria
          address: address
          osFamily: Workstation
          platformTypeAccountProperties:
            key: platformTypeAccountProperties
          platformType: platformType
          osGroups: osGroups
          userDisplayName: userDisplayName
          description: description
          userName: userName
          lastLogonDateTime: 6
          accountEnabled: true
          numberOfDependencies: 5
          dependencies:
          - address: address
            name: name
            taskFolder: taskFolder
            type: type
          - address: address
            name: name
            taskFolder: taskFolder
            type: type
          lastPasswordSetDateTime: 1
          privileged: true
          osVersion: osVersion
          domain: domain
          name: name
          discoveryDateTime: 0
          id: id
          additionalProperties:
            key: additionalProperties
          organizationalUnit: organizationalUnit
        - passwordExpirationDateTime: 5
          passwordNeverExpires: true
          privilegedCriteria: privilegedCriteria
          address: address
          osFamily: Workstation
          platformTypeAccountProperties:
            key: platformTypeAccountProperties
          platformType: platformType
          osGroups: osGroups
          userDisplayName: userDisplayName
          description: description
          userName: userName
          lastLogonDateTime: 6
          accountEnabled: true
          numberOfDependencies: 5
          dependencies:
          - address: address
            name: name
            taskFolder: taskFolder
            type: type
          - address: address
            name: name
            taskFolder: taskFolder
            type: type
          lastPasswordSetDateTime: 1
          privileged: true
          osVersion: osVersion
          domain: domain
          name: name
          discoveryDateTime: 0
          id: id
          additionalProperties:
            key: additionalProperties
          organizationalUnit: organizationalUnit
        nextLink: nextLink
      properties:
        value:
          items:
            $ref: '#/components/schemas/GetDiscoveredAccount'
          type: array
        count:
          description: Total number of results across all pages
          format: int32
          type: integer
        nextLink:
          description: "An opaque URL to the next page of results. \r\nShould be present\
            \ only if requested page size (limit) is not specified and there are more\
            \ results than a single page as defined by the server.\r\nThe last page\
            \ shouldn't have 'nextLink' in the response. \r\nIf the limit in the request\
            \ is too high, an error is returned"
          type: string
      type: object
    GetDiscoveredAccount:
      example:
        passwordExpirationDateTime: 5
        passwordNeverExpires: true
        privilegedCriteria: privilegedCriteria
        address: address
        osFamily: Workstation
        platformTypeAccountProperties:
          key: platformTypeAccountProperties
        platformType: platformType
        osGroups: osGroups
        userDisplayName: userDisplayName
        description: description
        userName: userName
        lastLogonDateTime: 6
        accountEnabled: true
        numberOfDependencies: 5
        dependencies:
        - address: address
          name: name
          taskFolder: taskFolder
          type: type
        - address: address
          name: name
          taskFolder: taskFolder
          type: type
        lastPasswordSetDateTime: 1
        privileged: true
        osVersion: osVersion
        domain: domain
        name: name
        discoveryDateTime: 0
        id: id
        additionalProperties:
          key: additionalProperties
        organizationalUnit: organizationalUnit
      properties:
        id:
          description: The ID of the discovered account
          type: string
        name:
          description: The name of the account in the PasswordManager_Pending safe
          type: string
        userName:
          description: The name of the discovered account user
          type: string
        address:
          description: The name or address of the machine\domain where the account
            was discovered
          type: string
        discoveryDateTime:
          description: The date the account was discovered
          format: int64
          type: integer
        accountEnabled:
          description: "The state of the account, defined in the discovery source.\r\
            \nNote: The state of domain accounts is based on the Active Directory.\
            \ The state of local accounts is based on the local machine.\r\nIf this\
            \ parameter is not set, it is considered null"
          type: boolean
        osGroups:
          description: "The group names that the account belongs to, such as Administrators\
            \ or Operators"
          type: string
        platformType:
          description: The platform where the discovered account is located
          type: string
        domain:
          description: The domain of the account
          type: string
        lastLogonDateTime:
          description: "The date this account was last logged into, defined in the\
            \ discovery source"
          format: int64
          type: integer
        lastPasswordSetDateTime:
          description: "The date this password was last set, defined in the discovery\
            \ source"
          format: int64
          type: integer
        passwordNeverExpires:
          description: "Whether or not this password expires, defined in the discovery\
            \ source.\r\nIf this parameter is not set, it is considered null"
          type: boolean
        osVersion:
          description: The version of the OS where the account was discovered
          type: string
        privileged:
          description: "Whether the discovered account is privileged or non-privileged.\r\
            \nIf this parameter is not set, it is considered null"
          type: boolean
        privilegedCriteria:
          description: "The criteria that determines whether or not the discovered\
            \ account is privileged. For example, the user or group name"
          type: string
        userDisplayName:
          description: The user's display name
          type: string
        description:
          description: "A description of the account, defined in the discovery source"
          type: string
        passwordExpirationDateTime:
          description: "The expiration date of the account, defined in the discovery\
            \ source"
          format: int64
          type: integer
        osFamily:
          description: "The type of machine where the account was discovered.\r\n\
            If this parameter is not set, it is considered null and will not be returned\
            \ in the result"
          enum:
          - Workstation
          - Server
          type: string
        organizationalUnit:
          description: The organizational unit where the account is defined
          type: string
        additionalProperties:
          additionalProperties:
            type: string
          description: "List of name=value pairs for additional properties of the\
            \ account.\r\nThe list of properties is valid file properties in the Vault"
          type: object
        platformTypeAccountProperties:
          additionalProperties:
            type: string
          description: "The object that contains the key-value pairs to associate\
            \ with the account, as defined by the account platform type schema. \r\
            \nOnly properties that appear in the platform type schema are allowed"
          type: object
        numberOfDependencies:
          description: The number of dependencies for the discovered account
          format: int32
          type: integer
        dependencies:
          description: The list of dependency details for the discovered account
          items:
            $ref: '#/components/schemas/GetDiscoveredDependency'
          type: array
      type: object
    GetDiscoveredDependency:
      example:
        address: address
        name: name
        taskFolder: taskFolder
        type: type
      properties:
        name:
          description: The dependency name
          type: string
        address:
          description: The dependency address
          type: string
        type:
          description: "The dependency type.\r\nOne of the following: COM+ Application,\
            \ IIS Anonymous Authentication, IIS Application Pool, Windows Scheduled\
            \ Task, Windows Service"
          type: string
        taskFolder:
          description: The dependency task folder - For Windows Scheduled Task
          type: string
      type: object
    IncomingRequest:
      example:
        Status: 7
        CreationDate: 0
        AdditionalInfo:
          key: AdditionalInfo
        CurrentConfirmationLevel: 3
        ConfirmationsLeft: 5
        RequestID: RequestID
        InvalidRequestReason: 9
        RequiredConfirmersCountLevel2: 2
        TicketingSystemProperties:
          Status: Status
          Number: Number
          Name: Name
        RequestorFullName: RequestorFullName
        UserReason: UserReason
        RequestorReason: RequestorReason
        Operation: Operation
        StatusTitle: StatusTitle
        Confirmers:
        - AdditionalDetails:
            key: AdditionalDetails
          Type: 4
          Action: 1
          ID: 7
          Reason: Reason
          Members:
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          Name: Name
          ActionDate: 1
        - AdditionalDetails:
            key: AdditionalDetails
          Type: 4
          Action: 1
          ID: 7
          Reason: Reason
          Members:
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          Name: Name
          ActionDate: 1
        ExpirationDate: 6
        AccessTo: 2
        AccessFrom: 5
        SafeName: SafeName
        RequestorUserName: RequestorUserName
        OperationType: 1
        AccessType: AccessType
        AccountDetails:
          AccountID: AccountID
          Properties:
            key: Properties
      properties:
        RequestorFullName:
          type: string
        RequestID:
          type: string
        SafeName:
          type: string
        RequestorUserName:
          type: string
        RequestorReason:
          type: string
        UserReason:
          type: string
        CreationDate:
          format: int64
          type: integer
        Operation:
          type: string
        ExpirationDate:
          format: int64
          type: integer
        OperationType:
          format: int32
          type: integer
        AccessType:
          type: string
        ConfirmationsLeft:
          format: int64
          type: integer
        AccessFrom:
          format: int64
          type: integer
        AccessTo:
          format: int64
          type: integer
        Status:
          format: int32
          type: integer
        StatusTitle:
          type: string
        InvalidRequestReason:
          format: int32
          type: integer
        CurrentConfirmationLevel:
          format: int32
          type: integer
        RequiredConfirmersCountLevel2:
          format: int32
          type: integer
        TicketingSystemProperties:
          $ref: '#/components/schemas/TicketingSystem'
        AdditionalInfo:
          additionalProperties:
            type: string
          type: object
        AccountDetails:
          $ref: '#/components/schemas/Account'
        Confirmers:
          items:
            $ref: '#/components/schemas/ConfirmerStatus'
          type: array
      type: object
    TicketingSystem:
      example:
        Status: Status
        Number: Number
        Name: Name
      properties:
        Name:
          type: string
        Number:
          type: string
        Status:
          type: string
      type: object
    Account:
      example:
        AccountID: AccountID
        Properties:
          key: Properties
      properties:
        AccountID:
          type: string
        Properties:
          additionalProperties:
            type: string
          type: object
      type: object
    ConfirmerStatus:
      example:
        AdditionalDetails:
          key: AdditionalDetails
        Type: 4
        Action: 1
        ID: 7
        Reason: Reason
        Members:
        - AdditionalDetails:
            key: AdditionalDetails
          UserName: UserName
          UserID: 1
        - AdditionalDetails:
            key: AdditionalDetails
          UserName: UserName
          UserID: 1
        Name: Name
        ActionDate: 1
      properties:
        Type:
          format: int32
          type: integer
        ID:
          format: int64
          type: integer
        Name:
          type: string
        Action:
          format: int32
          type: integer
        Reason:
          type: string
        ActionDate:
          format: int64
          type: integer
        AdditionalDetails:
          additionalProperties:
            type: string
          type: object
        Members:
          items:
            $ref: '#/components/schemas/ConfirmerMember'
          type: array
      type: object
    ConfirmerMember:
      example:
        AdditionalDetails:
          key: AdditionalDetails
        UserName: UserName
        UserID: 1
      properties:
        UserID:
          format: int64
          type: integer
        UserName:
          type: string
        AdditionalDetails:
          additionalProperties:
            type: string
          type: object
      type: object
    Request:
      example:
        Status: 7
        CreationDate: 0
        AdditionalInfo:
          key: AdditionalInfo
        CurrentConfirmationLevel: 3
        ConfirmationsLeft: 5
        RequestID: RequestID
        InvalidRequestReason: 9
        RequiredConfirmersCountLevel2: 2
        TicketingSystemProperties:
          Status: Status
          Number: Number
          Name: Name
        UserReason: UserReason
        RequestorReason: RequestorReason
        Operation: Operation
        StatusTitle: StatusTitle
        Confirmers:
        - AdditionalDetails:
            key: AdditionalDetails
          Type: 4
          Action: 1
          ID: 7
          Reason: Reason
          Members:
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          Name: Name
          ActionDate: 1
        - AdditionalDetails:
            key: AdditionalDetails
          Type: 4
          Action: 1
          ID: 7
          Reason: Reason
          Members:
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          Name: Name
          ActionDate: 1
        ExpirationDate: 6
        AccessTo: 2
        AccessFrom: 5
        SafeName: SafeName
        RequestorUserName: RequestorUserName
        OperationType: 1
        AccessType: AccessType
        AccountDetails:
          AccountID: AccountID
          Properties:
            key: Properties
      properties:
        RequestID:
          type: string
        SafeName:
          type: string
        RequestorUserName:
          type: string
        RequestorReason:
          type: string
        UserReason:
          type: string
        CreationDate:
          format: int64
          type: integer
        Operation:
          type: string
        ExpirationDate:
          format: int64
          type: integer
        OperationType:
          format: int32
          type: integer
        AccessType:
          type: string
        ConfirmationsLeft:
          format: int64
          type: integer
        AccessFrom:
          format: int64
          type: integer
        AccessTo:
          format: int64
          type: integer
        Status:
          format: int32
          type: integer
        StatusTitle:
          type: string
        InvalidRequestReason:
          format: int32
          type: integer
        CurrentConfirmationLevel:
          format: int32
          type: integer
        RequiredConfirmersCountLevel2:
          format: int32
          type: integer
        TicketingSystemProperties:
          $ref: '#/components/schemas/TicketingSystem'
        AdditionalInfo:
          additionalProperties:
            type: string
          type: object
        AccountDetails:
          $ref: '#/components/schemas/Account'
        Confirmers:
          items:
            $ref: '#/components/schemas/ConfirmerStatus'
          type: array
      type: object
    ConfirmRejectData:
      example:
        Reason: Reason
      properties:
        Reason:
          description: The confirmer's reason for confirming\rejecting this request.
          type: string
      type: object
    LDAPDirectoryBase:
      example:
        DomainName: DomainName
        DomainBaseContext: DomainBaseContext
      properties:
        DomainName:
          description: The address of the domain.
          type: string
        DomainBaseContext:
          description: The base context of the External Directory.
          type: string
      required:
      - DomainBaseContext
      - DomainName
      type: object
    LDAPDirectory:
      example:
        Port: 5248
        UseLDAPCertificatesOnly: true
        LDAPDirectoryUsage:
        - 5
        - 5
        DirectoryType: DirectoryType
        ReferralsDNSLookup: true
        BindPassword: BindPassword
        AdditionalQueryFilterOptimize: true
        PasswordObjectPath: PasswordObjectPath
        RequireReferredDirectoryDefinition: true
        SSLConnect: true
        ReferralsChasingHopLimit: 1
        AppendFriendlyDomainNameToGroup: true
        DCList:
        - Port: 36944
          SSLConnect: true
          Name: Name
        - Port: 36944
          SSLConnect: true
          Name: Name
        LDAPDirectoryGroupBaseContext: LDAPDirectoryGroupBaseContext
        DomainName: DomainName
        LDAPDirectoryName: LDAPDirectoryName
        ClientBrowsing: true
        DomainBaseContext: DomainBaseContext
        BindUsername: BindUsername
        LDAPDirectoryQueryOrder: 6
        ExternalObjectCreation: true
        DisableUserEnumeration: true
        Authentication: true
        VaultObjectNamesPrefix: VaultObjectNamesPrefix
        DisablePaging: true
        ProvisionDisabledUsers: true
        LDAPDirectoryDescription: LDAPDirectoryDescription
      properties:
        DirectoryType:
          description: The name of the directory profile file that represents the
            profile the Vault should use when working with the specified LDAP directory.
          type: string
        BindUsername:
          description: The user that will authenticate to the directory server.
          type: string
        BindPassword:
          description: The password for the user specified in the Bind User field.
          type: string
        Port:
          description: "The port that will be used to access the specified server.\r\
            \nThe standard port for SSL LDAP connections is 636, and for non-SSL LDAP\
            \ connections is 389."
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        SSLConnect:
          description: Read-only - Whether or not to connect to the external directory
            with SSL.
          type: boolean
        LDAPDirectoryName:
          description: "Read-only - The name of the LDAP directory where users and\
            \ groups are listed.\r\nNote: After external users and groups from this\
            \ directory have been created in the Vault, this parameter must not be\
            \ changed."
          type: string
        LDAPDirectoryQueryOrder:
          description: Read-only - The order in which the Vault will search directories
            for users before creating a corresponding User Account or Group in the
            Vault.
          format: int32
          type: integer
        LDAPDirectoryDescription:
          description: Read-only - A short description of the LDAP directory.
          type: string
        VaultObjectNamesPrefix:
          description: "Read-only - The text that will be used as a prefix for external\
            \ users and groups in the Vault created from the specified directory.\r\
            \nThis parameter is oprional,\r\nThe parameter will be ignored if AddDomainToUserName\
            \ parameter is set to Yes."
          type: string
        PasswordObjectPath:
          description: Read-only - The location of the bind password in the VaultInternal
            Safe.
          type: string
        LDAPDirectoryGroupBaseContext:
          description: "Read-only - The base context that will be used for external\
            \ directory queries, for groups only. This parameter is optional."
          type: string
        ReferralsChasingHopLimit:
          description: Read-only - The number of recursive LDAP referrals that will
            be chased. The default value is -1 (unlimited).
          format: int32
          type: integer
        AppendFriendlyDomainNameToGroup:
          description: Read-only - Whether or not to add active directory domain names
            to names of groups that are provisioned in the Vault.
          type: boolean
        RequireReferredDirectoryDefinition:
          description: "Read-only - Whether or not LDAP referrals will only be supported\
            \ when an external directory parameter file has been defined in the Vault\
            \ for the referred directory.\r\nThe default value is false"
          type: boolean
        ReferralsDNSLookup:
          description: "Read-only - Enables referrals to be specified as domain names.\
            \ The default value is false.\r\n\r\nIf this parameter is not enabled,\
            \ in SSL or High-Availabilty implementations, \r\na directory file must\
            \ be created for each domain that will be supported by the Vault, \r\n\
            and the domain name specified in each parameter file must be mapped in\
            \ the DomainDNSName parameter in the referred directory. \r\nIn addition,\
            \ each referral directory must be defined in the Windows\\System32\\Etc\\\
            Hosts file."
          type: boolean
        DisableUserEnumeration:
          description: "Read-only - If set to true, prevents enumerating users from\
            \ directory for Safe ownership lockups."
          type: boolean
        AdditionalQueryFilterOptimize:
          description: Read-only - Causes an additional query filter to be done in
            scope of specific user.
          type: boolean
        ClientBrowsing:
          description: Read-only - Whether or not to use this directory for PKI certificate
            browsing.
          type: boolean
        ExternalObjectCreation:
          description: Read-only - Whether or not to use this directory for user provisioning.
          type: boolean
        Authentication:
          description: Read-only - Whether or not to use this directory for authentication.
          type: boolean
        UseLDAPCertificatesOnly:
          description: "Read-only - Determines whether the user certificate DN can\
            \ be set manually, or taken from the Directory."
          type: boolean
        DisablePaging:
          description: Read-only - Determines whether or not to use page mode search
            while searching in the LDAP directory. This parameter is optional.
          type: boolean
        ProvisionDisabledUsers:
          description: Read-only - Whether or not LDAP disabled users will be created
            in the Vault.
          type: boolean
        LDAPDirectoryUsage:
          description: "Read-only - Whether you can create external objects from this\
            \ external directory, browse it, authenticate users, or do all three.\r\
            \nPossible values: ClientBrowsing, ExternalObjectsCreation, Authentication.\r\
            \nThe user is able to set one value or multiple values separated by comma."
          items:
            enum:
            - 1
            - 2
            - 4
            format: int32
            type: integer
          type: array
        DCList:
          description: A list of host servers for External Directory.
          items:
            $ref: '#/components/schemas/LDAPDomainController'
          type: array
        DomainName:
          description: The address of the domain.
          type: string
        DomainBaseContext:
          description: The base context of the External Directory.
          type: string
      required:
      - DCList
      - DirectoryType
      - DomainBaseContext
      - DomainName
      type: object
    LDAPDomainController:
      example:
        Port: 36944
        SSLConnect: true
        Name: Name
      properties:
        Name:
          description: The name of the server machine where the external directory
            is installed.
          type: string
        Port:
          description: The port number through which the external directory can be
            accessed.
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        SSLConnect:
          description: Whether or not to connect to the external directory with SSL.
          type: boolean
      required:
      - Name
      type: object
    LDAPMappingData:
      example:
        DomainGroups:
        - DomainGroups
        - DomainGroups
        MappingAuthorizations:
        - AddUpdateUsers
        - AddUpdateUsers
        LogonFromHour: 1
        LDAPQuery: LDAPQuery
        VaultGroups:
        - VaultGroups
        - VaultGroups
        LDAPBranch: LDAPBranch
        DisableUser: true
        LogonToHour: 5
        AuthenticationMethod:
        - AuthTypePass
        - AuthTypePass
        UserExpiration: 6
        MappingID: 5
        UserActivityLogPeriod: 293
        DirectoryMappingOrder: 2
        MappingName: MappingName
        UserType: UserType
        Location: Location
      properties:
        LDAPBranch:
          description: The LDAP branch used for the directory queries.
          type: string
        VaultGroups:
          description: A list of Vault groups that the user will be added to once
            mapped.
          items:
            type: string
          type: array
        MappingAuthorizations:
          description: "The security attributes and authorizations that are applied\
            \ when LDAP user accounts in the current mapping are created in the Vault.\r\
            \nHere is the list with the possible authorizations:\r\nAddSafes, \r\n\
            AuditUsers, \r\nAddUpdateUsers, \r\nResetUsersPasswords, \r\nActivateUsers,\r\
            \nAddNetworkAreas,\r\nManageServerFileCategories,\r\nBackupAllSafes,\r\
            \nRestoreAllSafes."
          items:
            enum:
            - AddUpdateUsers
            - AddSafes
            - AddNetworkAreas
            - ManageDirectoryMapping
            - ManageServerFileCategories
            - AuditUsers
            - BackupAllSafes
            - RestoreAllSafes
            - ActivateUsers
            - ResetUsersPasswords
            - AllAuths
            type: string
          type: array
        Location:
          description: "The specific Vault location path that users in the current\
            \ mapping are added under.\r\nThis value cannot be updated."
          type: string
        AuthenticationMethod:
          description: Read-only - The authentication method that the users belong
            to this map will use to log onto the Vault.
          items:
            enum:
            - AuthTypePass
            - AuthTypeCyberKey
            - AuthTypeVaultPKI
            - AuthTypeSecurID
            - AuthTypePartImp
            - AuthTypeFullImp
            - AuthTypeImp
            - AuthTypeNTAuth
            - AuthTypeRadius
            - AuthTypeLDAP
            - AuthTypeProvider
            - AuthTypeLDAPOrPass
            - AuthTypeAnyPass
            type: string
          type: array
        UserType:
          description: "Read-only - The interfaces that users in the current mapping\
            \ can use to access the Vault.\r\nThis will only be available to users\
            \ with Add/Update users permissions."
          type: string
        DisableUser:
          description: Read-only - Whether users in the current mapping are temporarily
            inaccessible.
          type: boolean
        UserActivityLogPeriod:
          description: The number of days that activity records are stored for users
            in the current mapping before they can be deleted.
          format: int32
          maximum: 3650
          minimum: 1
          type: integer
        UserExpiration:
          description: "Read-only - The date after which user accounts in the current\
            \ mapping are no longer accessible, in Unix time (\"0\" if never)."
          format: int64
          type: integer
        LogonFromHour:
          description: Read-only - Whether users in the current mapping can log on
            to the Vault only starting from specific hours.
          format: int32
          type: integer
        LogonToHour:
          description: Read-only - Whether users in the current mapping can log on
            to the Vault only up to specific hours.
          format: int32
          type: integer
        MappingID:
          description: Read-only - Unique ID of the directory mapping
          format: int64
          type: integer
        DirectoryMappingOrder:
          description: "The order in which the maps are matched with users and groups\
            \ \r\nfrom the External Directory when they are created in the Vault.\r\
            \nThis field is read only."
          format: int32
          type: integer
        MappingName:
          description: "The name of the role.\r\nFor example: Vault Admins, Safe Managers."
          maxLength: 28
          minLength: 0
          type: string
        LDAPQuery:
          description: LDAP users that the filter applies to them are assigned to
            relevant roles in the system.
          type: string
        DomainGroups:
          description: "Users who belong to these LDAP groups are assigned to relevant\
            \ roles in the system.\r\nNote: This field is required if the VaultGroups\
            \ field was sent."
          items:
            type: string
          type: array
      required:
      - LDAPBranch
      - MappingName
      type: object
    LDAPMappingsOrder:
      example:
        MappingsOrder:
        - 0
        - 0
      properties:
        MappingsOrder:
          description: "The new order of the mappings, sorted by importance. \r\n\
            Must include all mappings.\r\nEach ID can only appear once."
          items:
            format: int64
            type: integer
          type: array
      required:
      - MappingsOrder
      type: object
    PageQS:
      properties:
        Limit:
          format: int64
          minimum: 1
          type: integer
        Offset:
          format: int64
          type: integer
        UseCache:
          type: boolean
      type: object
    SortQS:
      properties:
        Sort:
          items:
            type: string
          type: array
      type: object
    MonitoringQS:
      properties:
        Search:
          maxLength: 500
          minLength: 0
          type: string
        Activities:
          type: string
        FromTime:
          format: int64
          type: integer
        ToTime:
          format: int64
          type: integer
        Safe:
          type: string
      type: object
    LiveSession:
      example:
        User: User
        AccountUsername: AccountUsername
        Start: 0
        AccountPlatformID: AccountPlatformID
        RecordingFiles:
        - Format: Format
          RecordingType: 2
          FileName: FileName
          LastReviewBy: LastReviewBy
          CompressedFileSize: 1
          LastReviewDate: 4
          FileSize: 7
        - Format: Format
          RecordingType: 2
          FileName: FileName
          LastReviewBy: LastReviewBy
          CompressedFileSize: 1
          LastReviewDate: 4
          FileSize: 7
        FileName: FileName
        IncidentDetails:
          Sessions:
          - Score: 9
            Commands:
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            Severity: Severity
            Id: Id
          - Score: 9
            Commands:
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            Severity: Severity
            Id: Id
          Incident:
            StartDate: 7
            Score: 2
            Id: Id
            Url: Url
            Name: Name
        RemoteMachine: RemoteMachine
        ProtectionDate: 5
        RecordedActivities:
        - ActivityId: ActivityId
          ActivityType: 1
          Formats:
          - Formats
          - Formats
          ActivityText: ActivityText
          Offsets:
            key: Offsets
        - ActivityId: ActivityId
          ActivityType: 1
          Formats:
          - Formats
          - Formats
          ActivityText: ActivityText
          Offsets:
            key: Offsets
        FolderName: FolderName
        AccountAddress: AccountAddress
        ConnectionComponentID: ConnectionComponentID
        ProtectionEnabled: true
        CanTerminate: true
        CanSuspend: true
        SessionGuid: 00000000-0000-0000-0000-000000000000
        TicketID: TicketID
        SafeName: SafeName
        VideoSize: 1
        CanMonitor: true
        IsLive: true
        FromIP: FromIP
        Protocol: Protocol
        Client: Client
        PSMRecordingEntity: PSMRecordingEntity
        RiskScore: 5
        TextSize: 6
        Duration: 1
        Severity: Severity
        PIMSuCWD: PIMSuCWD
        RawProperties:
          key: RawProperties
        ProtectedBy: ProtectedBy
        DetailsUrl: DetailsUrl
        End: 6
        PIMSuCommand: PIMSuCommand
        SessionID: SessionID
      properties:
        CanTerminate:
          type: boolean
        CanMonitor:
          type: boolean
        CanSuspend:
          type: boolean
        SessionID:
          type: string
        SessionGuid:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        SafeName:
          type: string
        FolderName:
          type: string
        IsLive:
          type: boolean
        FileName:
          type: string
        Start:
          format: int64
          type: integer
        End:
          format: int64
          type: integer
        Duration:
          format: int64
          type: integer
        User:
          type: string
        RemoteMachine:
          type: string
        ProtectionDate:
          format: int64
          type: integer
        ProtectedBy:
          type: string
        ProtectionEnabled:
          type: boolean
        AccountUsername:
          type: string
        AccountPlatformID:
          type: string
        AccountAddress:
          type: string
        PIMSuCommand:
          type: string
        PIMSuCWD:
          type: string
        ConnectionComponentID:
          type: string
        PSMRecordingEntity:
          type: string
        TicketID:
          type: string
        FromIP:
          type: string
        Protocol:
          type: string
        Client:
          type: string
        RiskScore:
          format: int32
          type: integer
        Severity:
          type: string
        IncidentDetails:
          $ref: '#/components/schemas/PTAData'
        RawProperties:
          additionalProperties:
            type: string
          type: object
        RecordingFiles:
          items:
            $ref: '#/components/schemas/RecordingFile'
          type: array
        RecordedActivities:
          items:
            $ref: '#/components/schemas/RecordedCommand'
          type: array
        VideoSize:
          format: int64
          type: integer
        TextSize:
          format: int64
          type: integer
        DetailsUrl:
          type: string
      type: object
    PTAData:
      example:
        Sessions:
        - Score: 9
          Commands:
          - Score: 3
            Value: Value
            Severity: Severity
            Offset: Offset
          - Score: 3
            Value: Value
            Severity: Severity
            Offset: Offset
          Severity: Severity
          Id: Id
        - Score: 9
          Commands:
          - Score: 3
            Value: Value
            Severity: Severity
            Offset: Offset
          - Score: 3
            Value: Value
            Severity: Severity
            Offset: Offset
          Severity: Severity
          Id: Id
        Incident:
          StartDate: 7
          Score: 2
          Id: Id
          Url: Url
          Name: Name
      properties:
        Incident:
          $ref: '#/components/schemas/Incident'
        Sessions:
          items:
            $ref: '#/components/schemas/Session'
          type: array
      type: object
    RecordingFile:
      example:
        Format: Format
        RecordingType: 2
        FileName: FileName
        LastReviewBy: LastReviewBy
        CompressedFileSize: 1
        LastReviewDate: 4
        FileSize: 7
      properties:
        FileName:
          type: string
        RecordingType:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        LastReviewBy:
          type: string
        LastReviewDate:
          format: int64
          type: integer
        FileSize:
          format: int64
          type: integer
        CompressedFileSize:
          format: int64
          type: integer
        Format:
          type: string
      type: object
    RecordedCommand:
      example:
        ActivityId: ActivityId
        ActivityType: 1
        Formats:
        - Formats
        - Formats
        ActivityText: ActivityText
        Offsets:
          key: Offsets
      properties:
        ActivityText:
          type: string
        ActivityType:
          format: int32
          type: integer
        ActivityId:
          type: string
        Formats:
          items:
            type: string
          type: array
        Offsets:
          additionalProperties:
            type: string
          type: object
      type: object
    Incident:
      example:
        StartDate: 7
        Score: 2
        Id: Id
        Url: Url
        Name: Name
      properties:
        Id:
          type: string
        Url:
          type: string
        Score:
          format: int32
          type: integer
        Name:
          type: string
        StartDate:
          format: int64
          type: integer
      type: object
    Session:
      example:
        Score: 9
        Commands:
        - Score: 3
          Value: Value
          Severity: Severity
          Offset: Offset
        - Score: 3
          Value: Value
          Severity: Severity
          Offset: Offset
        Severity: Severity
        Id: Id
      properties:
        Id:
          type: string
        Score:
          format: int32
          type: integer
        Severity:
          type: string
        Commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
      type: object
    Command:
      example:
        Score: 3
        Value: Value
        Severity: Severity
        Offset: Offset
      properties:
        Value:
          type: string
        Offset:
          type: string
        Score:
          format: int32
          type: integer
        Severity:
          type: string
      type: object
    LoginsInfoData:
      example:
        LastFailLoginTime: 1
        LastFailLoginIP: LastFailLoginIP
        FailedLogins: 6
        LastSuccessLoginTime: 0
        LastSuccessLoginIP: LastSuccessLoginIP
      properties:
        LastSuccessLoginTime:
          format: int64
          type: integer
        LastSuccessLoginIP:
          type: string
        FailedLogins:
          format: int32
          type: integer
        LastFailLoginTime:
          format: int64
          type: integer
        LastFailLoginIP:
          type: string
      type: object
    MyRequest:
      example:
        Status: 7
        CreationDate: 0
        AdditionalInfo:
          key: AdditionalInfo
        CurrentConfirmationLevel: 3
        ConfirmationsLeft: 5
        RequestID: RequestID
        InvalidRequestReason: 9
        RequiredConfirmersCountLevel2: 2
        TicketingSystemProperties:
          Status: Status
          Number: Number
          Name: Name
        UserReason: UserReason
        RequestorReason: RequestorReason
        Operation: Operation
        StatusTitle: StatusTitle
        Confirmers:
        - AdditionalDetails:
            key: AdditionalDetails
          Type: 4
          Action: 1
          ID: 7
          Reason: Reason
          Members:
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          Name: Name
          ActionDate: 1
        - AdditionalDetails:
            key: AdditionalDetails
          Type: 4
          Action: 1
          ID: 7
          Reason: Reason
          Members:
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          - AdditionalDetails:
              key: AdditionalDetails
            UserName: UserName
            UserID: 1
          Name: Name
          ActionDate: 1
        ExpirationDate: 6
        AccessTo: 2
        AccessFrom: 5
        SafeName: SafeName
        RequestorUserName: RequestorUserName
        OperationType: 1
        AccessType: AccessType
        AccountDetails:
          AccountID: AccountID
          Properties:
            key: Properties
      properties:
        RequestID:
          type: string
        SafeName:
          type: string
        RequestorUserName:
          type: string
        RequestorReason:
          type: string
        UserReason:
          type: string
        CreationDate:
          format: int64
          type: integer
        Operation:
          type: string
        ExpirationDate:
          format: int64
          type: integer
        OperationType:
          format: int32
          type: integer
        AccessType:
          type: string
        ConfirmationsLeft:
          format: int64
          type: integer
        AccessFrom:
          format: int64
          type: integer
        AccessTo:
          format: int64
          type: integer
        Status:
          format: int32
          type: integer
        StatusTitle:
          type: string
        InvalidRequestReason:
          format: int32
          type: integer
        CurrentConfirmationLevel:
          format: int32
          type: integer
        RequiredConfirmersCountLevel2:
          format: int32
          type: integer
        TicketingSystemProperties:
          $ref: '#/components/schemas/TicketingSystem'
        AdditionalInfo:
          additionalProperties:
            type: string
          type: object
        AccountDetails:
          $ref: '#/components/schemas/Account'
        Confirmers:
          items:
            $ref: '#/components/schemas/ConfirmerStatus'
          type: array
      type: object
    NewRequest:
      example:
        AdditionalInfo:
          key: AdditionalInfo
        ConnectionComponent: ConnectionComponent
        AccountId: AccountId
        TicketId: TicketId
        UseConnect: true
        FromDate: 0
        ToDate: 6
        TicketingSystemName: TicketingSystemName
        ConnectionParams:
          key:
            ShouldSave: true
            value: value
        Reason: Reason
        MultipleAccessRequired: true
      properties:
        AccountId:
          description: The ID of the account to access.
          type: string
        Reason:
          description: The reason why the account needs to be accessed.
          type: string
        TicketingSystemName:
          description: The name of the Ticketing System specified in the request.
          type: string
        TicketId:
          description: The ticket ID given by the ticketing system.
          type: string
        MultipleAccessRequired:
          description: Whether or not the request is for multiple access.
          type: boolean
        FromDate:
          description: "If the request is for a timeframe, the time from when the\
            \ user wants to access the account, in Unix time."
          format: int64
          type: integer
        ToDate:
          description: "If the request is for a timeframe, the time until when the\
            \ user wants to access the account, in Unix time."
          format: int64
          type: integer
        AdditionalInfo:
          additionalProperties:
            type: string
          description: Additional information included in the request. A list of values
            that are predefined in configuration.
          type: object
        UseConnect:
          description: Whether or not the request is for connection through the PSM.
          type: boolean
        ConnectionComponent:
          description: "If the connection is through PSM, the name of the connection\
            \ component to connect with, as defined in the configuration."
          type: string
        ConnectionParams:
          additionalProperties:
            $ref: '#/components/schemas/ConnectionParameter'
          description: "A list of parameters required to perform the connection, as\
            \ defined in each connection component configuration. These parameters\
            \ are listed in the table below.\r\nEach item contains: key, \r\n{ value\
            \ - The content of the parameter, \r\nShouldSave - Whether or not this\
            \ value will be saved with the account for future attempts to connect\
            \ to the remote machine.}"
          type: object
      required:
      - AccountId
      type: object
    OPConfigurationData:
      example:
        authenticationEndpointUrl: authenticationEndpointUrl
        clientSecretMethod: Basic
        clientId: clientId
        jwkSet: jwkSet
        authenticationFlow: Code
        discoveryEndpointUrl: discoveryEndpointUrl
        description: description
        clientSecret: clientSecret
        id: id
        userNameClaim: userNameClaim
        issuer: issuer
      properties:
        id:
          description: "The unique identifier of the provider.\r\nThis ID is used\
            \ to identify the OIDC Identity Provider in PVWA"
          maxLength: 50
          minLength: 0
          pattern: "^[a-zA-Z0-9]+$"
          type: string
        authenticationFlow:
          description: The OIDC connection flow. Valid values
          enum:
          - Code
          - Implicit
          type: string
        authenticationEndpointUrl:
          description: "The URL of the provider's authorization endpoint. Authentication\
            \ requests will be sent to this URL.\r\nNote: This is not relevant if\
            \ the Discovery URL is provided"
          type: string
        issuer:
          description: "The Issuer Identifier for the OpenID Provider.\r\nThis is\
            \ used by the application to verify that the response was issued from\
            \ a specific provider.\r\nNote: This is not relevant if the Discovery\
            \ URL is provided"
          type: string
        description:
          description: A description of the provider
          maxLength: 255
          minLength: 0
          type: string
        jwkSet:
          description: "(JSON web key set) The set of keys provided by the OIDC Identity\
            \ provider for validating JWT (JSON web tokens) during the authentication\
            \ flow.\r\nThe JSON must include a \"keys\" parameter, which is an array\
            \ of JWKs(JWT signing keys). Note: This is not relevant if the Discovery\
            \ URL is provided"
          type: string
        clientId:
          description: "The unique identifier for the client application.\r\nThis\
            \ ID is created by the provider, and assigned to each client application\
            \ upon registration"
          maxLength: 100
          minLength: 0
          type: string
        clientSecret:
          description: "The client secret is only known to the application and the\
            \ provider for secure communication during the authentication flow.\r\n\
            \            \r\nThis secret is created by the provider, and assigned\
            \ to each client application upon registration"
          maxLength: 200
          minLength: 0
          type: string
        clientSecretMethod:
          description: The client authentication method for the client secret. Valid
            values
          enum:
          - Basic
          - Post
          type: string
        discoveryEndpointUrl:
          description: "OIDC defines a discovery mechanism, called OpenID Connect\
            \ Discovery, where an OIDC Identity provider publishes its metadata at\
            \ a well-known URL.\r\nThis URL is metadata that describes the provider's\
            \ configuration"
          type: string
        userNameClaim:
          description: "The property in the ID token provided by the OIDC Identity\
            \ Provider that contains the user name.\r\n            \r\nNote: By default,\
            \ the system will use the preferred_username claim in the ID token"
          maxLength: 50
          minLength: 0
          pattern: "^[a-zA-Z_]+$"
          type: string
      required:
      - clientId
      - clientSecretMethod
      - discoveryEndpointUrl
      - id
      type: object
    OPConfigurations:
      example:
        Providers:
        - authenticationEndpointUrl: authenticationEndpointUrl
          clientSecretMethod: Basic
          clientId: clientId
          jwkSet: jwkSet
          authenticationFlow: Code
          discoveryEndpointUrl: discoveryEndpointUrl
          description: description
          clientSecret: clientSecret
          id: id
          userNameClaim: userNameClaim
          issuer: issuer
        - authenticationEndpointUrl: authenticationEndpointUrl
          clientSecretMethod: Basic
          clientId: clientId
          jwkSet: jwkSet
          authenticationFlow: Code
          discoveryEndpointUrl: discoveryEndpointUrl
          description: description
          clientSecret: clientSecret
          id: id
          userNameClaim: userNameClaim
          issuer: issuer
      properties:
        Providers:
          items:
            $ref: '#/components/schemas/OPConfigurationData'
          type: array
      type: object
    OPConfigurationBase:
      example:
        authenticationEndpointUrl: authenticationEndpointUrl
        clientSecretMethod: Basic
        clientId: clientId
        jwkSet: jwkSet
        authenticationFlow: Code
        discoveryEndpointUrl: discoveryEndpointUrl
        description: description
        clientSecret: clientSecret
        userNameClaim: userNameClaim
        issuer: issuer
      properties:
        authenticationFlow:
          description: The OIDC connection flow. Valid values
          enum:
          - Code
          - Implicit
          type: string
        authenticationEndpointUrl:
          description: "The URL of the provider's authorization endpoint. Authentication\
            \ requests will be sent to this URL.\r\nNote: This is not relevant if\
            \ the Discovery URL is provided"
          type: string
        issuer:
          description: "The Issuer Identifier for the OpenID Provider.\r\nThis is\
            \ used by the application to verify that the response was issued from\
            \ a specific provider.\r\nNote: This is not relevant if the Discovery\
            \ URL is provided"
          type: string
        description:
          description: A description of the provider
          maxLength: 255
          minLength: 0
          type: string
        jwkSet:
          description: "(JSON web key set) The set of keys provided by the OIDC Identity\
            \ provider for validating JWT (JSON web tokens) during the authentication\
            \ flow.\r\nThe JSON must include a \"keys\" parameter, which is an array\
            \ of JWKs(JWT signing keys). Note: This is not relevant if the Discovery\
            \ URL is provided"
          type: string
        clientId:
          description: "The unique identifier for the client application.\r\nThis\
            \ ID is created by the provider, and assigned to each client application\
            \ upon registration"
          maxLength: 100
          minLength: 0
          type: string
        clientSecret:
          description: "The client secret is only known to the application and the\
            \ provider for secure communication during the authentication flow.\r\n\
            \            \r\nThis secret is created by the provider, and assigned\
            \ to each client application upon registration"
          maxLength: 200
          minLength: 0
          type: string
        clientSecretMethod:
          description: The client authentication method for the client secret. Valid
            values
          enum:
          - Basic
          - Post
          type: string
        discoveryEndpointUrl:
          description: "OIDC defines a discovery mechanism, called OpenID Connect\
            \ Discovery, where an OIDC Identity provider publishes its metadata at\
            \ a well-known URL.\r\nThis URL is metadata that describes the provider's\
            \ configuration"
          type: string
        userNameClaim:
          description: "The property in the ID token provided by the OIDC Identity\
            \ Provider that contains the user name.\r\n            \r\nNote: By default,\
            \ the system will use the preferred_username claim in the ID token"
          maxLength: 50
          minLength: 0
          pattern: "^[a-zA-Z_]+$"
          type: string
      required:
      - clientId
      - clientSecretMethod
      - discoveryEndpointUrl
      type: object
    GetPlatformsRequestBase:
      properties:
        Search:
          maxLength: 100
          minLength: 0
          type: string
      type: object
    RotationalGroupPlatform:
      example:
        Active: true
        PlatformID: PlatformID
        GracePeriod: 0
        ID: 6
        Name: Name
      properties:
        Active:
          description: Indicates whether a platform is active or inactive. An inactive
            platform cannot be assigned to accounts but will continue to manage accounts
            that were already assigned to it
          type: boolean
        GracePeriod:
          description: Number of minutes between the rotation of roles between the
            accounts (Active/Inactive) and the beginning of the password change process
            for the current Inactive Account
          format: int32
          type: integer
        ID:
          description: Unique ID of the platform in the system
          format: int64
          type: integer
        PlatformID:
          description: Unique textual representation of the platform in the system
          type: string
        Name:
          description: Display name of the platform
          type: string
      type: object
    DuplicatePlatform:
      example:
        Description: Description
        Name: Name
      properties:
        Name:
          description: Display name of the new platform
          type: string
        Description:
          description: Description of the new platform
          type: string
      required:
      - Name
      type: object
    Platform:
      example:
        Active: true
        Details:
          key: Details
        PlatformID: PlatformID
      properties:
        PlatformID:
          type: string
        Details:
          additionalProperties:
            type: string
          type: object
        Active:
          type: boolean
      type: object
    GetPlatformsRequest:
      properties:
        active:
          type: boolean
        platformType:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        search:
          description: The search will be by Platform ID or Platform Name.
          maxLength: 500
          minLength: 0
          type: string
        systemType:
          type: string
      type: object
    PlatformModel:
      example:
        general:
          platformBaseID: platformBaseID
          name: name
          systemType: systemType
          platformType: platformType
          active: true
          description: description
          id: id
        credentialsManagement:
          allowManualReconciliation: true
          allowedSafes: allowedSafes
          performPeriodicChange: true
          allowManualChange: true
          allowManualVerification: true
          performPeriodicVerification: true
          requirePasswordChangeEveryXDays: 0
          requirePasswordVerificationEveryXDays: 6
          automaticReconcileWhenUnsynched: true
        sessionManagement:
          recordAndSaveSessionActivity: true
          requirePrivilegedSessionMonitoringAndIsolation: true
          PSMServerID: PSMServerID
        linkedAccounts:
        - displayName: displayName
          name: name
        - displayName: displayName
          name: name
        privilegedAccessWorkflows:
          enforceOnetimePasswordAccess: true
          requireDualControlPasswordAccessApproval: true
          enforceCheckinCheckoutExclusiveAccess: true
        properties:
          optional:
          - displayName: displayName
            name: name
          - displayName: displayName
            name: name
          required:
          - displayName: displayName
            name: name
          - displayName: displayName
            name: name
      properties:
        general:
          $ref: '#/components/schemas/General'
        properties:
          $ref: '#/components/schemas/Properties'
        linkedAccounts:
          description: "A list of all linked accounts types that are relevant for\
            \ the platform, each linked account has a name and a display name"
          items:
            $ref: '#/components/schemas/Identity'
          type: array
        credentialsManagement:
          $ref: '#/components/schemas/CredentialsManagement'
        sessionManagement:
          $ref: '#/components/schemas/SessionManagement'
        privilegedAccessWorkflows:
          $ref: '#/components/schemas/PrivilegedAccessWorkflows'
      type: object
    General:
      example:
        platformBaseID: platformBaseID
        name: name
        systemType: systemType
        platformType: platformType
        active: true
        description: description
        id: id
      properties:
        id:
          description: The platform unique ID
          type: string
        name:
          description: The platform name
          type: string
        systemType:
          description: The type of system to which the platform is applied
          type: string
        active:
          description: "Indicates whether a platform is active or inactive. valid\
            \ values: true\\false"
          type: boolean
        description:
          description: The platform description
          type: string
        platformBaseID:
          description: The ID of the default platform that this platform is based
            on (duplicated from)
          type: string
        platformType:
          description: "Indicates if the platform is a group platform. valid values:\
            \ Group\\Regular"
          type: string
      type: object
    Properties:
      example:
        optional:
        - displayName: displayName
          name: name
        - displayName: displayName
          name: name
        required:
        - displayName: displayName
          name: name
        - displayName: displayName
          name: name
      properties:
        required:
          description: A list of all required properties defined for the platform.
            Each property includes a name and a display name
          items:
            $ref: '#/components/schemas/Identity'
          type: array
        optional:
          description: A list of all optional properties defined for the platform.
            Each property includes a name and a display name
          items:
            $ref: '#/components/schemas/Identity'
          type: array
      type: object
    Identity:
      example:
        displayName: displayName
        name: name
      properties:
        name:
          type: string
        displayName:
          type: string
      type: object
    CredentialsManagement:
      example:
        allowManualReconciliation: true
        allowedSafes: allowedSafes
        performPeriodicChange: true
        allowManualChange: true
        allowManualVerification: true
        performPeriodicVerification: true
        requirePasswordChangeEveryXDays: 0
        requirePasswordVerificationEveryXDays: 6
        automaticReconcileWhenUnsynched: true
      properties:
        allowedSafes:
          description: A list of safes (regular expression) to which this platform
            can be applied
          type: string
        allowManualChange:
          description: "Indicates whether a 'Change now' process can be initiated\
            \ manually. valid values: true\\false"
          type: boolean
        performPeriodicChange:
          description: "Indicates whether accounts related to this platform will be\
            \ changed periodically. valid values: true\\false"
          type: boolean
        requirePasswordChangeEveryXDays:
          description: The number of days between each periodic change.
          format: int32
          type: integer
        allowManualVerification:
          description: "Indicates whether a 'Verify now' process can be initiated\
            \ manually. valid values: true\\false"
          type: boolean
        performPeriodicVerification:
          description: "Indicates whether accounts related to this platform will be\
            \ verified periodically. valid values: true\\false"
          type: boolean
        requirePasswordVerificationEveryXDays:
          description: The number of days between each periodic verification.
          format: int32
          type: integer
        allowManualReconciliation:
          description: "Indicates whether a 'Reconcile now' process can be initiated\
            \ manually. valid values: true\\false"
          type: boolean
        automaticReconcileWhenUnsynched:
          description: "Whether or not passwords will be reconciled automatically\
            \ after the CPM detects a password on a remote machine\r\nthat is not\
            \ synchronized with its corresponding password in the Server.valid values:\
            \ true\\false"
          type: boolean
      type: object
    SessionManagement:
      example:
        recordAndSaveSessionActivity: true
        requirePrivilegedSessionMonitoringAndIsolation: true
        PSMServerID: PSMServerID
      properties:
        requirePrivilegedSessionMonitoringAndIsolation:
          description: "Indicates whether the Require privileged session monitoring\
            \ and isolation rule is active for this platform. valid values: true\\\
            false"
          type: boolean
        recordAndSaveSessionActivity:
          description: "Indicates whether the Record and save session activity rule\
            \ is active for this platform. valid values: true\\false"
          type: boolean
        PSMServerID:
          description: The unique ID of a PSM Server
          type: string
      type: object
    PrivilegedAccessWorkflows:
      example:
        enforceOnetimePasswordAccess: true
        requireDualControlPasswordAccessApproval: true
        enforceCheckinCheckoutExclusiveAccess: true
      properties:
        requireDualControlPasswordAccessApproval:
          description: "Indicates whether accounts associated with this platform require\
            \ dual control. valid values: true\\false"
          type: boolean
        enforceCheckinCheckoutExclusiveAccess:
          description: "Indicates whether the Enforce check-in/check-out exclusive\
            \ access rule is active or inactive for this platform. valid values: true\\\
            false"
          type: boolean
        enforceOnetimePasswordAccess:
          description: "Indicates whether the Enforce one-time password access rule\
            \ is active for this platform. valid values: true\\false"
          type: boolean
      type: object
    ImportPlatformData:
      example:
        ImportFile: ImportFile
      properties:
        ImportFile:
          description: The ZIP file containing the platform.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      required:
      - ImportFile
      type: object
    ImportPlatformResponse:
      example:
        PlatformID: PlatformID
      properties:
        PlatformID:
          type: string
      type: object
    ExportPlatform:
      type: object
    GetSafesByPlatformRequest:
      properties:
        Safe:
          type: string
      type: object
    DependentPlatform:
      example:
        NumberOfLinkedTargetPlatforms: 0
        PlatformID: PlatformID
        ID: 1
        CredentialsManagementPolicy:
          SecretUpdateConfiguration:
            ChangePasswordInResetMode: true
          Verification:
            AutoOnAdd: true
            IsRequirePasswordEveryXDaysAnException: true
            PerformAutomatic: true
            AllowManual: true
            RequirePasswordEveryXDays: 6
          Change:
            AutoOnAdd: true
            IsRequirePasswordEveryXDaysAnException: true
            PerformAutomatic: true
            AllowManual: true
            RequirePasswordEveryXDays: 6
          Reconcile:
            AutomaticReconcileWhenUnsynced: true
            AllowManual: true
        Name: Name
      properties:
        NumberOfLinkedTargetPlatforms:
          format: int32
          type: integer
        CredentialsManagementPolicy:
          $ref: '#/components/schemas/CredentialsManagementPolicy'
        ID:
          description: Unique ID of the platform in the system
          format: int64
          type: integer
        PlatformID:
          description: Unique textual representation of the platform in the system
          type: string
        Name:
          description: Display name of the platform
          type: string
      type: object
    CredentialsManagementPolicy:
      example:
        SecretUpdateConfiguration:
          ChangePasswordInResetMode: true
        Verification:
          AutoOnAdd: true
          IsRequirePasswordEveryXDaysAnException: true
          PerformAutomatic: true
          AllowManual: true
          RequirePasswordEveryXDays: 6
        Change:
          AutoOnAdd: true
          IsRequirePasswordEveryXDaysAnException: true
          PerformAutomatic: true
          AllowManual: true
          RequirePasswordEveryXDays: 6
        Reconcile:
          AutomaticReconcileWhenUnsynced: true
          AllowManual: true
      properties:
        Verification:
          $ref: '#/components/schemas/TaskRole'
        Change:
          $ref: '#/components/schemas/TaskRole'
        Reconcile:
          $ref: '#/components/schemas/ReconcileTask'
        SecretUpdateConfiguration:
          $ref: '#/components/schemas/SecretUpdateConfiguration'
      type: object
    TaskRole:
      example:
        AutoOnAdd: true
        IsRequirePasswordEveryXDaysAnException: true
        PerformAutomatic: true
        AllowManual: true
        RequirePasswordEveryXDays: 6
      properties:
        PerformAutomatic:
          description: Indicates whether the action will be initiated periodically.
          type: boolean
        RequirePasswordEveryXDays:
          description: The number of days between each periodic action.
          format: int32
          type: integer
        AutoOnAdd:
          description: Indicates whether the action will be performed after account
            are added.
          type: boolean
        IsRequirePasswordEveryXDaysAnException:
          description: Indicates whether the action will be performed after account
            are added.
          type: boolean
        AllowManual:
          description: Indicates whether the action can be initiated manually.
          type: boolean
      type: object
    ReconcileTask:
      example:
        AutomaticReconcileWhenUnsynced: true
        AllowManual: true
      properties:
        AutomaticReconcileWhenUnsynced:
          description: Whether or not passwords will be reconciled automatically after
            the CPM detects a password on remote machine that is not synchronized
            with its corresponding in the server
          type: boolean
        AllowManual:
          description: Indicates whether the action can be initiated manually.
          type: boolean
      type: object
    SecretUpdateConfiguration:
      example:
        ChangePasswordInResetMode: true
      properties:
        ChangePasswordInResetMode:
          description: Defines whether or not password changed will be performed via
            reset mode using the reconciliation account. This is useful in cases where
            the password policy prevents the user from changing his own password minimal
            age restriction is applied.
          type: boolean
      type: object
    GroupPlatform:
      example:
        Active: true
        PlatformID: PlatformID
        ID: 0
        Name: Name
      properties:
        Active:
          description: Indicates whether a platform is active or inactive. An inactive
            platform cannot be assigned to accounts but will continue to manage accounts
            that were already assigned to it
          type: boolean
        ID:
          description: Unique ID of the platform in the system
          format: int64
          type: integer
        PlatformID:
          description: Unique textual representation of the platform in the system
          type: string
        Name:
          description: Display name of the platform
          type: string
      type: object
    GetTargetPlatformsRequest:
      properties:
        filter:
          type: string
        Search:
          maxLength: 100
          minLength: 0
          type: string
      type: object
    TargetPlatform:
      example:
        Active: true
        PrivilegedSessionManagement:
          PSMServerId: PSMServerId
          PSMServerName: PSMServerName
        PrivilegedAccessWorkflows:
          EnforceOnetimePasswordAccess:
            IsAnException: true
            IsActive: true
          RequireDualControlPasswordAccessApproval:
            IsAnException: true
            IsActive: true
          RequireUsersToSpecifyReasonForAccess:
            IsAnException: true
            IsActive: true
          EnforceCheckinCheckoutExclusiveAccess:
            IsAnException: true
            IsActive: true
        PlatformID: PlatformID
        SystemType: SystemType
        ID: 0
        AllowedSafes: AllowedSafes
        CredentialsManagementPolicy:
          SecretUpdateConfiguration:
            ChangePasswordInResetMode: true
          Verification:
            AutoOnAdd: true
            IsRequirePasswordEveryXDaysAnException: true
            PerformAutomatic: true
            AllowManual: true
            RequirePasswordEveryXDays: 6
          Change:
            AutoOnAdd: true
            IsRequirePasswordEveryXDaysAnException: true
            PerformAutomatic: true
            AllowManual: true
            RequirePasswordEveryXDays: 6
          Reconcile:
            AutomaticReconcileWhenUnsynced: true
            AllowManual: true
        Name: Name
      properties:
        Active:
          description: Indicates whether a platform is active or inactive. An inactive
            platform cannot be assigned to accounts but will continue to manage accounts
            that were already assigned to it
          type: boolean
        SystemType:
          description: The type of system to target belong to
          type: string
        AllowedSafes:
          description: Regular expression of safes in which accounts from this platform
            can be managed
          type: string
        PrivilegedAccessWorkflows:
          $ref: '#/components/schemas/PrivilegedAccessWorkflowsPolicy'
        CredentialsManagementPolicy:
          $ref: '#/components/schemas/CredentialsManagementPolicy'
        PrivilegedSessionManagement:
          $ref: '#/components/schemas/PrivilegedSessionManagementBase'
        ID:
          description: Unique ID of the platform in the system
          format: int64
          type: integer
        PlatformID:
          description: Unique textual representation of the platform in the system
          type: string
        Name:
          description: Display name of the platform
          type: string
      type: object
    PrivilegedAccessWorkflowsPolicy:
      example:
        EnforceOnetimePasswordAccess:
          IsAnException: true
          IsActive: true
        RequireDualControlPasswordAccessApproval:
          IsAnException: true
          IsActive: true
        RequireUsersToSpecifyReasonForAccess:
          IsAnException: true
          IsActive: true
        EnforceCheckinCheckoutExclusiveAccess:
          IsAnException: true
          IsActive: true
      properties:
        RequireDualControlPasswordAccessApproval:
          $ref: '#/components/schemas/WorkflowPolicy'
        EnforceCheckinCheckoutExclusiveAccess:
          $ref: '#/components/schemas/WorkflowPolicy'
        EnforceOnetimePasswordAccess:
          $ref: '#/components/schemas/WorkflowPolicy'
        RequireUsersToSpecifyReasonForAccess:
          $ref: '#/components/schemas/WorkflowPolicy'
      type: object
    PrivilegedSessionManagementBase:
      example:
        PSMServerId: PSMServerId
        PSMServerName: PSMServerName
      properties:
        PSMServerId:
          description: PSM server ID linked to the platform
          type: string
        PSMServerName:
          description: Name of the PSM server linked to the platform
          type: string
      required:
      - PSMServerId
      type: object
    WorkflowPolicy:
      example:
        IsAnException: true
        IsActive: true
      properties:
        IsActive:
          description: Indicates whether the policy is active.
          type: boolean
        IsAnException:
          description: Indicates whether the policy is an exception to the master
            policy.
          type: boolean
      type: object
    PrivilegedSessionManagement:
      example:
        PSMServerId: PSMServerId
        PSMServerName: PSMServerName
        PSMConnectors:
        - Enabled: true
          PSMConnectorID: PSMConnectorID
        - Enabled: true
          PSMConnectorID: PSMConnectorID
      properties:
        PSMConnectors:
          description: List of PSM Connectors linked to the platform
          items:
            $ref: '#/components/schemas/a4b'
          type: array
        PSMServerId:
          description: PSM server ID linked to the platform
          type: string
        PSMServerName:
          description: Name of the PSM server linked to the platform
          type: string
      required:
      - PSMServerId
      type: object
    a4b:
      example:
        Enabled: true
        PSMConnectorID: PSMConnectorID
      properties:
        PSMConnectorID:
          type: string
        Enabled:
          type: boolean
      required:
      - Enabled
      - PSMConnectorID
      type: object
    SystemType:
      example:
        PlatformsCount: 0
        Name: Name
      properties:
        PlatformsCount:
          description: Number of platforms that match the filter in the system type
          format: int32
          type: integer
        Name:
          description: Display name of the system types
          type: string
      type: object
    PSMConnector:
      example:
        DisplayName: DisplayName
        ID: ID
      properties:
        ID:
          description: PSM connector Id.
          type: string
        DisplayName:
          description: PSM connector display name.
          type: string
      type: object
    PSMServer:
      example:
        Address: Address
        ID: ID
        Name: Name
      properties:
        ID:
          description: PSM server Id.
          type: string
        Name:
          description: PSM server Name.
          type: string
        Address:
          description: PSM server address.
          type: string
      type: object
    SessionData:
      example:
        User: User
        AccountUsername: AccountUsername
        Start: 0
        AccountPlatformID: AccountPlatformID
        RecordingFiles:
        - Format: Format
          RecordingType: 2
          FileName: FileName
          LastReviewBy: LastReviewBy
          CompressedFileSize: 1
          LastReviewDate: 4
          FileSize: 7
        - Format: Format
          RecordingType: 2
          FileName: FileName
          LastReviewBy: LastReviewBy
          CompressedFileSize: 1
          LastReviewDate: 4
          FileSize: 7
        FileName: FileName
        IncidentDetails:
          Sessions:
          - Score: 9
            Commands:
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            Severity: Severity
            Id: Id
          - Score: 9
            Commands:
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            - Score: 3
              Value: Value
              Severity: Severity
              Offset: Offset
            Severity: Severity
            Id: Id
          Incident:
            StartDate: 7
            Score: 2
            Id: Id
            Url: Url
            Name: Name
        RemoteMachine: RemoteMachine
        ProtectionDate: 5
        RecordedActivities:
        - ActivityId: ActivityId
          ActivityType: 1
          Formats:
          - Formats
          - Formats
          ActivityText: ActivityText
          Offsets:
            key: Offsets
        - ActivityId: ActivityId
          ActivityType: 1
          Formats:
          - Formats
          - Formats
          ActivityText: ActivityText
          Offsets:
            key: Offsets
        FolderName: FolderName
        AccountAddress: AccountAddress
        ConnectionComponentID: ConnectionComponentID
        ProtectionEnabled: true
        SessionGuid: 00000000-0000-0000-0000-000000000000
        TicketID: TicketID
        SafeName: SafeName
        VideoSize: 2
        IsLive: true
        FromIP: FromIP
        Protocol: Protocol
        Client: Client
        PSMRecordingEntity: PSMRecordingEntity
        RiskScore: 5
        TextSize: 7
        Duration: 1
        Severity: Severity
        PIMSuCWD: PIMSuCWD
        RawProperties:
          key: RawProperties
        ProtectedBy: ProtectedBy
        DetailsUrl: DetailsUrl
        End: 6
        PIMSuCommand: PIMSuCommand
        SessionID: SessionID
      properties:
        SessionID:
          type: string
        SessionGuid:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        SafeName:
          type: string
        FolderName:
          type: string
        IsLive:
          type: boolean
        FileName:
          type: string
        Start:
          format: int64
          type: integer
        End:
          format: int64
          type: integer
        Duration:
          format: int64
          type: integer
        User:
          type: string
        RemoteMachine:
          type: string
        ProtectionDate:
          format: int64
          type: integer
        ProtectedBy:
          type: string
        ProtectionEnabled:
          type: boolean
        AccountUsername:
          type: string
        AccountPlatformID:
          type: string
        AccountAddress:
          type: string
        PIMSuCommand:
          type: string
        PIMSuCWD:
          type: string
        ConnectionComponentID:
          type: string
        PSMRecordingEntity:
          type: string
        TicketID:
          type: string
        FromIP:
          type: string
        Protocol:
          type: string
        Client:
          type: string
        RiskScore:
          format: int32
          type: integer
        Severity:
          type: string
        IncidentDetails:
          $ref: '#/components/schemas/PTAData'
        RawProperties:
          additionalProperties:
            type: string
          type: object
        RecordingFiles:
          items:
            $ref: '#/components/schemas/RecordingFile'
          type: array
        RecordedActivities:
          items:
            $ref: '#/components/schemas/RecordedCommand'
          type: array
        VideoSize:
          format: int64
          type: integer
        TextSize:
          format: int64
          type: integer
        DetailsUrl:
          type: string
      type: object
    GetSafeDetailsRequest:
      properties:
        includeAccounts:
          description: "Whether or not to return accounts for each Safe as part of\
            \ the response. If not sent, the value will be False."
          type: boolean
        useCache:
          description: Whether to retrieve from session or not.
          type: boolean
      type: object
    GetSafeDetailsResponse:
      example:
        safeNumber: 0
        creator:
          name: name
          id: id
        managingCPM: managingCPM
        autoPurgeEnabled: true
        creationTime: 5
        lastModificationTime: 5
        description: description
        olacEnabled: true
        numberOfDaysRetention: 1
        numberOfVersionsRetention: 6
        safeUrlId: safeUrlId
        location: location
        accounts:
        - name: name
          id: id
        - name: name
          id: id
        safeName: safeName
        isExpiredMember: true
      properties:
        safeUrlId:
          description: The name of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        description:
          description: The description of the Safe.
          type: string
        location:
          description: The location of the Safe in the Vault.
          type: string
        creator:
          $ref: '#/components/schemas/SafeCreatorResponse'
        olacEnabled:
          description: Whether or not to enable Object Level Access Control for the
            new Safe.
          type: boolean
        managingCPM:
          description: The name of the CPM user who will manage the new Safe.
          type: string
        numberOfVersionsRetention:
          description: The number of retained versions of every password that is stored
            in the Safe.
          format: int32
          type: integer
        numberOfDaysRetention:
          description: The number of days that password versions are saved in the
            Safe.
          format: int32
          type: integer
        autoPurgeEnabled:
          description: "Whether or not to automatically purge files after the end\
            \ of the Object History Retention Period defined in the Safe properties.\r\
            \nReports Safes and PSM Recording Safes are created automatically with\
            \ AutoPurgeEnabled set to Yes.These Safes cannot be managed by the CPM."
          type: boolean
        creationTime:
          description: Unix creation time of the Safe.
          format: int64
          type: integer
        lastModificationTime:
          description: Unix time when the Safe was last updated.
          format: int64
          type: integer
        accounts:
          items:
            $ref: '#/components/schemas/AccountInSafeResponse'
          type: array
        isExpiredMember:
          description: "Whether or not the membership for the Safe is expired.For\
            \ expired member, the value will be True."
          type: boolean
      type: object
    SafeCreatorResponse:
      example:
        name: name
        id: id
      properties:
        id:
          description: The ID of the user that created this Safe.
          type: string
        name:
          description: The name of the user that created this safe.
          type: string
      type: object
    AccountInSafeResponse:
      example:
        name: name
        id: id
      properties:
        id:
          description: The ID of the accounts that reside in this Safe.
          type: string
        name:
          description: The name of the accounts that reside in this Safe.
          type: string
      type: object
    DeleteSafeRequest:
      type: object
    UpdateSafeRequestUrl:
      type: object
    UpdateSafeRequestBody:
      example:
        Description: Description
        OLACEnabled: true
        SafeName: SafeName
        NumberOfVersionsRetention: 602
        NumberOfDaysRetention: 292
        ManagingCPM: ManagingCPM
        Location: Location
      properties:
        SafeName:
          description: The name of the Safe.
          type: string
        Description:
          description: The description of the Safe.
          maxLength: 100
          minLength: 0
          type: string
        Location:
          description: The location of the Safe in the Vault.
          type: string
        NumberOfDaysRetention:
          description: The number of days that password versions are saved in the
            Safe.
          format: int32
          maximum: 3650
          minimum: 0
          type: integer
        NumberOfVersionsRetention:
          description: The number of retained versions of every password that is stored
            in the Safe.
          format: int32
          maximum: 999
          minimum: 0
          type: integer
        OLACEnabled:
          description: Whether or not to enable Object Level Access Control for the
            Safe.
          type: boolean
        ManagingCPM:
          description: The name of the CPM user who will manage the Safe.
          type: string
      type: object
    UpdateSafeResponse:
      example:
        safeNumber: 0
        creator:
          name: name
          id: id
        managingCPM: managingCPM
        autoPurgeEnabled: true
        creationTime: 5
        lastModificationTime: 5
        description: description
        olacEnabled: true
        numberOfDaysRetention: 1
        numberOfVersionsRetention: 6
        safeUrlId: safeUrlId
        location: location
        safeName: safeName
      properties:
        safeUrlId:
          description: The name of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        description:
          description: The description of the Safe.
          type: string
        location:
          description: The location of the Safe in the Vault.
          type: string
        creator:
          $ref: '#/components/schemas/SafeCreatorResponse'
        olacEnabled:
          description: Whether or not to enable Object Level Access Control for the
            new Safe.
          type: boolean
        managingCPM:
          description: The name of the CPM user who will manage the new Safe.
          type: string
        numberOfVersionsRetention:
          description: The number of retained versions of every password that is stored
            in the Safe.
          format: int32
          type: integer
        numberOfDaysRetention:
          description: The number of days that password versions are saved in the
            Safe.
          format: int32
          type: integer
        autoPurgeEnabled:
          description: "Whether or not to automatically purge files after the end\
            \ of the Object History Retention Period defined in the Safe properties.\r\
            \nReports Safes and PSM Recording Safes are created automatically with\
            \ AutoPurgeEnabled set to Yes.These Safes cannot be managed by the CPM."
          type: boolean
        creationTime:
          description: Unix creation time of the Safe.
          format: int64
          type: integer
        lastModificationTime:
          description: Unix time when the Safe was last updated.
          format: int64
          type: integer
      type: object
    AddSafeRequest:
      example:
        Description: Description
        OLACEnabled: true
        SafeName: SafeName
        NumberOfVersionsRetention: 602
        NumberOfDaysRetention: 292
        ManagingCPM: ManagingCPM
        Location: Location
      properties:
        SafeName:
          description: The name of the Safe.
          type: string
        Description:
          description: The description of the Safe.
          maxLength: 100
          minLength: 0
          type: string
        Location:
          description: The location of the Safe in the Vault.
          type: string
        NumberOfDaysRetention:
          description: The number of days that password versions are saved in the
            Safe.
          format: int32
          maximum: 3650
          minimum: 0
          type: integer
        NumberOfVersionsRetention:
          description: The number of retained versions of every password that is stored
            in the Safe.
          format: int32
          maximum: 999
          minimum: 0
          type: integer
        OLACEnabled:
          description: Whether or not to enable Object Level Access Control for the
            Safe.
          type: boolean
        ManagingCPM:
          description: The name of the CPM user who will manage the Safe.
          type: string
      type: object
    AddSafeResponse:
      example:
        safeNumber: 0
        creator:
          name: name
          id: id
        managingCPM: managingCPM
        autoPurgeEnabled: true
        creationTime: 5
        lastModificationTime: 5
        description: description
        olacEnabled: true
        numberOfDaysRetention: 1
        numberOfVersionsRetention: 6
        safeUrlId: safeUrlId
        location: location
        safeName: safeName
      properties:
        safeUrlId:
          description: The name of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        description:
          description: The description of the Safe.
          type: string
        location:
          description: The location of the Safe in the Vault.
          type: string
        creator:
          $ref: '#/components/schemas/SafeCreatorResponse'
        olacEnabled:
          description: Whether or not to enable Object Level Access Control for the
            new Safe.
          type: boolean
        managingCPM:
          description: The name of the CPM user who will manage the new Safe.
          type: string
        numberOfVersionsRetention:
          description: The number of retained versions of every password that is stored
            in the Safe.
          format: int32
          type: integer
        numberOfDaysRetention:
          description: The number of days that password versions are saved in the
            Safe.
          format: int32
          type: integer
        autoPurgeEnabled:
          description: "Whether or not to automatically purge files after the end\
            \ of the Object History Retention Period defined in the Safe properties.\r\
            \nReports Safes and PSM Recording Safes are created automatically with\
            \ AutoPurgeEnabled set to Yes.These Safes cannot be managed by the CPM."
          type: boolean
        creationTime:
          description: Unix creation time of the Safe.
          format: int64
          type: integer
        lastModificationTime:
          description: Unix time when the Safe was last updated.
          format: int64
          type: integer
      type: object
    SearchQS:
      properties:
        Search:
          maxLength: 500
          minLength: 0
          type: string
      type: object
    GetSafesParams:
      properties:
        includeAccounts:
          description: "Whether or not to return accounts for each Safe as part of\
            \ the response. If not sent, the value will be false."
          type: boolean
        extendedDetails:
          description: "Whether or not to return all Safe data or only SafeName as\
            \ part of the response. If not sent, the value will be true."
          type: boolean
      type: object
    SafeListItem:
      example:
        safeNumber: 0
        creator:
          name: name
          id: id
        autoPurgeEnabled: true
        creationTime: 5
        managingCPM: managingCPM
        lastModificationTime: 5
        description: description
        olacEnabled: true
        numberOfDaysRetention: 535
        numberOfVersionsRetention: 602
        safeUrlId: safeUrlId
        location: location
        accounts:
        - name: name
          id: id
        - name: name
          id: id
        safeName: safeName
        isExpiredMember: true
      properties:
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        location:
          description: The location of the Safe in the Vault.
          type: string
        creator:
          $ref: '#/components/schemas/SafeCreator'
        accounts:
          items:
            $ref: '#/components/schemas/AccountInSafe'
          type: array
        olacEnabled:
          description: Whether or not to enable Object Level Access Control for the
            new Safe.
          type: boolean
        numberOfVersionsRetention:
          description: The number of retained versions of every password that is stored
            in the Safe.
          format: int32
          maximum: 999
          minimum: 0
          type: integer
        numberOfDaysRetention:
          description: The number of days that password versions are saved in the
            Safe.
          format: int32
          maximum: 3650
          minimum: 0
          type: integer
        autoPurgeEnabled:
          description: "Whether or not to automatically purge files after the end\
            \ of the Object History Retention Period defined in the Safe properties.\r\
            \nReports Safes and PSM Recording Safes are created automatically with\
            \ AutoPurgeEnabled set to Yes.These Safes cannot be managed by the CPM."
          type: boolean
        creationTime:
          description: Unix creation time of the Safe.
          format: int64
          type: integer
        lastModificationTime:
          description: Unix time when the Safe was last updated.
          format: int64
          type: integer
        safeUrlId:
          description: The unique ID of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The name of the Safe.
          type: string
        description:
          description: The description of the Safe.
          maxLength: 100
          minLength: 0
          type: string
        managingCPM:
          description: The name of the CPM user who will manage the new Safe.
          type: string
        isExpiredMember:
          description: "Whether or not the membership for the Safe is expired.For\
            \ expired member, the value will be True."
          type: boolean
      type: object
    SafeCreator:
      example:
        name: name
        id: id
      properties:
        id:
          description: The ID of the user that created this Safe.
          type: string
        name:
          description: The name of the user that created this safe.
          type: string
      type: object
    AccountInSafe:
      example:
        name: name
        id: id
      properties:
        id:
          description: The ID of the accounts that reside in this Safe.
          type: string
        name:
          description: The name of the accounts that reside in this Safe.
          type: string
      type: object
    GetSafeMemberRequest:
      properties:
        useCache:
          description: Whether to retrieve from session or not.
          type: boolean
      type: object
    GetSafeMemberResponse:
      example:
        safeNumber: 0
        isExpiredMembershipEnable: true
        isReadOnly: true
        safeUrlId: safeUrlId
        permissions:
          key: true
        memberName: memberName
        isPredefinedUser: true
        membershipExpirationDate: 1
        memberType: memberType
        safeName: safeName
        memberId: 6
      properties:
        safeUrlId:
          description: The name of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The unique name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        memberId:
          description: "The Vault user ID, Domain user ID, or group ID of the Safe\
            \ member."
          format: int64
          type: integer
        memberName:
          description: "The Vault user name, Domain user name or group name of the\
            \ Safe member."
          type: string
        memberType:
          description: "The member type.\r\nValid values: user\\group"
          type: string
        membershipExpirationDate:
          description: "The member's expiration date for this Safe.\r\nFor members\
            \ that do not have an expiration date, this value will be null."
          format: int64
          type: integer
        isExpiredMembershipEnable:
          description: "Whether or not the membership for the Safe is expired.For\
            \ expired members, the value will be True."
          type: boolean
        isPredefinedUser:
          description: Whether the member is a predefined user or group of the Vault.
          type: boolean
        isReadOnly:
          description: Whether or not the current user can update the permissions
            of the member
          type: boolean
        permissions:
          additionalProperties:
            type: boolean
          description: "<p>The permissions that the user or group has in this Safe.</p>\r\
            \n<p>\r\n  <B>useAccounts</B> - Use accounts but not view passwords.</p>\r\
            \n<p>\r\n  <B>retrieveAccounts</B> - Retrieve and view accounts in the\
            \ Safe.</p>\r\n<p>\r\n  <B>listAccounts</B> - View Accounts list.</p>\r\
            \n<p>\r\n  <B>addAccounts</B> - Add accounts in the Safe. Users who have\
            \ this permission automatically have UpdateAccountProperties as well.</p>\r\
            \n<p>\r\n  <B>updateAccountContent</B> - Update existing account content.</p>\r\
            \n<p>\r\n  <B>updateAccountProperties</B> - Update existing account properties.</p>\r\
            \n<p>\r\n  <B>initiateCPMAccountManagementOperations</B> - Initiate password\
            \ management operations through CPM, such as changing, verifying, and\
            \ reconciling passwords. When this parameter is set to False, the SpecifyNextAccountContent\
            \ parameter is also automatically set to False.</p>\r\n<p>\r\n  <B>specifyNextAccountContent</B>\
            \ - Specify the password that is used when the CPM changes the password\
            \ value. This parameter can only be specified when the InitiateCPMAccountManagementOperations\
            \ parameter is set to True. When InitiateCPMAccountManagementOperations\
            \ is set to False this parameter is automatically set to False.</p>\r\n\
            <p>\r\n  <B>renameAccounts</B> - Rename existing accounts in the Safe.</p>\r\
            \n<p>\r\n  <B>deleteAccounts</B> - Delete existing passwords in the Safe.</p>\r\
            \n<p>\r\n  <B>unlockAccounts</B> - Unlock accounts that are locked by\
            \ other users.</p>\r\n<p>\r\n  <B>manageSafe</B> - Perform administrative\
            \ tasksin the Safe, including: Update Safe properties, Recover the Safe,\
            \ Delete the Safe.</p>\r\n<p>\r\n  <B>manageSafeMembers</B> - Add and\
            \ remove Safe members, and update their authorizations in the Safe.</p>\r\
            \n<p>\r\n  <B>backupSafe</B> - Create a backup of a Safe and its contents,\
            \ and store in another location.</p>\r\n<p>\r\n  <B>viewAuditLog</B> -\
            \ View account and user activity in the Safe.</p>\r\n<p>\r\n  <B>viewSafeMembers</B>\
            \ - View Safe member's permissions.</p>\r\n<p>\r\n  <B>requestsAuthorizationLevel1</B>\
            \ - Request Authorization Level 1.</p>\r\n<p>\r\n  <B>requestsAuthorizationLevel2</B>\
            \ - Request Authorization Level 2.</p>\r\n<p>\r\n  <B>accessWithoutConfirmation</B>\
            \ - Access the Safe without confirmation from authorized users. This overrides\
            \ the Safe properties that specify that Safe members require confirmation\
            \ to access the Safe.</p>\r\n<p>\r\n  <B>createFolders</B> - Create folders\
            \ in the Safe.</p>\r\n<p>\r\n  <B>deleteFolders</B> - Delete folders from\
            \ the Safe.</p>\r\n<p>\r\n  <B>moveAccountsAndFolders</B> - Move accounts\
            \ and folders in the Safe to different folders and subfolders.</p>"
          type: object
      type: object
    UpdateSafeMemberRequestUrl:
      type: object
    UpdateSafeMemberRequestBody:
      example:
        MembershipExpirationDate: 0
        Permissions:
          key: true
      properties:
        MembershipExpirationDate:
          format: int64
          type: integer
        Permissions:
          additionalProperties:
            type: boolean
          type: object
      required:
      - Permissions
      type: object
    UpdateSafeMemberResponse:
      example:
        safeNumber: 0
        isExpiredMembershipEnable: true
        isReadOnly: true
        safeUrlId: safeUrlId
        permissions:
          key: true
        memberName: memberName
        isPredefinedUser: true
        membershipExpirationDate: 1
        memberType: memberType
        safeName: safeName
        memberId: 6
      properties:
        safeUrlId:
          description: The name of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The unique name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        memberId:
          description: "The Vault user ID, Domain user ID, or group ID of the Safe\
            \ member."
          format: int64
          type: integer
        memberName:
          description: "The Vault user name, Domain user name or group name of the\
            \ Safe member."
          type: string
        memberType:
          description: "The member type.\r\nValid values: user\\group"
          type: string
        membershipExpirationDate:
          description: "The member's expiration date for this Safe.\r\nFor members\
            \ that do not have an expiration date, this value will be null."
          format: int64
          type: integer
        isExpiredMembershipEnable:
          description: "Whether or not the membership for the Safe is expired.For\
            \ expired members, the value will be True."
          type: boolean
        isPredefinedUser:
          description: Whether the member is a predefined user or group of the Vault.
          type: boolean
        isReadOnly:
          description: Whether or not the current user can update the permissions
            of the member
          type: boolean
        permissions:
          additionalProperties:
            type: boolean
          description: "<p>The permissions that the user or group has in this Safe.</p>\r\
            \n<p>\r\n  <B>useAccounts</B> - Use accounts but not view passwords.</p>\r\
            \n<p>\r\n  <B>retrieveAccounts</B> - Retrieve and view accounts in the\
            \ Safe.</p>\r\n<p>\r\n  <B>listAccounts</B> - View Accounts list.</p>\r\
            \n<p>\r\n  <B>addAccounts</B> - Add accounts in the Safe. Users who have\
            \ this permission automatically have UpdateAccountProperties as well.</p>\r\
            \n<p>\r\n  <B>updateAccountContent</B> - Update existing account content.</p>\r\
            \n<p>\r\n  <B>updateAccountProperties</B> - Update existing account properties.</p>\r\
            \n<p>\r\n  <B>initiateCPMAccountManagementOperations</B> - Initiate password\
            \ management operations through CPM, such as changing, verifying, and\
            \ reconciling passwords. When this parameter is set to False, the SpecifyNextAccountContent\
            \ parameter is also automatically set to False.</p>\r\n<p>\r\n  <B>specifyNextAccountContent</B>\
            \ - Specify the password that is used when the CPM changes the password\
            \ value. This parameter can only be specified when the InitiateCPMAccountManagementOperations\
            \ parameter is set to True. When InitiateCPMAccountManagementOperations\
            \ is set to False this parameter is automatically set to False.</p>\r\n\
            <p>\r\n  <B>renameAccounts</B> - Rename existing accounts in the Safe.</p>\r\
            \n<p>\r\n  <B>deleteAccounts</B> - Delete existing passwords in the Safe.</p>\r\
            \n<p>\r\n  <B>unlockAccounts</B> - Unlock accounts that are locked by\
            \ other users.</p>\r\n<p>\r\n  <B>manageSafe</B> - Perform administrative\
            \ tasksin the Safe, including: Update Safe properties, Recover the Safe,\
            \ Delete the Safe.</p>\r\n<p>\r\n  <B>manageSafeMembers</B> - Add and\
            \ remove Safe members, and update their authorizations in the Safe.</p>\r\
            \n<p>\r\n  <B>backupSafe</B> - Create a backup of a Safe and its contents,\
            \ and store in another location.</p>\r\n<p>\r\n  <B>viewAuditLog</B> -\
            \ View account and user activity in the Safe.</p>\r\n<p>\r\n  <B>viewSafeMembers</B>\
            \ - View Safe member's permissions.</p>\r\n<p>\r\n  <B>requestsAuthorizationLevel1</B>\
            \ - Request Authorization Level 1.</p>\r\n<p>\r\n  <B>requestsAuthorizationLevel2</B>\
            \ - Request Authorization Level 2.</p>\r\n<p>\r\n  <B>accessWithoutConfirmation</B>\
            \ - Access the Safe without confirmation from authorized users. This overrides\
            \ the Safe properties that specify that Safe members require confirmation\
            \ to access the Safe.</p>\r\n<p>\r\n  <B>createFolders</B> - Create folders\
            \ in the Safe.</p>\r\n<p>\r\n  <B>deleteFolders</B> - Delete folders from\
            \ the Safe.</p>\r\n<p>\r\n  <B>moveAccountsAndFolders</B> - Move accounts\
            \ and folders in the Safe to different folders and subfolders.</p>"
          type: object
      type: object
    SafeMembersFilter:
      properties:
        filter:
          description: "<para>Filtering according to REST standard. </para>\r\n<para>memberType\
            \ - Return only members of single type (user or group)</para>\r\n<para>membershipExpired\
            \ - Return only members that have or don't have an expired membership</para>\r\
            \n<para>includePredefinedUsers - Include predefined users in the returned\
            \ list.</para>"
          type: string
      type: object
    SafeMemberResponse:
      example:
        safeNumber: 0
        isExpiredMembershipEnable: true
        isReadOnly: true
        safeUrlId: safeUrlId
        permissions:
          key: true
        memberName: memberName
        isPredefinedUser: true
        membershipExpirationDate: 1
        memberType: memberType
        safeName: safeName
        memberId: 6
      properties:
        safeUrlId:
          description: The unique ID of the Safe to be used when calling Safes APIs.
          type: string
        safeName:
          description: The name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        memberId:
          description: "Vault user Id, Domain user Id or group Id of the Safe member."
          format: int64
          type: integer
        memberName:
          description: "Vault user name, Domain user name or group name of the Safe\
            \ member."
          type: string
        memberType:
          description: "The member type.\r\nValid values: user\\group"
          type: string
        membershipExpirationDate:
          description: "The members expiration date for this Safe.\r\nFor members\
            \ that will never expire, this value will be null."
          format: int64
          type: integer
        isExpiredMembershipEnable:
          description: Whether the membership on the safe is expired or not. For expired
            members the value will be true.
          type: boolean
        isPredefinedUser:
          description: Whether the member is a vault built-in user or group.
          type: boolean
        isReadOnly:
          description: Whether or not the current user can update the permissions
            of the member
          type: boolean
        permissions:
          additionalProperties:
            type: boolean
          type: object
      type: object
    AddSafeMemberRequestUrl:
      type: object
    AddSafeMemberRequestBody:
      example:
        MembershipExpirationDate: 0
        Permissions:
          key: true
        MemberName: MemberName
        SearchIn: SearchIn
      properties:
        MemberName:
          description: "The Vault user name, Domain user name or group name of the\
            \ Safe member."
          type: string
        SearchIn:
          description: The Vault or Domain where the user or group was found.
          type: string
        MembershipExpirationDate:
          format: int64
          type: integer
        Permissions:
          additionalProperties:
            type: boolean
          type: object
      required:
      - MemberName
      - Permissions
      type: object
    AddSafeMemberResponse:
      example:
        safeNumber: 0
        isExpiredMembershipEnable: true
        isReadOnly: true
        safeUrlId: safeUrlId
        permissions:
          key: true
        memberName: memberName
        isPredefinedUser: true
        membershipExpirationDate: 1
        memberType: memberType
        safeName: safeName
        memberId: 6
      properties:
        safeUrlId:
          description: The name of the Safe to be used when calling Safe APIs.
          type: string
        safeName:
          description: The unique name of the Safe.
          type: string
        safeNumber:
          description: The unique numerical ID of the Safe.
          format: int64
          type: integer
        memberId:
          description: "The Vault user ID, Domain user ID, or group ID of the Safe\
            \ member."
          format: int64
          type: integer
        memberName:
          description: "The Vault user name, Domain user name or group name of the\
            \ Safe member."
          type: string
        memberType:
          description: "The member type.\r\nValid values: user\\group"
          type: string
        membershipExpirationDate:
          description: "The member's expiration date for this Safe.\r\nFor members\
            \ that do not have an expiration date, this value will be null."
          format: int64
          type: integer
        isExpiredMembershipEnable:
          description: "Whether or not the membership for the Safe is expired.For\
            \ expired members, the value will be True."
          type: boolean
        isPredefinedUser:
          description: Whether the member is a predefined user or group of the Vault.
          type: boolean
        isReadOnly:
          description: Whether or not the current user can update the permissions
            of the member
          type: boolean
        permissions:
          additionalProperties:
            type: boolean
          description: "<p>The permissions that the user or group has in this Safe.</p>\r\
            \n<p>\r\n  <B>useAccounts</B> - Use accounts but not view passwords.</p>\r\
            \n<p>\r\n  <B>retrieveAccounts</B> - Retrieve and view accounts in the\
            \ Safe.</p>\r\n<p>\r\n  <B>listAccounts</B> - View Accounts list.</p>\r\
            \n<p>\r\n  <B>addAccounts</B> - Add accounts in the Safe. Users who have\
            \ this permission automatically have UpdateAccountProperties as well.</p>\r\
            \n<p>\r\n  <B>updateAccountContent</B> - Update existing account content.</p>\r\
            \n<p>\r\n  <B>updateAccountProperties</B> - Update existing account properties.</p>\r\
            \n<p>\r\n  <B>initiateCPMAccountManagementOperations</B> - Initiate password\
            \ management operations through CPM, such as changing, verifying, and\
            \ reconciling passwords. When this parameter is set to False, the SpecifyNextAccountContent\
            \ parameter is also automatically set to False.</p>\r\n<p>\r\n  <B>specifyNextAccountContent</B>\
            \ - Specify the password that is used when the CPM changes the password\
            \ value. This parameter can only be specified when the InitiateCPMAccountManagementOperations\
            \ parameter is set to True. When InitiateCPMAccountManagementOperations\
            \ is set to False this parameter is automatically set to False.</p>\r\n\
            <p>\r\n  <B>renameAccounts</B> - Rename existing accounts in the Safe.</p>\r\
            \n<p>\r\n  <B>deleteAccounts</B> - Delete existing passwords in the Safe.</p>\r\
            \n<p>\r\n  <B>unlockAccounts</B> - Unlock accounts that are locked by\
            \ other users.</p>\r\n<p>\r\n  <B>manageSafe</B> - Perform administrative\
            \ tasksin the Safe, including: Update Safe properties, Recover the Safe,\
            \ Delete the Safe.</p>\r\n<p>\r\n  <B>manageSafeMembers</B> - Add and\
            \ remove Safe members, and update their authorizations in the Safe.</p>\r\
            \n<p>\r\n  <B>backupSafe</B> - Create a backup of a Safe and its contents,\
            \ and store in another location.</p>\r\n<p>\r\n  <B>viewAuditLog</B> -\
            \ View account and user activity in the Safe.</p>\r\n<p>\r\n  <B>viewSafeMembers</B>\
            \ - View Safe member's permissions.</p>\r\n<p>\r\n  <B>requestsAuthorizationLevel1</B>\
            \ - Request Authorization Level 1.</p>\r\n<p>\r\n  <B>requestsAuthorizationLevel2</B>\
            \ - Request Authorization Level 2.</p>\r\n<p>\r\n  <B>accessWithoutConfirmation</B>\
            \ - Access the Safe without confirmation from authorized users. This overrides\
            \ the Safe properties that specify that Safe members require confirmation\
            \ to access the Safe.</p>\r\n<p>\r\n  <B>createFolders</B> - Create folders\
            \ in the Safe.</p>\r\n<p>\r\n  <B>deleteFolders</B> - Delete folders from\
            \ the Safe.</p>\r\n<p>\r\n  <B>moveAccountsAndFolders</B> - Move accounts\
            \ and folders in the Safe to different folders and subfolders.</p>"
          type: object
      type: object
    FilterQS:
      properties:
        Filter:
          type: string
      type: object
    GetUsersGroupParams:
      properties:
        includeMembers:
          description: "Whether or not to return members for each User Group as part\
            \ of the response. If not sent, the value will be False."
          type: boolean
      type: object
    GetUserGroupsResponse:
      example:
        count: 1
        value:
        - groupType: Vault
          groupName: groupName
          members:
          - UserName: UserName
            id: 6
          - UserName: UserName
            id: 6
          description: description
          dn: dn
          location: location
          id: 0
          directory: directory
        - groupType: Vault
          groupName: groupName
          members:
          - UserName: UserName
            id: 6
          - UserName: UserName
            id: 6
          description: description
          dn: dn
          location: location
          id: 0
          directory: directory
        nextLink: nextLink
      properties:
        value:
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
        count:
          format: int32
          type: integer
        nextLink:
          type: string
      type: object
    UserGroup:
      example:
        groupType: Vault
        groupName: groupName
        members:
        - UserName: UserName
          id: 6
        - UserName: UserName
          id: 6
        description: description
        dn: dn
        location: location
        id: 0
        directory: directory
      properties:
        id:
          description: The unique ID of the group.
          format: int64
          type: integer
        groupType:
          description: Whether this is a Vault group or a Directory group.
          enum:
          - Vault
          - Directory
          type: string
        directory:
          description: "Displays the name of the LDAP external directory to which\
            \ the external group belongs.\r\nThis is relevant only for Directory group\
            \ type."
          type: string
        dn:
          description: "Displays the full LDAP DN of the user in the external directory\
            \ to which the external user belongs.\r\nThis is relevant only for Directory\
            \ group type."
          type: string
        members:
          items:
            $ref: '#/components/schemas/MemberGroup'
          type: array
        groupName:
          description: The name of a group in the Vault.
          maxLength: 128
          minLength: 0
          type: string
        description:
          description: The description of the group.
          type: string
        location:
          description: The location of the group in the Vault’s hierarchy.
          maxLength: 128
          minLength: 0
          type: string
      required:
      - groupName
      type: object
    MemberGroup:
      example:
        UserName: UserName
        id: 6
      properties:
        UserName:
          type: string
        id:
          format: int64
          type: integer
      type: object
    BaseUserGroup:
      example:
        groupName: groupName
        description: description
        location: location
      properties:
        groupName:
          description: The name of a group in the Vault.
          maxLength: 128
          minLength: 0
          type: string
        description:
          description: The description of the group.
          type: string
        location:
          description: The location of the group in the Vault’s hierarchy.
          maxLength: 128
          minLength: 0
          type: string
      required:
      - groupName
      type: object
    GroupMember:
      example:
        domainName: domainName
        memberType: Vault
        memberId: memberId
      properties:
        memberId:
          description: The name of the member or LDAP group to add to the Vault group.
          type: string
        memberType:
          description: "The type of the member in order to differ between members\
            \ that come from the domain or from the Vault.\r\n\r\nValid values: domain/vault"
          enum:
          - Vault
          - Domain
          type: string
        domainName:
          description: The dns address of the domain.
          type: string
      required:
      - domainName
      - memberId
      type: object
    UsersFilters:
      properties:
        userName:
          description: The name of the user.
          type: string
        userType:
          description: The type of the user.
          type: string
        componentUser:
          description: Whether the user is a known component or not.
          type: boolean
      type: object
    BaseUser:
      example:
        enableUser: true
        vaultAuthorization:
        - vaultAuthorization
        - vaultAuthorization
        personalDetails:
          firstName: firstName
          lastName: lastName
          organization: organization
          middleName: middleName
          department: department
        location: location
        id: 0
        source: source
        userType: userType
        groupsMembership:
        - groupName: groupName
          groupType: Vault
          groupID: 6
        - groupName: groupName
          groupType: Vault
          groupID: 6
        componentUser: true
        userDN: userDN
        suspended: true
        username: username
      properties:
        id:
          description: The unique id of the user.
          format: int64
          type: integer
        username:
          description: The name of the user.
          maxLength: 128
          minLength: 0
          type: string
        source:
          description: "The source of the user.\r\nPossible values: CyberArk, LDAP."
          type: string
        userType:
          description: "The type of the user.\r\nPossible types could be any user\
            \ types according to the license."
          type: string
        componentUser:
          description: "Whether the user is a known component or not.\r\nPossible\
            \ values: true (if it is component) or false otherwise.\r\n\r\nThe following\
            \ user types are considered as components:\r\n    CPM\r\n    ENE\r\n \
            \   PVWA\r\n    PSM\r\n    AppProvider\r\n    OPMProvider\r\n    PIMProvider\r\
            \n    PSMPServer\r\n    PSMPADBridge\r\n    PSMHTML5Gateway\r\n    CIFS\r\
            \n    FTP\r\n    SFE\r\n    DCAInstance\r\n    FEWA\r\n    SEG"
          type: boolean
        groupsMembership:
          description: "The security attributes and authorizations, contains:\r\n\
            AddSafe\r\nAuditUsers\r\nAddUpdateUsers\r\nResetUsersPasswords\r\nActivateUsers\r\
            \nAddNetworkAreas\r\nManageDirectoryMapping\r\nManageServerFileCategories\r\
            \nBackupAllSafes\r\nRestoreAllSafes"
          items:
            $ref: '#/components/schemas/GroupMembershipDetails'
          type: array
        userDN:
          description: The distinguished name of the user. Only applies to LDAP users.
          type: string
        vaultAuthorization:
          items:
            type: string
          type: array
        location:
          description: The Vault Location.
          maxLength: 128
          minLength: 0
          type: string
        personalDetails:
          $ref: '#/components/schemas/BaseUserPersonalDetails'
        enableUser:
          description: Whether or not the user is enabled.
          type: boolean
        suspended:
          description: Whether or not the user is suspended due to maximum violations.
          type: boolean
      required:
      - username
      type: object
    GroupMembershipDetails:
      example:
        groupName: groupName
        groupType: Vault
        groupID: 6
      properties:
        groupID:
          description: The unique ID of the group.
          format: int64
          type: integer
        groupName:
          description: The name of a group in the Vault.
          type: string
        groupType:
          description: Whether this is a Vault group or a Directory group.
          enum:
          - Vault
          - Directory
          type: string
      type: object
    BaseUserPersonalDetails:
      example:
        firstName: firstName
        lastName: lastName
        organization: organization
        middleName: middleName
        department: department
      properties:
        firstName:
          maxLength: 29
          minLength: 0
          type: string
        middleName:
          maxLength: 29
          minLength: 0
          type: string
        lastName:
          maxLength: 29
          minLength: 0
          type: string
        organization:
          maxLength: 29
          minLength: 0
          type: string
        department:
          maxLength: 29
          minLength: 0
          type: string
      type: object
    User:
      example:
        passwordNeverExpires: true
        lastSuccessfulLoginDate: 6
        distinguishedName: distinguishedName
        description: description
        phones:
          faxNumber: faxNumber
          pagerNumber: pagerNumber
          businessNumber: businessNumber
          cellularNumber: cellularNumber
          homeNumber: homeNumber
        source: source
        suspended: true
        changePassOnNextLogon: true
        expiryDate: 171976544
        unAuthorizedInterfaces:
        - unAuthorizedInterfaces
        - unAuthorizedInterfaces
        initialPassword: initialPassword
        authenticationMethod:
        - AuthTypePass
        - AuthTypePass
        enableUser: true
        personalDetails:
          zip: zip
          profession: profession
          country: country
          firstName: firstName
          lastName: lastName
          city: city
          street: street
          organization: organization
          middleName: middleName
          state: state
          title: title
          department: department
        vaultAuthorization:
        - vaultAuthorization
        - vaultAuthorization
        location: location
        id: 1
        userType: userType
        businessAddress:
          workState: workState
          workCity: workCity
          workZip: workZip
          workCountry: workCountry
          workStreet: workStreet
        groupsMembership:
        - groupName: groupName
          groupType: Vault
          groupID: 6
        - groupName: groupName
          groupType: Vault
          groupID: 6
        internet:
          businessEmail: businessEmail
          homeEmail: homeEmail
          homePage: homePage
          otherEmail: otherEmail
        componentUser: true
        userDN: userDN
        username: username
      properties:
        enableUser:
          description: Whether or not the user is enabled.
          type: boolean
        changePassOnNextLogon:
          description: Whether or not the user must change their password on the next
            logon.
          type: boolean
        expiryDate:
          description: The date when the user will expire.
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        suspended:
          description: Whether or not the user is suspended due to maximum violations.
          type: boolean
        lastSuccessfulLoginDate:
          description: Returns the last successful login date of the user.
          format: int64
          type: integer
        unAuthorizedInterfaces:
          description: "The CyberArk interfaces that this user is authorized to use.\r\
            \nThe possible values depends on the specific user type as defined in\
            \ the license."
          items:
            type: string
          type: array
        authenticationMethod:
          description: The authentication method that the User will use to log on.
          items:
            enum:
            - AuthTypePass
            - AuthTypeCyberKey
            - AuthTypeVaultPKI
            - AuthTypeSecurID
            - AuthTypePartImp
            - AuthTypeFullImp
            - AuthTypeImp
            - AuthTypeNTAuth
            - AuthTypeRadius
            - AuthTypeLDAP
            - AuthTypeProvider
            - AuthTypeLDAPOrPass
            - AuthTypeAnyPass
            type: string
          type: array
        passwordNeverExpires:
          description: Whether the User’s password will be retained until he decides
            to change it.
          type: boolean
        distinguishedName:
          description: "The User’s distinguished name.\r\nThe usage is for PKI authentication,\
            \ this will match the certificate Subject Name or DN."
          maxLength: 511
          minLength: 0
          type: string
        description:
          description: Notes and comments.
          maxLength: 99
          minLength: 0
          type: string
        businessAddress:
          $ref: '#/components/schemas/UserBusinessAddress'
        internet:
          $ref: '#/components/schemas/UserInternet'
        phones:
          $ref: '#/components/schemas/UserPhone'
        personalDetails:
          $ref: '#/components/schemas/UserPersonalDetails'
        initialPassword:
          description: "The password that the user will use to log on the first time.\r\
            \nThis password must meet the password policy requirements."
          maxLength: 39
          minLength: 0
          type: string
        id:
          description: The unique id of the user.
          format: int64
          type: integer
        username:
          description: The name of the user.
          maxLength: 128
          minLength: 0
          type: string
        source:
          description: "The source of the user.\r\nPossible values: CyberArk, LDAP."
          type: string
        userType:
          description: "The type of the user.\r\nPossible types could be any user\
            \ types according to the license."
          type: string
        componentUser:
          description: "Whether the user is a known component or not.\r\nPossible\
            \ values: true (if it is component) or false otherwise.\r\n\r\nThe following\
            \ user types are considered as components:\r\n    CPM\r\n    ENE\r\n \
            \   PVWA\r\n    PSM\r\n    AppProvider\r\n    OPMProvider\r\n    PIMProvider\r\
            \n    PSMPServer\r\n    PSMPADBridge\r\n    PSMHTML5Gateway\r\n    CIFS\r\
            \n    FTP\r\n    SFE\r\n    DCAInstance\r\n    FEWA\r\n    SEG"
          type: boolean
        groupsMembership:
          description: "The security attributes and authorizations, contains:\r\n\
            AddSafe\r\nAuditUsers\r\nAddUpdateUsers\r\nResetUsersPasswords\r\nActivateUsers\r\
            \nAddNetworkAreas\r\nManageDirectoryMapping\r\nManageServerFileCategories\r\
            \nBackupAllSafes\r\nRestoreAllSafes"
          items:
            $ref: '#/components/schemas/GroupMembershipDetails'
          type: array
        userDN:
          description: The distinguished name of the user. Only applies to LDAP users.
          type: string
        vaultAuthorization:
          items:
            type: string
          type: array
        location:
          description: The Vault Location.
          maxLength: 128
          minLength: 0
          type: string
      required:
      - username
      type: object
    UserBusinessAddress:
      example:
        workState: workState
        workCity: workCity
        workZip: workZip
        workCountry: workCountry
        workStreet: workStreet
      properties:
        workStreet:
          maxLength: 29
          minLength: 0
          type: string
        workCity:
          maxLength: 19
          minLength: 0
          type: string
        workState:
          maxLength: 19
          minLength: 0
          type: string
        workZip:
          maxLength: 19
          minLength: 0
          type: string
        workCountry:
          maxLength: 19
          minLength: 0
          type: string
      type: object
    UserInternet:
      example:
        businessEmail: businessEmail
        homeEmail: homeEmail
        homePage: homePage
        otherEmail: otherEmail
      properties:
        homePage:
          maxLength: 319
          minLength: 0
          type: string
        homeEmail:
          maxLength: 319
          minLength: 0
          type: string
        businessEmail:
          maxLength: 319
          minLength: 0
          type: string
        otherEmail:
          maxLength: 319
          minLength: 0
          type: string
      type: object
    UserPhone:
      example:
        faxNumber: faxNumber
        pagerNumber: pagerNumber
        businessNumber: businessNumber
        cellularNumber: cellularNumber
        homeNumber: homeNumber
      properties:
        homeNumber:
          maxLength: 24
          minLength: 0
          type: string
        businessNumber:
          maxLength: 24
          minLength: 0
          type: string
        cellularNumber:
          maxLength: 24
          minLength: 0
          type: string
        faxNumber:
          maxLength: 24
          minLength: 0
          type: string
        pagerNumber:
          maxLength: 24
          minLength: 0
          type: string
      type: object
    UserPersonalDetails:
      example:
        zip: zip
        profession: profession
        country: country
        firstName: firstName
        lastName: lastName
        city: city
        street: street
        organization: organization
        middleName: middleName
        state: state
        title: title
        department: department
      properties:
        street:
          maxLength: 29
          minLength: 0
          type: string
        city:
          maxLength: 19
          minLength: 0
          type: string
        state:
          maxLength: 19
          minLength: 0
          type: string
        zip:
          maxLength: 19
          minLength: 0
          type: string
        country:
          maxLength: 19
          minLength: 0
          type: string
        title:
          maxLength: 49
          minLength: 0
          type: string
        organization:
          maxLength: 49
          minLength: 0
          type: string
        department:
          maxLength: 49
          minLength: 0
          type: string
        profession:
          maxLength: 49
          minLength: 0
          type: string
        firstName:
          maxLength: 29
          minLength: 0
          type: string
        middleName:
          maxLength: 29
          minLength: 0
          type: string
        lastName:
          maxLength: 29
          minLength: 0
          type: string
      type: object
    ResetUserPassword:
      example:
        newPassword: newPassword
      properties:
        newPassword:
          description: "The user's new password.\r\nThe new password maximum length\
            \ is up to 39 (including) characters and it must meet the password policy\
            \ requirements."
          maxLength: 39
          minLength: 0
          type: string
      required:
      - newPassword
      type: object
    GetUserSSHKeysModel:
      properties:
        keyStoreTypeFilter:
          description: The key type filter
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    GetUserSSHKeysResponse:
      example:
        count: 1
        value:
        - sshKeyStoreType: 6
          creationTime: 171976544
          fingerprint: fingerprint
          publicKey: publicKey
        - sshKeyStoreType: 6
          creationTime: 171976544
          fingerprint: fingerprint
          publicKey: publicKey
        nextLink: nextLink
      properties:
        value:
          items:
            $ref: '#/components/schemas/PublicSSHKeyModel'
          type: array
        count:
          format: int32
          type: integer
        nextLink:
          type: string
      type: object
    PublicSSHKeyModel:
      example:
        sshKeyStoreType: 6
        creationTime: 171976544
        fingerprint: fingerprint
        publicKey: publicKey
      properties:
        publicKey:
          description: The public key data
          type: string
        fingerprint:
          description: The public key fingerprint
          type: string
        creationTime:
          description: The creation time of the public key
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        sshKeyStoreType:
          description: The ssh key type
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    AddUserSSHKeyModel:
      example:
        publicKey: publicKey
      properties:
        publicKey:
          description: The public key to add
          type: string
      required:
      - publicKey
      type: object
    DeleteUserSSHKeyModel:
      example:
        keyStoreTypeFilter: 0
        keyFingerprint: keyFingerprint
      properties:
        keyFingerprint:
          description: The key fingerprint to delete
          type: string
        keyStoreTypeFilter:
          description: The key type filter
          enum:
          - 0
          - 1
          format: int32
          type: integer
      required:
      - keyFingerprint
      type: object
    GenerateUserCachedSSHKeyModel:
      example:
        formats:
        - 0
        - 0
        keyPassword: keyPassword
      properties:
        formats:
          items:
            enum:
            - 0
            - 1
            - 2
            format: int32
            type: integer
          type: array
        keyPassword:
          type: string
      type: object
    GenerateUserCachedSSHKeyResponse:
      example:
        creationTime: 314780940
        expirationTime: 1280358508
        count: 5
        publicKey: publicKey
        value:
        - keyAlg: 6
          privateKey: privateKey
          format: 0
        - keyAlg: 6
          privateKey: privateKey
          format: 0
        nextLink: nextLink
      properties:
        value:
          items:
            $ref: '#/components/schemas/PrivateSSHKeyModel'
          type: array
        creationTime:
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        expirationTime:
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        publicKey:
          type: string
        count:
          format: int32
          type: integer
        nextLink:
          type: string
      type: object
    PrivateSSHKeyModel:
      example:
        keyAlg: 6
        privateKey: privateKey
        format: 0
      properties:
        format:
          description: The key exported format
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        privateKey:
          description: The private key
          type: string
        keyAlg:
          description: Key algorithm
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
      type: object
    BaseUsersFilters:
      properties:
        userType:
          description: The type of the user.
          type: string
        componentUser:
          description: Whether the user is a known component or not.
          type: boolean
      type: object
x-original-swagger-version: "2.0"
