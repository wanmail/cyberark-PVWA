/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountGroup struct for AccountGroup
type AccountGroup struct {
	GroupID *string `json:"GroupID,omitempty"`
	GroupName *string `json:"GroupName,omitempty"`
	GroupPlatformID *string `json:"GroupPlatformID,omitempty"`
	Safe *string `json:"Safe,omitempty"`
}

// NewAccountGroup instantiates a new AccountGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountGroup() *AccountGroup {
	this := AccountGroup{}
	return &this
}

// NewAccountGroupWithDefaults instantiates a new AccountGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountGroupWithDefaults() *AccountGroup {
	this := AccountGroup{}
	return &this
}

// GetGroupID returns the GroupID field value if set, zero value otherwise.
func (o *AccountGroup) GetGroupID() string {
	if o == nil || o.GroupID == nil {
		var ret string
		return ret
	}
	return *o.GroupID
}

// GetGroupIDOk returns a tuple with the GroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroup) GetGroupIDOk() (*string, bool) {
	if o == nil || o.GroupID == nil {
		return nil, false
	}
	return o.GroupID, true
}

// HasGroupID returns a boolean if a field has been set.
func (o *AccountGroup) HasGroupID() bool {
	if o != nil && o.GroupID != nil {
		return true
	}

	return false
}

// SetGroupID gets a reference to the given string and assigns it to the GroupID field.
func (o *AccountGroup) SetGroupID(v string) {
	o.GroupID = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *AccountGroup) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroup) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *AccountGroup) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *AccountGroup) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGroupPlatformID returns the GroupPlatformID field value if set, zero value otherwise.
func (o *AccountGroup) GetGroupPlatformID() string {
	if o == nil || o.GroupPlatformID == nil {
		var ret string
		return ret
	}
	return *o.GroupPlatformID
}

// GetGroupPlatformIDOk returns a tuple with the GroupPlatformID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroup) GetGroupPlatformIDOk() (*string, bool) {
	if o == nil || o.GroupPlatformID == nil {
		return nil, false
	}
	return o.GroupPlatformID, true
}

// HasGroupPlatformID returns a boolean if a field has been set.
func (o *AccountGroup) HasGroupPlatformID() bool {
	if o != nil && o.GroupPlatformID != nil {
		return true
	}

	return false
}

// SetGroupPlatformID gets a reference to the given string and assigns it to the GroupPlatformID field.
func (o *AccountGroup) SetGroupPlatformID(v string) {
	o.GroupPlatformID = &v
}

// GetSafe returns the Safe field value if set, zero value otherwise.
func (o *AccountGroup) GetSafe() string {
	if o == nil || o.Safe == nil {
		var ret string
		return ret
	}
	return *o.Safe
}

// GetSafeOk returns a tuple with the Safe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGroup) GetSafeOk() (*string, bool) {
	if o == nil || o.Safe == nil {
		return nil, false
	}
	return o.Safe, true
}

// HasSafe returns a boolean if a field has been set.
func (o *AccountGroup) HasSafe() bool {
	if o != nil && o.Safe != nil {
		return true
	}

	return false
}

// SetSafe gets a reference to the given string and assigns it to the Safe field.
func (o *AccountGroup) SetSafe(v string) {
	o.Safe = &v
}

func (o AccountGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupID != nil {
		toSerialize["GroupID"] = o.GroupID
	}
	if o.GroupName != nil {
		toSerialize["GroupName"] = o.GroupName
	}
	if o.GroupPlatformID != nil {
		toSerialize["GroupPlatformID"] = o.GroupPlatformID
	}
	if o.Safe != nil {
		toSerialize["Safe"] = o.Safe
	}
	return json.Marshal(toSerialize)
}

type NullableAccountGroup struct {
	value *AccountGroup
	isSet bool
}

func (v NullableAccountGroup) Get() *AccountGroup {
	return v.value
}

func (v *NullableAccountGroup) Set(val *AccountGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountGroup(val *AccountGroup) *NullableAccountGroup {
	return &NullableAccountGroup{value: val, isSet: true}
}

func (v NullableAccountGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


