/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountPSMConnectPrerequisites struct for AccountPSMConnectPrerequisites
type AccountPSMConnectPrerequisites struct {
	// Required reason to request the access
	Reason *string `json:"Reason,omitempty"`
	// The name of the Ticketing System used in the request
	TicketingSystemName *string `json:"TicketingSystemName,omitempty"`
	// The ticket ID of the ticketing system
	TicketId *string `json:"TicketId,omitempty"`
	ConnectionType *string `json:"ConnectionType,omitempty"`
	// The name of the connection component to connect with as defined in the configuration
	ConnectionComponent string `json:"ConnectionComponent"`
	// A list of parameters required to perform the connection. Defined in each connection component configuration  Each item contains: key,   { value - The content of the parameter,   ShouldSave - Whether or not this value will be saved with the account for future attempts to connect to the remote machine.}
	ConnectionParams *map[string]ConnectionParameter `json:"ConnectionParams,omitempty"`
}

// NewAccountPSMConnectPrerequisites instantiates a new AccountPSMConnectPrerequisites object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountPSMConnectPrerequisites(connectionComponent string) *AccountPSMConnectPrerequisites {
	this := AccountPSMConnectPrerequisites{}
	this.ConnectionComponent = connectionComponent
	return &this
}

// NewAccountPSMConnectPrerequisitesWithDefaults instantiates a new AccountPSMConnectPrerequisites object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountPSMConnectPrerequisitesWithDefaults() *AccountPSMConnectPrerequisites {
	this := AccountPSMConnectPrerequisites{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AccountPSMConnectPrerequisites) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPSMConnectPrerequisites) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AccountPSMConnectPrerequisites) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *AccountPSMConnectPrerequisites) SetReason(v string) {
	o.Reason = &v
}

// GetTicketingSystemName returns the TicketingSystemName field value if set, zero value otherwise.
func (o *AccountPSMConnectPrerequisites) GetTicketingSystemName() string {
	if o == nil || o.TicketingSystemName == nil {
		var ret string
		return ret
	}
	return *o.TicketingSystemName
}

// GetTicketingSystemNameOk returns a tuple with the TicketingSystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPSMConnectPrerequisites) GetTicketingSystemNameOk() (*string, bool) {
	if o == nil || o.TicketingSystemName == nil {
		return nil, false
	}
	return o.TicketingSystemName, true
}

// HasTicketingSystemName returns a boolean if a field has been set.
func (o *AccountPSMConnectPrerequisites) HasTicketingSystemName() bool {
	if o != nil && o.TicketingSystemName != nil {
		return true
	}

	return false
}

// SetTicketingSystemName gets a reference to the given string and assigns it to the TicketingSystemName field.
func (o *AccountPSMConnectPrerequisites) SetTicketingSystemName(v string) {
	o.TicketingSystemName = &v
}

// GetTicketId returns the TicketId field value if set, zero value otherwise.
func (o *AccountPSMConnectPrerequisites) GetTicketId() string {
	if o == nil || o.TicketId == nil {
		var ret string
		return ret
	}
	return *o.TicketId
}

// GetTicketIdOk returns a tuple with the TicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPSMConnectPrerequisites) GetTicketIdOk() (*string, bool) {
	if o == nil || o.TicketId == nil {
		return nil, false
	}
	return o.TicketId, true
}

// HasTicketId returns a boolean if a field has been set.
func (o *AccountPSMConnectPrerequisites) HasTicketId() bool {
	if o != nil && o.TicketId != nil {
		return true
	}

	return false
}

// SetTicketId gets a reference to the given string and assigns it to the TicketId field.
func (o *AccountPSMConnectPrerequisites) SetTicketId(v string) {
	o.TicketId = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *AccountPSMConnectPrerequisites) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPSMConnectPrerequisites) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *AccountPSMConnectPrerequisites) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *AccountPSMConnectPrerequisites) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetConnectionComponent returns the ConnectionComponent field value
func (o *AccountPSMConnectPrerequisites) GetConnectionComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionComponent
}

// GetConnectionComponentOk returns a tuple with the ConnectionComponent field value
// and a boolean to check if the value has been set.
func (o *AccountPSMConnectPrerequisites) GetConnectionComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionComponent, true
}

// SetConnectionComponent sets field value
func (o *AccountPSMConnectPrerequisites) SetConnectionComponent(v string) {
	o.ConnectionComponent = v
}

// GetConnectionParams returns the ConnectionParams field value if set, zero value otherwise.
func (o *AccountPSMConnectPrerequisites) GetConnectionParams() map[string]ConnectionParameter {
	if o == nil || o.ConnectionParams == nil {
		var ret map[string]ConnectionParameter
		return ret
	}
	return *o.ConnectionParams
}

// GetConnectionParamsOk returns a tuple with the ConnectionParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPSMConnectPrerequisites) GetConnectionParamsOk() (*map[string]ConnectionParameter, bool) {
	if o == nil || o.ConnectionParams == nil {
		return nil, false
	}
	return o.ConnectionParams, true
}

// HasConnectionParams returns a boolean if a field has been set.
func (o *AccountPSMConnectPrerequisites) HasConnectionParams() bool {
	if o != nil && o.ConnectionParams != nil {
		return true
	}

	return false
}

// SetConnectionParams gets a reference to the given map[string]ConnectionParameter and assigns it to the ConnectionParams field.
func (o *AccountPSMConnectPrerequisites) SetConnectionParams(v map[string]ConnectionParameter) {
	o.ConnectionParams = &v
}

func (o AccountPSMConnectPrerequisites) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reason != nil {
		toSerialize["Reason"] = o.Reason
	}
	if o.TicketingSystemName != nil {
		toSerialize["TicketingSystemName"] = o.TicketingSystemName
	}
	if o.TicketId != nil {
		toSerialize["TicketId"] = o.TicketId
	}
	if o.ConnectionType != nil {
		toSerialize["ConnectionType"] = o.ConnectionType
	}
	if true {
		toSerialize["ConnectionComponent"] = o.ConnectionComponent
	}
	if o.ConnectionParams != nil {
		toSerialize["ConnectionParams"] = o.ConnectionParams
	}
	return json.Marshal(toSerialize)
}

type NullableAccountPSMConnectPrerequisites struct {
	value *AccountPSMConnectPrerequisites
	isSet bool
}

func (v NullableAccountPSMConnectPrerequisites) Get() *AccountPSMConnectPrerequisites {
	return v.value
}

func (v *NullableAccountPSMConnectPrerequisites) Set(val *AccountPSMConnectPrerequisites) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountPSMConnectPrerequisites) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountPSMConnectPrerequisites) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountPSMConnectPrerequisites(val *AccountPSMConnectPrerequisites) *NullableAccountPSMConnectPrerequisites {
	return &NullableAccountPSMConnectPrerequisites{value: val, isSet: true}
}

func (v NullableAccountPSMConnectPrerequisites) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountPSMConnectPrerequisites) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


