/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddSafeMemberRequestBody struct for AddSafeMemberRequestBody
type AddSafeMemberRequestBody struct {
	// The Vault user name, Domain user name or group name of the Safe member.
	MemberName string `json:"MemberName"`
	// The Vault or Domain where the user or group was found.
	SearchIn *string `json:"SearchIn,omitempty"`
	MembershipExpirationDate *int64 `json:"MembershipExpirationDate,omitempty"`
	Permissions map[string]bool `json:"Permissions"`
}

// NewAddSafeMemberRequestBody instantiates a new AddSafeMemberRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSafeMemberRequestBody(memberName string, permissions map[string]bool) *AddSafeMemberRequestBody {
	this := AddSafeMemberRequestBody{}
	this.MemberName = memberName
	this.Permissions = permissions
	return &this
}

// NewAddSafeMemberRequestBodyWithDefaults instantiates a new AddSafeMemberRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSafeMemberRequestBodyWithDefaults() *AddSafeMemberRequestBody {
	this := AddSafeMemberRequestBody{}
	return &this
}

// GetMemberName returns the MemberName field value
func (o *AddSafeMemberRequestBody) GetMemberName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberName
}

// GetMemberNameOk returns a tuple with the MemberName field value
// and a boolean to check if the value has been set.
func (o *AddSafeMemberRequestBody) GetMemberNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberName, true
}

// SetMemberName sets field value
func (o *AddSafeMemberRequestBody) SetMemberName(v string) {
	o.MemberName = v
}

// GetSearchIn returns the SearchIn field value if set, zero value otherwise.
func (o *AddSafeMemberRequestBody) GetSearchIn() string {
	if o == nil || o.SearchIn == nil {
		var ret string
		return ret
	}
	return *o.SearchIn
}

// GetSearchInOk returns a tuple with the SearchIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSafeMemberRequestBody) GetSearchInOk() (*string, bool) {
	if o == nil || o.SearchIn == nil {
		return nil, false
	}
	return o.SearchIn, true
}

// HasSearchIn returns a boolean if a field has been set.
func (o *AddSafeMemberRequestBody) HasSearchIn() bool {
	if o != nil && o.SearchIn != nil {
		return true
	}

	return false
}

// SetSearchIn gets a reference to the given string and assigns it to the SearchIn field.
func (o *AddSafeMemberRequestBody) SetSearchIn(v string) {
	o.SearchIn = &v
}

// GetMembershipExpirationDate returns the MembershipExpirationDate field value if set, zero value otherwise.
func (o *AddSafeMemberRequestBody) GetMembershipExpirationDate() int64 {
	if o == nil || o.MembershipExpirationDate == nil {
		var ret int64
		return ret
	}
	return *o.MembershipExpirationDate
}

// GetMembershipExpirationDateOk returns a tuple with the MembershipExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSafeMemberRequestBody) GetMembershipExpirationDateOk() (*int64, bool) {
	if o == nil || o.MembershipExpirationDate == nil {
		return nil, false
	}
	return o.MembershipExpirationDate, true
}

// HasMembershipExpirationDate returns a boolean if a field has been set.
func (o *AddSafeMemberRequestBody) HasMembershipExpirationDate() bool {
	if o != nil && o.MembershipExpirationDate != nil {
		return true
	}

	return false
}

// SetMembershipExpirationDate gets a reference to the given int64 and assigns it to the MembershipExpirationDate field.
func (o *AddSafeMemberRequestBody) SetMembershipExpirationDate(v int64) {
	o.MembershipExpirationDate = &v
}

// GetPermissions returns the Permissions field value
func (o *AddSafeMemberRequestBody) GetPermissions() map[string]bool {
	if o == nil {
		var ret map[string]bool
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *AddSafeMemberRequestBody) GetPermissionsOk() (*map[string]bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *AddSafeMemberRequestBody) SetPermissions(v map[string]bool) {
	o.Permissions = v
}

func (o AddSafeMemberRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MemberName"] = o.MemberName
	}
	if o.SearchIn != nil {
		toSerialize["SearchIn"] = o.SearchIn
	}
	if o.MembershipExpirationDate != nil {
		toSerialize["MembershipExpirationDate"] = o.MembershipExpirationDate
	}
	if true {
		toSerialize["Permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableAddSafeMemberRequestBody struct {
	value *AddSafeMemberRequestBody
	isSet bool
}

func (v NullableAddSafeMemberRequestBody) Get() *AddSafeMemberRequestBody {
	return v.value
}

func (v *NullableAddSafeMemberRequestBody) Set(val *AddSafeMemberRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSafeMemberRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSafeMemberRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSafeMemberRequestBody(val *AddSafeMemberRequestBody) *NullableAddSafeMemberRequestBody {
	return &NullableAddSafeMemberRequestBody{value: val, isSet: true}
}

func (v NullableAddSafeMemberRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSafeMemberRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


