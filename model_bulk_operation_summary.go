/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BulkOperationSummary struct for BulkOperationSummary
type BulkOperationSummary struct {
	Succeeded *int32 `json:"Succeeded,omitempty"`
	Failed *int32 `json:"Failed,omitempty"`
	Error *string `json:"Error,omitempty"`
}

// NewBulkOperationSummary instantiates a new BulkOperationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkOperationSummary() *BulkOperationSummary {
	this := BulkOperationSummary{}
	return &this
}

// NewBulkOperationSummaryWithDefaults instantiates a new BulkOperationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkOperationSummaryWithDefaults() *BulkOperationSummary {
	this := BulkOperationSummary{}
	return &this
}

// GetSucceeded returns the Succeeded field value if set, zero value otherwise.
func (o *BulkOperationSummary) GetSucceeded() int32 {
	if o == nil || o.Succeeded == nil {
		var ret int32
		return ret
	}
	return *o.Succeeded
}

// GetSucceededOk returns a tuple with the Succeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkOperationSummary) GetSucceededOk() (*int32, bool) {
	if o == nil || o.Succeeded == nil {
		return nil, false
	}
	return o.Succeeded, true
}

// HasSucceeded returns a boolean if a field has been set.
func (o *BulkOperationSummary) HasSucceeded() bool {
	if o != nil && o.Succeeded != nil {
		return true
	}

	return false
}

// SetSucceeded gets a reference to the given int32 and assigns it to the Succeeded field.
func (o *BulkOperationSummary) SetSucceeded(v int32) {
	o.Succeeded = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *BulkOperationSummary) GetFailed() int32 {
	if o == nil || o.Failed == nil {
		var ret int32
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkOperationSummary) GetFailedOk() (*int32, bool) {
	if o == nil || o.Failed == nil {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *BulkOperationSummary) HasFailed() bool {
	if o != nil && o.Failed != nil {
		return true
	}

	return false
}

// SetFailed gets a reference to the given int32 and assigns it to the Failed field.
func (o *BulkOperationSummary) SetFailed(v int32) {
	o.Failed = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *BulkOperationSummary) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkOperationSummary) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *BulkOperationSummary) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *BulkOperationSummary) SetError(v string) {
	o.Error = &v
}

func (o BulkOperationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Succeeded != nil {
		toSerialize["Succeeded"] = o.Succeeded
	}
	if o.Failed != nil {
		toSerialize["Failed"] = o.Failed
	}
	if o.Error != nil {
		toSerialize["Error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableBulkOperationSummary struct {
	value *BulkOperationSummary
	isSet bool
}

func (v NullableBulkOperationSummary) Get() *BulkOperationSummary {
	return v.value
}

func (v *NullableBulkOperationSummary) Set(val *BulkOperationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkOperationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkOperationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkOperationSummary(val *BulkOperationSummary) *NullableBulkOperationSummary {
	return &NullableBulkOperationSummary{value: val, isSet: true}
}

func (v NullableBulkOperationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkOperationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


