/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ChangeInVaultProperties struct for ChangeInVaultProperties
type ChangeInVaultProperties struct {
	// Whether or not to change the password in all accounts that belong to the same group.  This parameter is only relevant for accounts that belong to an account group.If this parameter does not belong to a group, it will be ignored.
	ChangeEntireGroup *bool `json:"ChangeEntireGroup,omitempty"`
	// Whether or not the password will be generated according to the password policy rules. If the CPM is not configured to enforce a password policy rule, this parameter is irrelevant.  If the NewCredentails parameter contains a value, this parameter will be ignored.
	NewCredentials string `json:"NewCredentials"`
}

// NewChangeInVaultProperties instantiates a new ChangeInVaultProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeInVaultProperties(newCredentials string) *ChangeInVaultProperties {
	this := ChangeInVaultProperties{}
	this.NewCredentials = newCredentials
	return &this
}

// NewChangeInVaultPropertiesWithDefaults instantiates a new ChangeInVaultProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeInVaultPropertiesWithDefaults() *ChangeInVaultProperties {
	this := ChangeInVaultProperties{}
	return &this
}

// GetChangeEntireGroup returns the ChangeEntireGroup field value if set, zero value otherwise.
func (o *ChangeInVaultProperties) GetChangeEntireGroup() bool {
	if o == nil || o.ChangeEntireGroup == nil {
		var ret bool
		return ret
	}
	return *o.ChangeEntireGroup
}

// GetChangeEntireGroupOk returns a tuple with the ChangeEntireGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeInVaultProperties) GetChangeEntireGroupOk() (*bool, bool) {
	if o == nil || o.ChangeEntireGroup == nil {
		return nil, false
	}
	return o.ChangeEntireGroup, true
}

// HasChangeEntireGroup returns a boolean if a field has been set.
func (o *ChangeInVaultProperties) HasChangeEntireGroup() bool {
	if o != nil && o.ChangeEntireGroup != nil {
		return true
	}

	return false
}

// SetChangeEntireGroup gets a reference to the given bool and assigns it to the ChangeEntireGroup field.
func (o *ChangeInVaultProperties) SetChangeEntireGroup(v bool) {
	o.ChangeEntireGroup = &v
}

// GetNewCredentials returns the NewCredentials field value
func (o *ChangeInVaultProperties) GetNewCredentials() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewCredentials
}

// GetNewCredentialsOk returns a tuple with the NewCredentials field value
// and a boolean to check if the value has been set.
func (o *ChangeInVaultProperties) GetNewCredentialsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewCredentials, true
}

// SetNewCredentials sets field value
func (o *ChangeInVaultProperties) SetNewCredentials(v string) {
	o.NewCredentials = v
}

func (o ChangeInVaultProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangeEntireGroup != nil {
		toSerialize["ChangeEntireGroup"] = o.ChangeEntireGroup
	}
	if true {
		toSerialize["NewCredentials"] = o.NewCredentials
	}
	return json.Marshal(toSerialize)
}

type NullableChangeInVaultProperties struct {
	value *ChangeInVaultProperties
	isSet bool
}

func (v NullableChangeInVaultProperties) Get() *ChangeInVaultProperties {
	return v.value
}

func (v *NullableChangeInVaultProperties) Set(val *ChangeInVaultProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeInVaultProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeInVaultProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeInVaultProperties(val *ChangeInVaultProperties) *NullableChangeInVaultProperties {
	return &NullableChangeInVaultProperties{value: val, isSet: true}
}

func (v NullableChangeInVaultProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeInVaultProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


