/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ComponentMonitoringSummaryData struct for ComponentMonitoringSummaryData
type ComponentMonitoringSummaryData struct {
	ComponentID *string `json:"ComponentID,omitempty"`
	ComponentName *string `json:"ComponentName,omitempty"`
	Description *string `json:"Description,omitempty"`
	ConnectedComponentCount *int32 `json:"ConnectedComponentCount,omitempty"`
	ComponentTotalCount *int32 `json:"ComponentTotalCount,omitempty"`
	ComponentSpecificStat *int64 `json:"ComponentSpecificStat,omitempty"`
}

// NewComponentMonitoringSummaryData instantiates a new ComponentMonitoringSummaryData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentMonitoringSummaryData() *ComponentMonitoringSummaryData {
	this := ComponentMonitoringSummaryData{}
	return &this
}

// NewComponentMonitoringSummaryDataWithDefaults instantiates a new ComponentMonitoringSummaryData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentMonitoringSummaryDataWithDefaults() *ComponentMonitoringSummaryData {
	this := ComponentMonitoringSummaryData{}
	return &this
}

// GetComponentID returns the ComponentID field value if set, zero value otherwise.
func (o *ComponentMonitoringSummaryData) GetComponentID() string {
	if o == nil || o.ComponentID == nil {
		var ret string
		return ret
	}
	return *o.ComponentID
}

// GetComponentIDOk returns a tuple with the ComponentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentMonitoringSummaryData) GetComponentIDOk() (*string, bool) {
	if o == nil || o.ComponentID == nil {
		return nil, false
	}
	return o.ComponentID, true
}

// HasComponentID returns a boolean if a field has been set.
func (o *ComponentMonitoringSummaryData) HasComponentID() bool {
	if o != nil && o.ComponentID != nil {
		return true
	}

	return false
}

// SetComponentID gets a reference to the given string and assigns it to the ComponentID field.
func (o *ComponentMonitoringSummaryData) SetComponentID(v string) {
	o.ComponentID = &v
}

// GetComponentName returns the ComponentName field value if set, zero value otherwise.
func (o *ComponentMonitoringSummaryData) GetComponentName() string {
	if o == nil || o.ComponentName == nil {
		var ret string
		return ret
	}
	return *o.ComponentName
}

// GetComponentNameOk returns a tuple with the ComponentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentMonitoringSummaryData) GetComponentNameOk() (*string, bool) {
	if o == nil || o.ComponentName == nil {
		return nil, false
	}
	return o.ComponentName, true
}

// HasComponentName returns a boolean if a field has been set.
func (o *ComponentMonitoringSummaryData) HasComponentName() bool {
	if o != nil && o.ComponentName != nil {
		return true
	}

	return false
}

// SetComponentName gets a reference to the given string and assigns it to the ComponentName field.
func (o *ComponentMonitoringSummaryData) SetComponentName(v string) {
	o.ComponentName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ComponentMonitoringSummaryData) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentMonitoringSummaryData) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ComponentMonitoringSummaryData) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ComponentMonitoringSummaryData) SetDescription(v string) {
	o.Description = &v
}

// GetConnectedComponentCount returns the ConnectedComponentCount field value if set, zero value otherwise.
func (o *ComponentMonitoringSummaryData) GetConnectedComponentCount() int32 {
	if o == nil || o.ConnectedComponentCount == nil {
		var ret int32
		return ret
	}
	return *o.ConnectedComponentCount
}

// GetConnectedComponentCountOk returns a tuple with the ConnectedComponentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentMonitoringSummaryData) GetConnectedComponentCountOk() (*int32, bool) {
	if o == nil || o.ConnectedComponentCount == nil {
		return nil, false
	}
	return o.ConnectedComponentCount, true
}

// HasConnectedComponentCount returns a boolean if a field has been set.
func (o *ComponentMonitoringSummaryData) HasConnectedComponentCount() bool {
	if o != nil && o.ConnectedComponentCount != nil {
		return true
	}

	return false
}

// SetConnectedComponentCount gets a reference to the given int32 and assigns it to the ConnectedComponentCount field.
func (o *ComponentMonitoringSummaryData) SetConnectedComponentCount(v int32) {
	o.ConnectedComponentCount = &v
}

// GetComponentTotalCount returns the ComponentTotalCount field value if set, zero value otherwise.
func (o *ComponentMonitoringSummaryData) GetComponentTotalCount() int32 {
	if o == nil || o.ComponentTotalCount == nil {
		var ret int32
		return ret
	}
	return *o.ComponentTotalCount
}

// GetComponentTotalCountOk returns a tuple with the ComponentTotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentMonitoringSummaryData) GetComponentTotalCountOk() (*int32, bool) {
	if o == nil || o.ComponentTotalCount == nil {
		return nil, false
	}
	return o.ComponentTotalCount, true
}

// HasComponentTotalCount returns a boolean if a field has been set.
func (o *ComponentMonitoringSummaryData) HasComponentTotalCount() bool {
	if o != nil && o.ComponentTotalCount != nil {
		return true
	}

	return false
}

// SetComponentTotalCount gets a reference to the given int32 and assigns it to the ComponentTotalCount field.
func (o *ComponentMonitoringSummaryData) SetComponentTotalCount(v int32) {
	o.ComponentTotalCount = &v
}

// GetComponentSpecificStat returns the ComponentSpecificStat field value if set, zero value otherwise.
func (o *ComponentMonitoringSummaryData) GetComponentSpecificStat() int64 {
	if o == nil || o.ComponentSpecificStat == nil {
		var ret int64
		return ret
	}
	return *o.ComponentSpecificStat
}

// GetComponentSpecificStatOk returns a tuple with the ComponentSpecificStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentMonitoringSummaryData) GetComponentSpecificStatOk() (*int64, bool) {
	if o == nil || o.ComponentSpecificStat == nil {
		return nil, false
	}
	return o.ComponentSpecificStat, true
}

// HasComponentSpecificStat returns a boolean if a field has been set.
func (o *ComponentMonitoringSummaryData) HasComponentSpecificStat() bool {
	if o != nil && o.ComponentSpecificStat != nil {
		return true
	}

	return false
}

// SetComponentSpecificStat gets a reference to the given int64 and assigns it to the ComponentSpecificStat field.
func (o *ComponentMonitoringSummaryData) SetComponentSpecificStat(v int64) {
	o.ComponentSpecificStat = &v
}

func (o ComponentMonitoringSummaryData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComponentID != nil {
		toSerialize["ComponentID"] = o.ComponentID
	}
	if o.ComponentName != nil {
		toSerialize["ComponentName"] = o.ComponentName
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.ConnectedComponentCount != nil {
		toSerialize["ConnectedComponentCount"] = o.ConnectedComponentCount
	}
	if o.ComponentTotalCount != nil {
		toSerialize["ComponentTotalCount"] = o.ComponentTotalCount
	}
	if o.ComponentSpecificStat != nil {
		toSerialize["ComponentSpecificStat"] = o.ComponentSpecificStat
	}
	return json.Marshal(toSerialize)
}

type NullableComponentMonitoringSummaryData struct {
	value *ComponentMonitoringSummaryData
	isSet bool
}

func (v NullableComponentMonitoringSummaryData) Get() *ComponentMonitoringSummaryData {
	return v.value
}

func (v *NullableComponentMonitoringSummaryData) Set(val *ComponentMonitoringSummaryData) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentMonitoringSummaryData) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentMonitoringSummaryData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentMonitoringSummaryData(val *ComponentMonitoringSummaryData) *NullableComponentMonitoringSummaryData {
	return &NullableComponentMonitoringSummaryData{value: val, isSet: true}
}

func (v NullableComponentMonitoringSummaryData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentMonitoringSummaryData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


