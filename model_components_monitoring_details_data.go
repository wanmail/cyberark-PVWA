/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ComponentsMonitoringDetailsData struct for ComponentsMonitoringDetailsData
type ComponentsMonitoringDetailsData struct {
	ComponentsDetails []ComponentMonitoringDetailsData `json:"ComponentsDetails,omitempty"`
}

// NewComponentsMonitoringDetailsData instantiates a new ComponentsMonitoringDetailsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentsMonitoringDetailsData() *ComponentsMonitoringDetailsData {
	this := ComponentsMonitoringDetailsData{}
	return &this
}

// NewComponentsMonitoringDetailsDataWithDefaults instantiates a new ComponentsMonitoringDetailsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentsMonitoringDetailsDataWithDefaults() *ComponentsMonitoringDetailsData {
	this := ComponentsMonitoringDetailsData{}
	return &this
}

// GetComponentsDetails returns the ComponentsDetails field value if set, zero value otherwise.
func (o *ComponentsMonitoringDetailsData) GetComponentsDetails() []ComponentMonitoringDetailsData {
	if o == nil || o.ComponentsDetails == nil {
		var ret []ComponentMonitoringDetailsData
		return ret
	}
	return o.ComponentsDetails
}

// GetComponentsDetailsOk returns a tuple with the ComponentsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsMonitoringDetailsData) GetComponentsDetailsOk() ([]ComponentMonitoringDetailsData, bool) {
	if o == nil || o.ComponentsDetails == nil {
		return nil, false
	}
	return o.ComponentsDetails, true
}

// HasComponentsDetails returns a boolean if a field has been set.
func (o *ComponentsMonitoringDetailsData) HasComponentsDetails() bool {
	if o != nil && o.ComponentsDetails != nil {
		return true
	}

	return false
}

// SetComponentsDetails gets a reference to the given []ComponentMonitoringDetailsData and assigns it to the ComponentsDetails field.
func (o *ComponentsMonitoringDetailsData) SetComponentsDetails(v []ComponentMonitoringDetailsData) {
	o.ComponentsDetails = v
}

func (o ComponentsMonitoringDetailsData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComponentsDetails != nil {
		toSerialize["ComponentsDetails"] = o.ComponentsDetails
	}
	return json.Marshal(toSerialize)
}

type NullableComponentsMonitoringDetailsData struct {
	value *ComponentsMonitoringDetailsData
	isSet bool
}

func (v NullableComponentsMonitoringDetailsData) Get() *ComponentsMonitoringDetailsData {
	return v.value
}

func (v *NullableComponentsMonitoringDetailsData) Set(val *ComponentsMonitoringDetailsData) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentsMonitoringDetailsData) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentsMonitoringDetailsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentsMonitoringDetailsData(val *ComponentsMonitoringDetailsData) *NullableComponentsMonitoringDetailsData {
	return &NullableComponentsMonitoringDetailsData{value: val, isSet: true}
}

func (v NullableComponentsMonitoringDetailsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentsMonitoringDetailsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


