/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfirmerMember struct for ConfirmerMember
type ConfirmerMember struct {
	UserID *int64 `json:"UserID,omitempty"`
	UserName *string `json:"UserName,omitempty"`
	AdditionalDetails *map[string]string `json:"AdditionalDetails,omitempty"`
}

// NewConfirmerMember instantiates a new ConfirmerMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmerMember() *ConfirmerMember {
	this := ConfirmerMember{}
	return &this
}

// NewConfirmerMemberWithDefaults instantiates a new ConfirmerMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmerMemberWithDefaults() *ConfirmerMember {
	this := ConfirmerMember{}
	return &this
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *ConfirmerMember) GetUserID() int64 {
	if o == nil || o.UserID == nil {
		var ret int64
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmerMember) GetUserIDOk() (*int64, bool) {
	if o == nil || o.UserID == nil {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *ConfirmerMember) HasUserID() bool {
	if o != nil && o.UserID != nil {
		return true
	}

	return false
}

// SetUserID gets a reference to the given int64 and assigns it to the UserID field.
func (o *ConfirmerMember) SetUserID(v int64) {
	o.UserID = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *ConfirmerMember) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmerMember) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *ConfirmerMember) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *ConfirmerMember) SetUserName(v string) {
	o.UserName = &v
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *ConfirmerMember) GetAdditionalDetails() map[string]string {
	if o == nil || o.AdditionalDetails == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmerMember) GetAdditionalDetailsOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalDetails == nil {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *ConfirmerMember) HasAdditionalDetails() bool {
	if o != nil && o.AdditionalDetails != nil {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given map[string]string and assigns it to the AdditionalDetails field.
func (o *ConfirmerMember) SetAdditionalDetails(v map[string]string) {
	o.AdditionalDetails = &v
}

func (o ConfirmerMember) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserID != nil {
		toSerialize["UserID"] = o.UserID
	}
	if o.UserName != nil {
		toSerialize["UserName"] = o.UserName
	}
	if o.AdditionalDetails != nil {
		toSerialize["AdditionalDetails"] = o.AdditionalDetails
	}
	return json.Marshal(toSerialize)
}

type NullableConfirmerMember struct {
	value *ConfirmerMember
	isSet bool
}

func (v NullableConfirmerMember) Get() *ConfirmerMember {
	return v.value
}

func (v *NullableConfirmerMember) Set(val *ConfirmerMember) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmerMember) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmerMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmerMember(val *ConfirmerMember) *NullableConfirmerMember {
	return &NullableConfirmerMember{value: val, isSet: true}
}

func (v NullableConfirmerMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmerMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


