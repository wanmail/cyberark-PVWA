/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConnectionParameter struct for ConnectionParameter
type ConnectionParameter struct {
	Value *string `json:"value,omitempty"`
	ShouldSave *bool `json:"ShouldSave,omitempty"`
}

// NewConnectionParameter instantiates a new ConnectionParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionParameter() *ConnectionParameter {
	this := ConnectionParameter{}
	return &this
}

// NewConnectionParameterWithDefaults instantiates a new ConnectionParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionParameterWithDefaults() *ConnectionParameter {
	this := ConnectionParameter{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ConnectionParameter) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionParameter) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ConnectionParameter) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ConnectionParameter) SetValue(v string) {
	o.Value = &v
}

// GetShouldSave returns the ShouldSave field value if set, zero value otherwise.
func (o *ConnectionParameter) GetShouldSave() bool {
	if o == nil || o.ShouldSave == nil {
		var ret bool
		return ret
	}
	return *o.ShouldSave
}

// GetShouldSaveOk returns a tuple with the ShouldSave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionParameter) GetShouldSaveOk() (*bool, bool) {
	if o == nil || o.ShouldSave == nil {
		return nil, false
	}
	return o.ShouldSave, true
}

// HasShouldSave returns a boolean if a field has been set.
func (o *ConnectionParameter) HasShouldSave() bool {
	if o != nil && o.ShouldSave != nil {
		return true
	}

	return false
}

// SetShouldSave gets a reference to the given bool and assigns it to the ShouldSave field.
func (o *ConnectionParameter) SetShouldSave(v bool) {
	o.ShouldSave = &v
}

func (o ConnectionParameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ShouldSave != nil {
		toSerialize["ShouldSave"] = o.ShouldSave
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionParameter struct {
	value *ConnectionParameter
	isSet bool
}

func (v NullableConnectionParameter) Get() *ConnectionParameter {
	return v.value
}

func (v *NullableConnectionParameter) Set(val *ConnectionParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionParameter(val *ConnectionParameter) *NullableConnectionParameter {
	return &NullableConnectionParameter{value: val, isSet: true}
}

func (v NullableConnectionParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


