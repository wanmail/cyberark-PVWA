/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DiscoveredDependency struct for DiscoveredDependency
type DiscoveredDependency struct {
	// The dependency name
	Name *string `json:"name,omitempty"`
	// The dependency address
	Address string `json:"address"`
	// The dependency type.  One of the following: COM+ Application, IIS Anonymous Authentication, IIS Application Pool, Windows Scheduled Task, Windows Service
	Type string `json:"type"`
	// The dependency task folder - For Windows Scheduled Task
	TaskFolder *string `json:"taskFolder,omitempty"`
}

// NewDiscoveredDependency instantiates a new DiscoveredDependency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveredDependency(address string, type_ string) *DiscoveredDependency {
	this := DiscoveredDependency{}
	this.Address = address
	this.Type = type_
	return &this
}

// NewDiscoveredDependencyWithDefaults instantiates a new DiscoveredDependency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveredDependencyWithDefaults() *DiscoveredDependency {
	this := DiscoveredDependency{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiscoveredDependency) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependency) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiscoveredDependency) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiscoveredDependency) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value
func (o *DiscoveredDependency) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *DiscoveredDependency) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *DiscoveredDependency) SetAddress(v string) {
	o.Address = v
}

// GetType returns the Type field value
func (o *DiscoveredDependency) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DiscoveredDependency) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DiscoveredDependency) SetType(v string) {
	o.Type = v
}

// GetTaskFolder returns the TaskFolder field value if set, zero value otherwise.
func (o *DiscoveredDependency) GetTaskFolder() string {
	if o == nil || o.TaskFolder == nil {
		var ret string
		return ret
	}
	return *o.TaskFolder
}

// GetTaskFolderOk returns a tuple with the TaskFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependency) GetTaskFolderOk() (*string, bool) {
	if o == nil || o.TaskFolder == nil {
		return nil, false
	}
	return o.TaskFolder, true
}

// HasTaskFolder returns a boolean if a field has been set.
func (o *DiscoveredDependency) HasTaskFolder() bool {
	if o != nil && o.TaskFolder != nil {
		return true
	}

	return false
}

// SetTaskFolder gets a reference to the given string and assigns it to the TaskFolder field.
func (o *DiscoveredDependency) SetTaskFolder(v string) {
	o.TaskFolder = &v
}

func (o DiscoveredDependency) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.TaskFolder != nil {
		toSerialize["taskFolder"] = o.TaskFolder
	}
	return json.Marshal(toSerialize)
}

type NullableDiscoveredDependency struct {
	value *DiscoveredDependency
	isSet bool
}

func (v NullableDiscoveredDependency) Get() *DiscoveredDependency {
	return v.value
}

func (v *NullableDiscoveredDependency) Set(val *DiscoveredDependency) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveredDependency) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveredDependency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveredDependency(val *DiscoveredDependency) *NullableDiscoveredDependency {
	return &NullableDiscoveredDependency{value: val, isSet: true}
}

func (v NullableDiscoveredDependency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveredDependency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


