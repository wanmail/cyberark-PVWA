/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DiscoveredDependencyResponse struct for DiscoveredDependencyResponse
type DiscoveredDependencyResponse struct {
	// The ID of the on-boarded or pending dependency.
	Id *string `json:"id,omitempty"`
	// The status of the dependency. The possible values are:  addedDependency - the dependency was on-boarded to the Vault.  addedAsPending - the dependency was added to the Pending Accounts list.  alreadyExists - the dependency is already exists or already pending.  failed - there was a failure during dependency creation.  skip - the dependency wasn't added since there was a failure in previous dependency creation.
	Status *string `json:"status,omitempty"`
	// The dependency name.
	Name *string `json:"name,omitempty"`
	// The dependency address.
	Address *string `json:"address,omitempty"`
	// The dependency type.
	Type *string `json:"type,omitempty"`
	// The failure message, in case the dependency failed to create.
	FailureReason *string `json:"failureReason,omitempty"`
}

// NewDiscoveredDependencyResponse instantiates a new DiscoveredDependencyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveredDependencyResponse() *DiscoveredDependencyResponse {
	this := DiscoveredDependencyResponse{}
	return &this
}

// NewDiscoveredDependencyResponseWithDefaults instantiates a new DiscoveredDependencyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveredDependencyResponseWithDefaults() *DiscoveredDependencyResponse {
	this := DiscoveredDependencyResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DiscoveredDependencyResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependencyResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DiscoveredDependencyResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DiscoveredDependencyResponse) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DiscoveredDependencyResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependencyResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DiscoveredDependencyResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DiscoveredDependencyResponse) SetStatus(v string) {
	o.Status = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiscoveredDependencyResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependencyResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiscoveredDependencyResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiscoveredDependencyResponse) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DiscoveredDependencyResponse) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependencyResponse) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DiscoveredDependencyResponse) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DiscoveredDependencyResponse) SetAddress(v string) {
	o.Address = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DiscoveredDependencyResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependencyResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DiscoveredDependencyResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DiscoveredDependencyResponse) SetType(v string) {
	o.Type = &v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *DiscoveredDependencyResponse) GetFailureReason() string {
	if o == nil || o.FailureReason == nil {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveredDependencyResponse) GetFailureReasonOk() (*string, bool) {
	if o == nil || o.FailureReason == nil {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *DiscoveredDependencyResponse) HasFailureReason() bool {
	if o != nil && o.FailureReason != nil {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *DiscoveredDependencyResponse) SetFailureReason(v string) {
	o.FailureReason = &v
}

func (o DiscoveredDependencyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.FailureReason != nil {
		toSerialize["failureReason"] = o.FailureReason
	}
	return json.Marshal(toSerialize)
}

type NullableDiscoveredDependencyResponse struct {
	value *DiscoveredDependencyResponse
	isSet bool
}

func (v NullableDiscoveredDependencyResponse) Get() *DiscoveredDependencyResponse {
	return v.value
}

func (v *NullableDiscoveredDependencyResponse) Set(val *DiscoveredDependencyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveredDependencyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveredDependencyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveredDependencyResponse(val *DiscoveredDependencyResponse) *NullableDiscoveredDependencyResponse {
	return &NullableDiscoveredDependencyResponse{value: val, isSet: true}
}

func (v NullableDiscoveredDependencyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveredDependencyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


