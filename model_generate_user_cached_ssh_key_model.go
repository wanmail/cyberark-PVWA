/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenerateUserCachedSSHKeyModel struct for GenerateUserCachedSSHKeyModel
type GenerateUserCachedSSHKeyModel struct {
	Formats []int32 `json:"formats,omitempty"`
	KeyPassword *string `json:"keyPassword,omitempty"`
}

// NewGenerateUserCachedSSHKeyModel instantiates a new GenerateUserCachedSSHKeyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateUserCachedSSHKeyModel() *GenerateUserCachedSSHKeyModel {
	this := GenerateUserCachedSSHKeyModel{}
	return &this
}

// NewGenerateUserCachedSSHKeyModelWithDefaults instantiates a new GenerateUserCachedSSHKeyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateUserCachedSSHKeyModelWithDefaults() *GenerateUserCachedSSHKeyModel {
	this := GenerateUserCachedSSHKeyModel{}
	return &this
}

// GetFormats returns the Formats field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyModel) GetFormats() []int32 {
	if o == nil || o.Formats == nil {
		var ret []int32
		return ret
	}
	return o.Formats
}

// GetFormatsOk returns a tuple with the Formats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyModel) GetFormatsOk() ([]int32, bool) {
	if o == nil || o.Formats == nil {
		return nil, false
	}
	return o.Formats, true
}

// HasFormats returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyModel) HasFormats() bool {
	if o != nil && o.Formats != nil {
		return true
	}

	return false
}

// SetFormats gets a reference to the given []int32 and assigns it to the Formats field.
func (o *GenerateUserCachedSSHKeyModel) SetFormats(v []int32) {
	o.Formats = v
}

// GetKeyPassword returns the KeyPassword field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyModel) GetKeyPassword() string {
	if o == nil || o.KeyPassword == nil {
		var ret string
		return ret
	}
	return *o.KeyPassword
}

// GetKeyPasswordOk returns a tuple with the KeyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyModel) GetKeyPasswordOk() (*string, bool) {
	if o == nil || o.KeyPassword == nil {
		return nil, false
	}
	return o.KeyPassword, true
}

// HasKeyPassword returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyModel) HasKeyPassword() bool {
	if o != nil && o.KeyPassword != nil {
		return true
	}

	return false
}

// SetKeyPassword gets a reference to the given string and assigns it to the KeyPassword field.
func (o *GenerateUserCachedSSHKeyModel) SetKeyPassword(v string) {
	o.KeyPassword = &v
}

func (o GenerateUserCachedSSHKeyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Formats != nil {
		toSerialize["formats"] = o.Formats
	}
	if o.KeyPassword != nil {
		toSerialize["keyPassword"] = o.KeyPassword
	}
	return json.Marshal(toSerialize)
}

type NullableGenerateUserCachedSSHKeyModel struct {
	value *GenerateUserCachedSSHKeyModel
	isSet bool
}

func (v NullableGenerateUserCachedSSHKeyModel) Get() *GenerateUserCachedSSHKeyModel {
	return v.value
}

func (v *NullableGenerateUserCachedSSHKeyModel) Set(val *GenerateUserCachedSSHKeyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateUserCachedSSHKeyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateUserCachedSSHKeyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateUserCachedSSHKeyModel(val *GenerateUserCachedSSHKeyModel) *NullableGenerateUserCachedSSHKeyModel {
	return &NullableGenerateUserCachedSSHKeyModel{value: val, isSet: true}
}

func (v NullableGenerateUserCachedSSHKeyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateUserCachedSSHKeyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


