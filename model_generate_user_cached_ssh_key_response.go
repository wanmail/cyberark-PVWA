/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenerateUserCachedSSHKeyResponse struct for GenerateUserCachedSSHKeyResponse
type GenerateUserCachedSSHKeyResponse struct {
	Value []PrivateSSHKeyModel `json:"value,omitempty"`
	CreationTime *int64 `json:"creationTime,omitempty"`
	ExpirationTime *int64 `json:"expirationTime,omitempty"`
	PublicKey *string `json:"publicKey,omitempty"`
	Count *int32 `json:"count,omitempty"`
	NextLink *string `json:"nextLink,omitempty"`
}

// NewGenerateUserCachedSSHKeyResponse instantiates a new GenerateUserCachedSSHKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateUserCachedSSHKeyResponse() *GenerateUserCachedSSHKeyResponse {
	this := GenerateUserCachedSSHKeyResponse{}
	return &this
}

// NewGenerateUserCachedSSHKeyResponseWithDefaults instantiates a new GenerateUserCachedSSHKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateUserCachedSSHKeyResponseWithDefaults() *GenerateUserCachedSSHKeyResponse {
	this := GenerateUserCachedSSHKeyResponse{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyResponse) GetValue() []PrivateSSHKeyModel {
	if o == nil || o.Value == nil {
		var ret []PrivateSSHKeyModel
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyResponse) GetValueOk() ([]PrivateSSHKeyModel, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyResponse) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []PrivateSSHKeyModel and assigns it to the Value field.
func (o *GenerateUserCachedSSHKeyResponse) SetValue(v []PrivateSSHKeyModel) {
	o.Value = v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyResponse) GetCreationTime() int64 {
	if o == nil || o.CreationTime == nil {
		var ret int64
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyResponse) GetCreationTimeOk() (*int64, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyResponse) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given int64 and assigns it to the CreationTime field.
func (o *GenerateUserCachedSSHKeyResponse) SetCreationTime(v int64) {
	o.CreationTime = &v
}

// GetExpirationTime returns the ExpirationTime field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyResponse) GetExpirationTime() int64 {
	if o == nil || o.ExpirationTime == nil {
		var ret int64
		return ret
	}
	return *o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyResponse) GetExpirationTimeOk() (*int64, bool) {
	if o == nil || o.ExpirationTime == nil {
		return nil, false
	}
	return o.ExpirationTime, true
}

// HasExpirationTime returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyResponse) HasExpirationTime() bool {
	if o != nil && o.ExpirationTime != nil {
		return true
	}

	return false
}

// SetExpirationTime gets a reference to the given int64 and assigns it to the ExpirationTime field.
func (o *GenerateUserCachedSSHKeyResponse) SetExpirationTime(v int64) {
	o.ExpirationTime = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyResponse) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyResponse) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyResponse) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *GenerateUserCachedSSHKeyResponse) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyResponse) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyResponse) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyResponse) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GenerateUserCachedSSHKeyResponse) SetCount(v int32) {
	o.Count = &v
}

// GetNextLink returns the NextLink field value if set, zero value otherwise.
func (o *GenerateUserCachedSSHKeyResponse) GetNextLink() string {
	if o == nil || o.NextLink == nil {
		var ret string
		return ret
	}
	return *o.NextLink
}

// GetNextLinkOk returns a tuple with the NextLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUserCachedSSHKeyResponse) GetNextLinkOk() (*string, bool) {
	if o == nil || o.NextLink == nil {
		return nil, false
	}
	return o.NextLink, true
}

// HasNextLink returns a boolean if a field has been set.
func (o *GenerateUserCachedSSHKeyResponse) HasNextLink() bool {
	if o != nil && o.NextLink != nil {
		return true
	}

	return false
}

// SetNextLink gets a reference to the given string and assigns it to the NextLink field.
func (o *GenerateUserCachedSSHKeyResponse) SetNextLink(v string) {
	o.NextLink = &v
}

func (o GenerateUserCachedSSHKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.CreationTime != nil {
		toSerialize["creationTime"] = o.CreationTime
	}
	if o.ExpirationTime != nil {
		toSerialize["expirationTime"] = o.ExpirationTime
	}
	if o.PublicKey != nil {
		toSerialize["publicKey"] = o.PublicKey
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.NextLink != nil {
		toSerialize["nextLink"] = o.NextLink
	}
	return json.Marshal(toSerialize)
}

type NullableGenerateUserCachedSSHKeyResponse struct {
	value *GenerateUserCachedSSHKeyResponse
	isSet bool
}

func (v NullableGenerateUserCachedSSHKeyResponse) Get() *GenerateUserCachedSSHKeyResponse {
	return v.value
}

func (v *NullableGenerateUserCachedSSHKeyResponse) Set(val *GenerateUserCachedSSHKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateUserCachedSSHKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateUserCachedSSHKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateUserCachedSSHKeyResponse(val *GenerateUserCachedSSHKeyResponse) *NullableGenerateUserCachedSSHKeyResponse {
	return &NullableGenerateUserCachedSSHKeyResponse{value: val, isSet: true}
}

func (v NullableGenerateUserCachedSSHKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateUserCachedSSHKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


