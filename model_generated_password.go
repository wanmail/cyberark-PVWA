/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GeneratedPassword struct for GeneratedPassword
type GeneratedPassword struct {
	Password *string `json:"Password,omitempty"`
}

// NewGeneratedPassword instantiates a new GeneratedPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratedPassword() *GeneratedPassword {
	this := GeneratedPassword{}
	return &this
}

// NewGeneratedPasswordWithDefaults instantiates a new GeneratedPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratedPasswordWithDefaults() *GeneratedPassword {
	this := GeneratedPassword{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GeneratedPassword) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedPassword) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GeneratedPassword) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *GeneratedPassword) SetPassword(v string) {
	o.Password = &v
}

func (o GeneratedPassword) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["Password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableGeneratedPassword struct {
	value *GeneratedPassword
	isSet bool
}

func (v NullableGeneratedPassword) Get() *GeneratedPassword {
	return v.value
}

func (v *NullableGeneratedPassword) Set(val *GeneratedPassword) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratedPassword) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratedPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratedPassword(val *GeneratedPassword) *NullableGeneratedPassword {
	return &NullableGeneratedPassword{value: val, isSet: true}
}

func (v NullableGeneratedPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratedPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


