/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetDiscoveredAccount struct for GetDiscoveredAccount
type GetDiscoveredAccount struct {
	// The ID of the discovered account
	Id *string `json:"id,omitempty"`
	// The name of the account in the PasswordManager_Pending safe
	Name *string `json:"name,omitempty"`
	// The name of the discovered account user
	UserName *string `json:"userName,omitempty"`
	// The name or address of the machine\\domain where the account was discovered
	Address *string `json:"address,omitempty"`
	// The date the account was discovered
	DiscoveryDateTime *int64 `json:"discoveryDateTime,omitempty"`
	// The state of the account, defined in the discovery source.  Note: The state of domain accounts is based on the Active Directory. The state of local accounts is based on the local machine.  If this parameter is not set, it is considered null
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	// The group names that the account belongs to, such as Administrators or Operators
	OsGroups *string `json:"osGroups,omitempty"`
	// The platform where the discovered account is located
	PlatformType *string `json:"platformType,omitempty"`
	// The domain of the account
	Domain *string `json:"domain,omitempty"`
	// The date this account was last logged into, defined in the discovery source
	LastLogonDateTime *int64 `json:"lastLogonDateTime,omitempty"`
	// The date this password was last set, defined in the discovery source
	LastPasswordSetDateTime *int64 `json:"lastPasswordSetDateTime,omitempty"`
	// Whether or not this password expires, defined in the discovery source.  If this parameter is not set, it is considered null
	PasswordNeverExpires *bool `json:"passwordNeverExpires,omitempty"`
	// The version of the OS where the account was discovered
	OsVersion *string `json:"osVersion,omitempty"`
	// Whether the discovered account is privileged or non-privileged.  If this parameter is not set, it is considered null
	Privileged *bool `json:"privileged,omitempty"`
	// The criteria that determines whether or not the discovered account is privileged. For example, the user or group name
	PrivilegedCriteria *string `json:"privilegedCriteria,omitempty"`
	// The user's display name
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// A description of the account, defined in the discovery source
	Description *string `json:"description,omitempty"`
	// The expiration date of the account, defined in the discovery source
	PasswordExpirationDateTime *int64 `json:"passwordExpirationDateTime,omitempty"`
	// The type of machine where the account was discovered.  If this parameter is not set, it is considered null and will not be returned in the result
	OsFamily *string `json:"osFamily,omitempty"`
	// The organizational unit where the account is defined
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	// List of name=value pairs for additional properties of the account.  The list of properties is valid file properties in the Vault
	AdditionalPropertiesField *map[string]string `json:"additionalProperties,omitempty"`
	// The object that contains the key-value pairs to associate with the account, as defined by the account platform type schema.   Only properties that appear in the platform type schema are allowed
	PlatformTypeAccountProperties *map[string]string `json:"platformTypeAccountProperties,omitempty"`
	// The number of dependencies for the discovered account
	NumberOfDependencies *int32 `json:"numberOfDependencies,omitempty"`
	// The list of dependency details for the discovered account
	Dependencies []GetDiscoveredDependency `json:"dependencies,omitempty"`
}

// NewGetDiscoveredAccount instantiates a new GetDiscoveredAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDiscoveredAccount() *GetDiscoveredAccount {
	this := GetDiscoveredAccount{}
	return &this
}

// NewGetDiscoveredAccountWithDefaults instantiates a new GetDiscoveredAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDiscoveredAccountWithDefaults() *GetDiscoveredAccount {
	this := GetDiscoveredAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetDiscoveredAccount) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetDiscoveredAccount) SetName(v string) {
	o.Name = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *GetDiscoveredAccount) SetUserName(v string) {
	o.UserName = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GetDiscoveredAccount) SetAddress(v string) {
	o.Address = &v
}

// GetDiscoveryDateTime returns the DiscoveryDateTime field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetDiscoveryDateTime() int64 {
	if o == nil || o.DiscoveryDateTime == nil {
		var ret int64
		return ret
	}
	return *o.DiscoveryDateTime
}

// GetDiscoveryDateTimeOk returns a tuple with the DiscoveryDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetDiscoveryDateTimeOk() (*int64, bool) {
	if o == nil || o.DiscoveryDateTime == nil {
		return nil, false
	}
	return o.DiscoveryDateTime, true
}

// HasDiscoveryDateTime returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasDiscoveryDateTime() bool {
	if o != nil && o.DiscoveryDateTime != nil {
		return true
	}

	return false
}

// SetDiscoveryDateTime gets a reference to the given int64 and assigns it to the DiscoveryDateTime field.
func (o *GetDiscoveredAccount) SetDiscoveryDateTime(v int64) {
	o.DiscoveryDateTime = &v
}

// GetAccountEnabled returns the AccountEnabled field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetAccountEnabled() bool {
	if o == nil || o.AccountEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AccountEnabled
}

// GetAccountEnabledOk returns a tuple with the AccountEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetAccountEnabledOk() (*bool, bool) {
	if o == nil || o.AccountEnabled == nil {
		return nil, false
	}
	return o.AccountEnabled, true
}

// HasAccountEnabled returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasAccountEnabled() bool {
	if o != nil && o.AccountEnabled != nil {
		return true
	}

	return false
}

// SetAccountEnabled gets a reference to the given bool and assigns it to the AccountEnabled field.
func (o *GetDiscoveredAccount) SetAccountEnabled(v bool) {
	o.AccountEnabled = &v
}

// GetOsGroups returns the OsGroups field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetOsGroups() string {
	if o == nil || o.OsGroups == nil {
		var ret string
		return ret
	}
	return *o.OsGroups
}

// GetOsGroupsOk returns a tuple with the OsGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetOsGroupsOk() (*string, bool) {
	if o == nil || o.OsGroups == nil {
		return nil, false
	}
	return o.OsGroups, true
}

// HasOsGroups returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasOsGroups() bool {
	if o != nil && o.OsGroups != nil {
		return true
	}

	return false
}

// SetOsGroups gets a reference to the given string and assigns it to the OsGroups field.
func (o *GetDiscoveredAccount) SetOsGroups(v string) {
	o.OsGroups = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetPlatformType() string {
	if o == nil || o.PlatformType == nil {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetPlatformTypeOk() (*string, bool) {
	if o == nil || o.PlatformType == nil {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasPlatformType() bool {
	if o != nil && o.PlatformType != nil {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *GetDiscoveredAccount) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *GetDiscoveredAccount) SetDomain(v string) {
	o.Domain = &v
}

// GetLastLogonDateTime returns the LastLogonDateTime field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetLastLogonDateTime() int64 {
	if o == nil || o.LastLogonDateTime == nil {
		var ret int64
		return ret
	}
	return *o.LastLogonDateTime
}

// GetLastLogonDateTimeOk returns a tuple with the LastLogonDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetLastLogonDateTimeOk() (*int64, bool) {
	if o == nil || o.LastLogonDateTime == nil {
		return nil, false
	}
	return o.LastLogonDateTime, true
}

// HasLastLogonDateTime returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasLastLogonDateTime() bool {
	if o != nil && o.LastLogonDateTime != nil {
		return true
	}

	return false
}

// SetLastLogonDateTime gets a reference to the given int64 and assigns it to the LastLogonDateTime field.
func (o *GetDiscoveredAccount) SetLastLogonDateTime(v int64) {
	o.LastLogonDateTime = &v
}

// GetLastPasswordSetDateTime returns the LastPasswordSetDateTime field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetLastPasswordSetDateTime() int64 {
	if o == nil || o.LastPasswordSetDateTime == nil {
		var ret int64
		return ret
	}
	return *o.LastPasswordSetDateTime
}

// GetLastPasswordSetDateTimeOk returns a tuple with the LastPasswordSetDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetLastPasswordSetDateTimeOk() (*int64, bool) {
	if o == nil || o.LastPasswordSetDateTime == nil {
		return nil, false
	}
	return o.LastPasswordSetDateTime, true
}

// HasLastPasswordSetDateTime returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasLastPasswordSetDateTime() bool {
	if o != nil && o.LastPasswordSetDateTime != nil {
		return true
	}

	return false
}

// SetLastPasswordSetDateTime gets a reference to the given int64 and assigns it to the LastPasswordSetDateTime field.
func (o *GetDiscoveredAccount) SetLastPasswordSetDateTime(v int64) {
	o.LastPasswordSetDateTime = &v
}

// GetPasswordNeverExpires returns the PasswordNeverExpires field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetPasswordNeverExpires() bool {
	if o == nil || o.PasswordNeverExpires == nil {
		var ret bool
		return ret
	}
	return *o.PasswordNeverExpires
}

// GetPasswordNeverExpiresOk returns a tuple with the PasswordNeverExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetPasswordNeverExpiresOk() (*bool, bool) {
	if o == nil || o.PasswordNeverExpires == nil {
		return nil, false
	}
	return o.PasswordNeverExpires, true
}

// HasPasswordNeverExpires returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasPasswordNeverExpires() bool {
	if o != nil && o.PasswordNeverExpires != nil {
		return true
	}

	return false
}

// SetPasswordNeverExpires gets a reference to the given bool and assigns it to the PasswordNeverExpires field.
func (o *GetDiscoveredAccount) SetPasswordNeverExpires(v bool) {
	o.PasswordNeverExpires = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetOsVersion() string {
	if o == nil || o.OsVersion == nil {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetOsVersionOk() (*string, bool) {
	if o == nil || o.OsVersion == nil {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasOsVersion() bool {
	if o != nil && o.OsVersion != nil {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *GetDiscoveredAccount) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetPrivileged returns the Privileged field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetPrivileged() bool {
	if o == nil || o.Privileged == nil {
		var ret bool
		return ret
	}
	return *o.Privileged
}

// GetPrivilegedOk returns a tuple with the Privileged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetPrivilegedOk() (*bool, bool) {
	if o == nil || o.Privileged == nil {
		return nil, false
	}
	return o.Privileged, true
}

// HasPrivileged returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasPrivileged() bool {
	if o != nil && o.Privileged != nil {
		return true
	}

	return false
}

// SetPrivileged gets a reference to the given bool and assigns it to the Privileged field.
func (o *GetDiscoveredAccount) SetPrivileged(v bool) {
	o.Privileged = &v
}

// GetPrivilegedCriteria returns the PrivilegedCriteria field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetPrivilegedCriteria() string {
	if o == nil || o.PrivilegedCriteria == nil {
		var ret string
		return ret
	}
	return *o.PrivilegedCriteria
}

// GetPrivilegedCriteriaOk returns a tuple with the PrivilegedCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetPrivilegedCriteriaOk() (*string, bool) {
	if o == nil || o.PrivilegedCriteria == nil {
		return nil, false
	}
	return o.PrivilegedCriteria, true
}

// HasPrivilegedCriteria returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasPrivilegedCriteria() bool {
	if o != nil && o.PrivilegedCriteria != nil {
		return true
	}

	return false
}

// SetPrivilegedCriteria gets a reference to the given string and assigns it to the PrivilegedCriteria field.
func (o *GetDiscoveredAccount) SetPrivilegedCriteria(v string) {
	o.PrivilegedCriteria = &v
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetUserDisplayName() string {
	if o == nil || o.UserDisplayName == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetUserDisplayNameOk() (*string, bool) {
	if o == nil || o.UserDisplayName == nil {
		return nil, false
	}
	return o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasUserDisplayName() bool {
	if o != nil && o.UserDisplayName != nil {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *GetDiscoveredAccount) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetDiscoveredAccount) SetDescription(v string) {
	o.Description = &v
}

// GetPasswordExpirationDateTime returns the PasswordExpirationDateTime field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetPasswordExpirationDateTime() int64 {
	if o == nil || o.PasswordExpirationDateTime == nil {
		var ret int64
		return ret
	}
	return *o.PasswordExpirationDateTime
}

// GetPasswordExpirationDateTimeOk returns a tuple with the PasswordExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetPasswordExpirationDateTimeOk() (*int64, bool) {
	if o == nil || o.PasswordExpirationDateTime == nil {
		return nil, false
	}
	return o.PasswordExpirationDateTime, true
}

// HasPasswordExpirationDateTime returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasPasswordExpirationDateTime() bool {
	if o != nil && o.PasswordExpirationDateTime != nil {
		return true
	}

	return false
}

// SetPasswordExpirationDateTime gets a reference to the given int64 and assigns it to the PasswordExpirationDateTime field.
func (o *GetDiscoveredAccount) SetPasswordExpirationDateTime(v int64) {
	o.PasswordExpirationDateTime = &v
}

// GetOsFamily returns the OsFamily field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetOsFamily() string {
	if o == nil || o.OsFamily == nil {
		var ret string
		return ret
	}
	return *o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetOsFamilyOk() (*string, bool) {
	if o == nil || o.OsFamily == nil {
		return nil, false
	}
	return o.OsFamily, true
}

// HasOsFamily returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasOsFamily() bool {
	if o != nil && o.OsFamily != nil {
		return true
	}

	return false
}

// SetOsFamily gets a reference to the given string and assigns it to the OsFamily field.
func (o *GetDiscoveredAccount) SetOsFamily(v string) {
	o.OsFamily = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetOrganizationalUnit() string {
	if o == nil || o.OrganizationalUnit == nil {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || o.OrganizationalUnit == nil {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// HasOrganizationalUnit returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasOrganizationalUnit() bool {
	if o != nil && o.OrganizationalUnit != nil {
		return true
	}

	return false
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *GetDiscoveredAccount) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetAdditionalPropertiesField returns the AdditionalPropertiesField field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetAdditionalPropertiesField() map[string]string {
	if o == nil || o.AdditionalPropertiesField == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalPropertiesField
}

// GetAdditionalPropertiesFieldOk returns a tuple with the AdditionalPropertiesField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetAdditionalPropertiesFieldOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalPropertiesField == nil {
		return nil, false
	}
	return o.AdditionalPropertiesField, true
}

// HasAdditionalPropertiesField returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasAdditionalPropertiesField() bool {
	if o != nil && o.AdditionalPropertiesField != nil {
		return true
	}

	return false
}

// SetAdditionalPropertiesField gets a reference to the given map[string]string and assigns it to the AdditionalPropertiesField field.
func (o *GetDiscoveredAccount) SetAdditionalPropertiesField(v map[string]string) {
	o.AdditionalPropertiesField = &v
}

// GetPlatformTypeAccountProperties returns the PlatformTypeAccountProperties field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetPlatformTypeAccountProperties() map[string]string {
	if o == nil || o.PlatformTypeAccountProperties == nil {
		var ret map[string]string
		return ret
	}
	return *o.PlatformTypeAccountProperties
}

// GetPlatformTypeAccountPropertiesOk returns a tuple with the PlatformTypeAccountProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetPlatformTypeAccountPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.PlatformTypeAccountProperties == nil {
		return nil, false
	}
	return o.PlatformTypeAccountProperties, true
}

// HasPlatformTypeAccountProperties returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasPlatformTypeAccountProperties() bool {
	if o != nil && o.PlatformTypeAccountProperties != nil {
		return true
	}

	return false
}

// SetPlatformTypeAccountProperties gets a reference to the given map[string]string and assigns it to the PlatformTypeAccountProperties field.
func (o *GetDiscoveredAccount) SetPlatformTypeAccountProperties(v map[string]string) {
	o.PlatformTypeAccountProperties = &v
}

// GetNumberOfDependencies returns the NumberOfDependencies field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetNumberOfDependencies() int32 {
	if o == nil || o.NumberOfDependencies == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfDependencies
}

// GetNumberOfDependenciesOk returns a tuple with the NumberOfDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetNumberOfDependenciesOk() (*int32, bool) {
	if o == nil || o.NumberOfDependencies == nil {
		return nil, false
	}
	return o.NumberOfDependencies, true
}

// HasNumberOfDependencies returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasNumberOfDependencies() bool {
	if o != nil && o.NumberOfDependencies != nil {
		return true
	}

	return false
}

// SetNumberOfDependencies gets a reference to the given int32 and assigns it to the NumberOfDependencies field.
func (o *GetDiscoveredAccount) SetNumberOfDependencies(v int32) {
	o.NumberOfDependencies = &v
}

// GetDependencies returns the Dependencies field value if set, zero value otherwise.
func (o *GetDiscoveredAccount) GetDependencies() []GetDiscoveredDependency {
	if o == nil || o.Dependencies == nil {
		var ret []GetDiscoveredDependency
		return ret
	}
	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDiscoveredAccount) GetDependenciesOk() ([]GetDiscoveredDependency, bool) {
	if o == nil || o.Dependencies == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// HasDependencies returns a boolean if a field has been set.
func (o *GetDiscoveredAccount) HasDependencies() bool {
	if o != nil && o.Dependencies != nil {
		return true
	}

	return false
}

// SetDependencies gets a reference to the given []GetDiscoveredDependency and assigns it to the Dependencies field.
func (o *GetDiscoveredAccount) SetDependencies(v []GetDiscoveredDependency) {
	o.Dependencies = v
}

func (o GetDiscoveredAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.UserName != nil {
		toSerialize["userName"] = o.UserName
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.DiscoveryDateTime != nil {
		toSerialize["discoveryDateTime"] = o.DiscoveryDateTime
	}
	if o.AccountEnabled != nil {
		toSerialize["accountEnabled"] = o.AccountEnabled
	}
	if o.OsGroups != nil {
		toSerialize["osGroups"] = o.OsGroups
	}
	if o.PlatformType != nil {
		toSerialize["platformType"] = o.PlatformType
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.LastLogonDateTime != nil {
		toSerialize["lastLogonDateTime"] = o.LastLogonDateTime
	}
	if o.LastPasswordSetDateTime != nil {
		toSerialize["lastPasswordSetDateTime"] = o.LastPasswordSetDateTime
	}
	if o.PasswordNeverExpires != nil {
		toSerialize["passwordNeverExpires"] = o.PasswordNeverExpires
	}
	if o.OsVersion != nil {
		toSerialize["osVersion"] = o.OsVersion
	}
	if o.Privileged != nil {
		toSerialize["privileged"] = o.Privileged
	}
	if o.PrivilegedCriteria != nil {
		toSerialize["privilegedCriteria"] = o.PrivilegedCriteria
	}
	if o.UserDisplayName != nil {
		toSerialize["userDisplayName"] = o.UserDisplayName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.PasswordExpirationDateTime != nil {
		toSerialize["passwordExpirationDateTime"] = o.PasswordExpirationDateTime
	}
	if o.OsFamily != nil {
		toSerialize["osFamily"] = o.OsFamily
	}
	if o.OrganizationalUnit != nil {
		toSerialize["organizationalUnit"] = o.OrganizationalUnit
	}
	if o.AdditionalPropertiesField != nil {
		toSerialize["additionalProperties"] = o.AdditionalPropertiesField
	}
	if o.PlatformTypeAccountProperties != nil {
		toSerialize["platformTypeAccountProperties"] = o.PlatformTypeAccountProperties
	}
	if o.NumberOfDependencies != nil {
		toSerialize["numberOfDependencies"] = o.NumberOfDependencies
	}
	if o.Dependencies != nil {
		toSerialize["dependencies"] = o.Dependencies
	}
	return json.Marshal(toSerialize)
}

type NullableGetDiscoveredAccount struct {
	value *GetDiscoveredAccount
	isSet bool
}

func (v NullableGetDiscoveredAccount) Get() *GetDiscoveredAccount {
	return v.value
}

func (v *NullableGetDiscoveredAccount) Set(val *GetDiscoveredAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDiscoveredAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDiscoveredAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDiscoveredAccount(val *GetDiscoveredAccount) *NullableGetDiscoveredAccount {
	return &NullableGetDiscoveredAccount{value: val, isSet: true}
}

func (v NullableGetDiscoveredAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDiscoveredAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


