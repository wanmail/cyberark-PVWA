/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetSafeDetailsRequest struct for GetSafeDetailsRequest
type GetSafeDetailsRequest struct {
	// Whether or not to return accounts for each Safe as part of the response. If not sent, the value will be False.
	IncludeAccounts *bool `json:"includeAccounts,omitempty"`
	// Whether to retrieve from session or not.
	UseCache *bool `json:"useCache,omitempty"`
}

// NewGetSafeDetailsRequest instantiates a new GetSafeDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSafeDetailsRequest() *GetSafeDetailsRequest {
	this := GetSafeDetailsRequest{}
	return &this
}

// NewGetSafeDetailsRequestWithDefaults instantiates a new GetSafeDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSafeDetailsRequestWithDefaults() *GetSafeDetailsRequest {
	this := GetSafeDetailsRequest{}
	return &this
}

// GetIncludeAccounts returns the IncludeAccounts field value if set, zero value otherwise.
func (o *GetSafeDetailsRequest) GetIncludeAccounts() bool {
	if o == nil || o.IncludeAccounts == nil {
		var ret bool
		return ret
	}
	return *o.IncludeAccounts
}

// GetIncludeAccountsOk returns a tuple with the IncludeAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSafeDetailsRequest) GetIncludeAccountsOk() (*bool, bool) {
	if o == nil || o.IncludeAccounts == nil {
		return nil, false
	}
	return o.IncludeAccounts, true
}

// HasIncludeAccounts returns a boolean if a field has been set.
func (o *GetSafeDetailsRequest) HasIncludeAccounts() bool {
	if o != nil && o.IncludeAccounts != nil {
		return true
	}

	return false
}

// SetIncludeAccounts gets a reference to the given bool and assigns it to the IncludeAccounts field.
func (o *GetSafeDetailsRequest) SetIncludeAccounts(v bool) {
	o.IncludeAccounts = &v
}

// GetUseCache returns the UseCache field value if set, zero value otherwise.
func (o *GetSafeDetailsRequest) GetUseCache() bool {
	if o == nil || o.UseCache == nil {
		var ret bool
		return ret
	}
	return *o.UseCache
}

// GetUseCacheOk returns a tuple with the UseCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSafeDetailsRequest) GetUseCacheOk() (*bool, bool) {
	if o == nil || o.UseCache == nil {
		return nil, false
	}
	return o.UseCache, true
}

// HasUseCache returns a boolean if a field has been set.
func (o *GetSafeDetailsRequest) HasUseCache() bool {
	if o != nil && o.UseCache != nil {
		return true
	}

	return false
}

// SetUseCache gets a reference to the given bool and assigns it to the UseCache field.
func (o *GetSafeDetailsRequest) SetUseCache(v bool) {
	o.UseCache = &v
}

func (o GetSafeDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeAccounts != nil {
		toSerialize["includeAccounts"] = o.IncludeAccounts
	}
	if o.UseCache != nil {
		toSerialize["useCache"] = o.UseCache
	}
	return json.Marshal(toSerialize)
}

type NullableGetSafeDetailsRequest struct {
	value *GetSafeDetailsRequest
	isSet bool
}

func (v NullableGetSafeDetailsRequest) Get() *GetSafeDetailsRequest {
	return v.value
}

func (v *NullableGetSafeDetailsRequest) Set(val *GetSafeDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSafeDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSafeDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSafeDetailsRequest(val *GetSafeDetailsRequest) *NullableGetSafeDetailsRequest {
	return &NullableGetSafeDetailsRequest{value: val, isSet: true}
}

func (v NullableGetSafeDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSafeDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


