/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetUsersGroupParams struct for GetUsersGroupParams
type GetUsersGroupParams struct {
	// Whether or not to return members for each User Group as part of the response. If not sent, the value will be False.
	IncludeMembers *bool `json:"includeMembers,omitempty"`
}

// NewGetUsersGroupParams instantiates a new GetUsersGroupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUsersGroupParams() *GetUsersGroupParams {
	this := GetUsersGroupParams{}
	return &this
}

// NewGetUsersGroupParamsWithDefaults instantiates a new GetUsersGroupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUsersGroupParamsWithDefaults() *GetUsersGroupParams {
	this := GetUsersGroupParams{}
	return &this
}

// GetIncludeMembers returns the IncludeMembers field value if set, zero value otherwise.
func (o *GetUsersGroupParams) GetIncludeMembers() bool {
	if o == nil || o.IncludeMembers == nil {
		var ret bool
		return ret
	}
	return *o.IncludeMembers
}

// GetIncludeMembersOk returns a tuple with the IncludeMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsersGroupParams) GetIncludeMembersOk() (*bool, bool) {
	if o == nil || o.IncludeMembers == nil {
		return nil, false
	}
	return o.IncludeMembers, true
}

// HasIncludeMembers returns a boolean if a field has been set.
func (o *GetUsersGroupParams) HasIncludeMembers() bool {
	if o != nil && o.IncludeMembers != nil {
		return true
	}

	return false
}

// SetIncludeMembers gets a reference to the given bool and assigns it to the IncludeMembers field.
func (o *GetUsersGroupParams) SetIncludeMembers(v bool) {
	o.IncludeMembers = &v
}

func (o GetUsersGroupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeMembers != nil {
		toSerialize["includeMembers"] = o.IncludeMembers
	}
	return json.Marshal(toSerialize)
}

type NullableGetUsersGroupParams struct {
	value *GetUsersGroupParams
	isSet bool
}

func (v NullableGetUsersGroupParams) Get() *GetUsersGroupParams {
	return v.value
}

func (v *NullableGetUsersGroupParams) Set(val *GetUsersGroupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUsersGroupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUsersGroupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUsersGroupParams(val *GetUsersGroupParams) *NullableGetUsersGroupParams {
	return &NullableGetUsersGroupParams{value: val, isSet: true}
}

func (v NullableGetUsersGroupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUsersGroupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


