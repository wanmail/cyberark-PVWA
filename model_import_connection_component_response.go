/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImportConnectionComponentResponse struct for ImportConnectionComponentResponse
type ImportConnectionComponentResponse struct {
	ConnectionComponentID *string `json:"ConnectionComponentID,omitempty"`
}

// NewImportConnectionComponentResponse instantiates a new ImportConnectionComponentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportConnectionComponentResponse() *ImportConnectionComponentResponse {
	this := ImportConnectionComponentResponse{}
	return &this
}

// NewImportConnectionComponentResponseWithDefaults instantiates a new ImportConnectionComponentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportConnectionComponentResponseWithDefaults() *ImportConnectionComponentResponse {
	this := ImportConnectionComponentResponse{}
	return &this
}

// GetConnectionComponentID returns the ConnectionComponentID field value if set, zero value otherwise.
func (o *ImportConnectionComponentResponse) GetConnectionComponentID() string {
	if o == nil || o.ConnectionComponentID == nil {
		var ret string
		return ret
	}
	return *o.ConnectionComponentID
}

// GetConnectionComponentIDOk returns a tuple with the ConnectionComponentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportConnectionComponentResponse) GetConnectionComponentIDOk() (*string, bool) {
	if o == nil || o.ConnectionComponentID == nil {
		return nil, false
	}
	return o.ConnectionComponentID, true
}

// HasConnectionComponentID returns a boolean if a field has been set.
func (o *ImportConnectionComponentResponse) HasConnectionComponentID() bool {
	if o != nil && o.ConnectionComponentID != nil {
		return true
	}

	return false
}

// SetConnectionComponentID gets a reference to the given string and assigns it to the ConnectionComponentID field.
func (o *ImportConnectionComponentResponse) SetConnectionComponentID(v string) {
	o.ConnectionComponentID = &v
}

func (o ImportConnectionComponentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionComponentID != nil {
		toSerialize["ConnectionComponentID"] = o.ConnectionComponentID
	}
	return json.Marshal(toSerialize)
}

type NullableImportConnectionComponentResponse struct {
	value *ImportConnectionComponentResponse
	isSet bool
}

func (v NullableImportConnectionComponentResponse) Get() *ImportConnectionComponentResponse {
	return v.value
}

func (v *NullableImportConnectionComponentResponse) Set(val *ImportConnectionComponentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImportConnectionComponentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImportConnectionComponentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportConnectionComponentResponse(val *ImportConnectionComponentResponse) *NullableImportConnectionComponentResponse {
	return &NullableImportConnectionComponentResponse{value: val, isSet: true}
}

func (v NullableImportConnectionComponentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportConnectionComponentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


