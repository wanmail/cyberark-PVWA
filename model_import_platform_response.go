/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImportPlatformResponse struct for ImportPlatformResponse
type ImportPlatformResponse struct {
	PlatformID *string `json:"PlatformID,omitempty"`
}

// NewImportPlatformResponse instantiates a new ImportPlatformResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportPlatformResponse() *ImportPlatformResponse {
	this := ImportPlatformResponse{}
	return &this
}

// NewImportPlatformResponseWithDefaults instantiates a new ImportPlatformResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportPlatformResponseWithDefaults() *ImportPlatformResponse {
	this := ImportPlatformResponse{}
	return &this
}

// GetPlatformID returns the PlatformID field value if set, zero value otherwise.
func (o *ImportPlatformResponse) GetPlatformID() string {
	if o == nil || o.PlatformID == nil {
		var ret string
		return ret
	}
	return *o.PlatformID
}

// GetPlatformIDOk returns a tuple with the PlatformID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportPlatformResponse) GetPlatformIDOk() (*string, bool) {
	if o == nil || o.PlatformID == nil {
		return nil, false
	}
	return o.PlatformID, true
}

// HasPlatformID returns a boolean if a field has been set.
func (o *ImportPlatformResponse) HasPlatformID() bool {
	if o != nil && o.PlatformID != nil {
		return true
	}

	return false
}

// SetPlatformID gets a reference to the given string and assigns it to the PlatformID field.
func (o *ImportPlatformResponse) SetPlatformID(v string) {
	o.PlatformID = &v
}

func (o ImportPlatformResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PlatformID != nil {
		toSerialize["PlatformID"] = o.PlatformID
	}
	return json.Marshal(toSerialize)
}

type NullableImportPlatformResponse struct {
	value *ImportPlatformResponse
	isSet bool
}

func (v NullableImportPlatformResponse) Get() *ImportPlatformResponse {
	return v.value
}

func (v *NullableImportPlatformResponse) Set(val *ImportPlatformResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImportPlatformResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImportPlatformResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportPlatformResponse(val *ImportPlatformResponse) *NullableImportPlatformResponse {
	return &NullableImportPlatformResponse{value: val, isSet: true}
}

func (v NullableImportPlatformResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportPlatformResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


