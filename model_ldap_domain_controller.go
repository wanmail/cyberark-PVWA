/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LDAPDomainController struct for LDAPDomainController
type LDAPDomainController struct {
	// The name of the server machine where the external directory is installed.
	Name string `json:"Name"`
	// The port number through which the external directory can be accessed.
	Port *int32 `json:"Port,omitempty"`
	// Whether or not to connect to the external directory with SSL.
	SSLConnect *bool `json:"SSLConnect,omitempty"`
}

// NewLDAPDomainController instantiates a new LDAPDomainController object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLDAPDomainController(name string) *LDAPDomainController {
	this := LDAPDomainController{}
	this.Name = name
	return &this
}

// NewLDAPDomainControllerWithDefaults instantiates a new LDAPDomainController object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPDomainControllerWithDefaults() *LDAPDomainController {
	this := LDAPDomainController{}
	return &this
}

// GetName returns the Name field value
func (o *LDAPDomainController) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LDAPDomainController) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LDAPDomainController) SetName(v string) {
	o.Name = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *LDAPDomainController) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LDAPDomainController) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *LDAPDomainController) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *LDAPDomainController) SetPort(v int32) {
	o.Port = &v
}

// GetSSLConnect returns the SSLConnect field value if set, zero value otherwise.
func (o *LDAPDomainController) GetSSLConnect() bool {
	if o == nil || o.SSLConnect == nil {
		var ret bool
		return ret
	}
	return *o.SSLConnect
}

// GetSSLConnectOk returns a tuple with the SSLConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LDAPDomainController) GetSSLConnectOk() (*bool, bool) {
	if o == nil || o.SSLConnect == nil {
		return nil, false
	}
	return o.SSLConnect, true
}

// HasSSLConnect returns a boolean if a field has been set.
func (o *LDAPDomainController) HasSSLConnect() bool {
	if o != nil && o.SSLConnect != nil {
		return true
	}

	return false
}

// SetSSLConnect gets a reference to the given bool and assigns it to the SSLConnect field.
func (o *LDAPDomainController) SetSSLConnect(v bool) {
	o.SSLConnect = &v
}

func (o LDAPDomainController) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Name"] = o.Name
	}
	if o.Port != nil {
		toSerialize["Port"] = o.Port
	}
	if o.SSLConnect != nil {
		toSerialize["SSLConnect"] = o.SSLConnect
	}
	return json.Marshal(toSerialize)
}

type NullableLDAPDomainController struct {
	value *LDAPDomainController
	isSet bool
}

func (v NullableLDAPDomainController) Get() *LDAPDomainController {
	return v.value
}

func (v *NullableLDAPDomainController) Set(val *LDAPDomainController) {
	v.value = val
	v.isSet = true
}

func (v NullableLDAPDomainController) IsSet() bool {
	return v.isSet
}

func (v *NullableLDAPDomainController) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLDAPDomainController(val *LDAPDomainController) *NullableLDAPDomainController {
	return &NullableLDAPDomainController{value: val, isSet: true}
}

func (v NullableLDAPDomainController) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLDAPDomainController) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


