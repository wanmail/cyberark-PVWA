/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LogoffData struct for LogoffData
type LogoffData struct {
	LogoffUrl *string `json:"LogoffUrl,omitempty"`
}

// NewLogoffData instantiates a new LogoffData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogoffData() *LogoffData {
	this := LogoffData{}
	return &this
}

// NewLogoffDataWithDefaults instantiates a new LogoffData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogoffDataWithDefaults() *LogoffData {
	this := LogoffData{}
	return &this
}

// GetLogoffUrl returns the LogoffUrl field value if set, zero value otherwise.
func (o *LogoffData) GetLogoffUrl() string {
	if o == nil || o.LogoffUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoffUrl
}

// GetLogoffUrlOk returns a tuple with the LogoffUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogoffData) GetLogoffUrlOk() (*string, bool) {
	if o == nil || o.LogoffUrl == nil {
		return nil, false
	}
	return o.LogoffUrl, true
}

// HasLogoffUrl returns a boolean if a field has been set.
func (o *LogoffData) HasLogoffUrl() bool {
	if o != nil && o.LogoffUrl != nil {
		return true
	}

	return false
}

// SetLogoffUrl gets a reference to the given string and assigns it to the LogoffUrl field.
func (o *LogoffData) SetLogoffUrl(v string) {
	o.LogoffUrl = &v
}

func (o LogoffData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogoffUrl != nil {
		toSerialize["LogoffUrl"] = o.LogoffUrl
	}
	return json.Marshal(toSerialize)
}

type NullableLogoffData struct {
	value *LogoffData
	isSet bool
}

func (v NullableLogoffData) Get() *LogoffData {
	return v.value
}

func (v *NullableLogoffData) Set(val *LogoffData) {
	v.value = val
	v.isSet = true
}

func (v NullableLogoffData) IsSet() bool {
	return v.isSet
}

func (v *NullableLogoffData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogoffData(val *LogoffData) *NullableLogoffData {
	return &NullableLogoffData{value: val, isSet: true}
}

func (v NullableLogoffData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogoffData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


