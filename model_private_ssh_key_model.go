/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PrivateSSHKeyModel struct for PrivateSSHKeyModel
type PrivateSSHKeyModel struct {
	// The key exported format
	Format *int32 `json:"format,omitempty"`
	// The private key
	PrivateKey *string `json:"privateKey,omitempty"`
	// Key algorithm
	KeyAlg *int32 `json:"keyAlg,omitempty"`
}

// NewPrivateSSHKeyModel instantiates a new PrivateSSHKeyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSSHKeyModel() *PrivateSSHKeyModel {
	this := PrivateSSHKeyModel{}
	return &this
}

// NewPrivateSSHKeyModelWithDefaults instantiates a new PrivateSSHKeyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSSHKeyModelWithDefaults() *PrivateSSHKeyModel {
	this := PrivateSSHKeyModel{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PrivateSSHKeyModel) GetFormat() int32 {
	if o == nil || o.Format == nil {
		var ret int32
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSSHKeyModel) GetFormatOk() (*int32, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PrivateSSHKeyModel) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given int32 and assigns it to the Format field.
func (o *PrivateSSHKeyModel) SetFormat(v int32) {
	o.Format = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *PrivateSSHKeyModel) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSSHKeyModel) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *PrivateSSHKeyModel) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *PrivateSSHKeyModel) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetKeyAlg returns the KeyAlg field value if set, zero value otherwise.
func (o *PrivateSSHKeyModel) GetKeyAlg() int32 {
	if o == nil || o.KeyAlg == nil {
		var ret int32
		return ret
	}
	return *o.KeyAlg
}

// GetKeyAlgOk returns a tuple with the KeyAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSSHKeyModel) GetKeyAlgOk() (*int32, bool) {
	if o == nil || o.KeyAlg == nil {
		return nil, false
	}
	return o.KeyAlg, true
}

// HasKeyAlg returns a boolean if a field has been set.
func (o *PrivateSSHKeyModel) HasKeyAlg() bool {
	if o != nil && o.KeyAlg != nil {
		return true
	}

	return false
}

// SetKeyAlg gets a reference to the given int32 and assigns it to the KeyAlg field.
func (o *PrivateSSHKeyModel) SetKeyAlg(v int32) {
	o.KeyAlg = &v
}

func (o PrivateSSHKeyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.PrivateKey != nil {
		toSerialize["privateKey"] = o.PrivateKey
	}
	if o.KeyAlg != nil {
		toSerialize["keyAlg"] = o.KeyAlg
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateSSHKeyModel struct {
	value *PrivateSSHKeyModel
	isSet bool
}

func (v NullablePrivateSSHKeyModel) Get() *PrivateSSHKeyModel {
	return v.value
}

func (v *NullablePrivateSSHKeyModel) Set(val *PrivateSSHKeyModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSSHKeyModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSSHKeyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSSHKeyModel(val *PrivateSSHKeyModel) *NullablePrivateSSHKeyModel {
	return &NullablePrivateSSHKeyModel{value: val, isSet: true}
}

func (v NullablePrivateSSHKeyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSSHKeyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


