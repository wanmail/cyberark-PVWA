/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PSMConnector struct for PSMConnector
type PSMConnector struct {
	// PSM connector Id.
	ID *string `json:"ID,omitempty"`
	// PSM connector display name.
	DisplayName *string `json:"DisplayName,omitempty"`
}

// NewPSMConnector instantiates a new PSMConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPSMConnector() *PSMConnector {
	this := PSMConnector{}
	return &this
}

// NewPSMConnectorWithDefaults instantiates a new PSMConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPSMConnectorWithDefaults() *PSMConnector {
	this := PSMConnector{}
	return &this
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *PSMConnector) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PSMConnector) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *PSMConnector) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *PSMConnector) SetID(v string) {
	o.ID = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PSMConnector) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PSMConnector) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PSMConnector) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PSMConnector) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o PSMConnector) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.DisplayName != nil {
		toSerialize["DisplayName"] = o.DisplayName
	}
	return json.Marshal(toSerialize)
}

type NullablePSMConnector struct {
	value *PSMConnector
	isSet bool
}

func (v NullablePSMConnector) Get() *PSMConnector {
	return v.value
}

func (v *NullablePSMConnector) Set(val *PSMConnector) {
	v.value = val
	v.isSet = true
}

func (v NullablePSMConnector) IsSet() bool {
	return v.isSet
}

func (v *NullablePSMConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePSMConnector(val *PSMConnector) *NullablePSMConnector {
	return &NullablePSMConnector{value: val, isSet: true}
}

func (v NullablePSMConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePSMConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


