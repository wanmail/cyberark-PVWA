/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Request struct for Request
type Request struct {
	RequestID *string `json:"RequestID,omitempty"`
	SafeName *string `json:"SafeName,omitempty"`
	RequestorUserName *string `json:"RequestorUserName,omitempty"`
	RequestorReason *string `json:"RequestorReason,omitempty"`
	UserReason *string `json:"UserReason,omitempty"`
	CreationDate *int64 `json:"CreationDate,omitempty"`
	Operation *string `json:"Operation,omitempty"`
	ExpirationDate *int64 `json:"ExpirationDate,omitempty"`
	OperationType *int32 `json:"OperationType,omitempty"`
	AccessType *string `json:"AccessType,omitempty"`
	ConfirmationsLeft *int64 `json:"ConfirmationsLeft,omitempty"`
	AccessFrom *int64 `json:"AccessFrom,omitempty"`
	AccessTo *int64 `json:"AccessTo,omitempty"`
	Status *int32 `json:"Status,omitempty"`
	StatusTitle *string `json:"StatusTitle,omitempty"`
	InvalidRequestReason *int32 `json:"InvalidRequestReason,omitempty"`
	CurrentConfirmationLevel *int32 `json:"CurrentConfirmationLevel,omitempty"`
	RequiredConfirmersCountLevel2 *int32 `json:"RequiredConfirmersCountLevel2,omitempty"`
	TicketingSystemProperties *TicketingSystem `json:"TicketingSystemProperties,omitempty"`
	AdditionalInfo *map[string]string `json:"AdditionalInfo,omitempty"`
	AccountDetails *Account `json:"AccountDetails,omitempty"`
	Confirmers []ConfirmerStatus `json:"Confirmers,omitempty"`
}

// InitRequest instantiates a new Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
// 
// changed from NewRequest to InitRequest manually 
// because of model_new_request.go(18, 6): other declaration of NewRequest
func InitRequest() *Request {
	this := Request{}
	return &this
}

// NewRequestWithDefaults instantiates a new Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestWithDefaults() *Request {
	this := Request{}
	return &this
}

// GetRequestID returns the RequestID field value if set, zero value otherwise.
func (o *Request) GetRequestID() string {
	if o == nil || o.RequestID == nil {
		var ret string
		return ret
	}
	return *o.RequestID
}

// GetRequestIDOk returns a tuple with the RequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetRequestIDOk() (*string, bool) {
	if o == nil || o.RequestID == nil {
		return nil, false
	}
	return o.RequestID, true
}

// HasRequestID returns a boolean if a field has been set.
func (o *Request) HasRequestID() bool {
	if o != nil && o.RequestID != nil {
		return true
	}

	return false
}

// SetRequestID gets a reference to the given string and assigns it to the RequestID field.
func (o *Request) SetRequestID(v string) {
	o.RequestID = &v
}

// GetSafeName returns the SafeName field value if set, zero value otherwise.
func (o *Request) GetSafeName() string {
	if o == nil || o.SafeName == nil {
		var ret string
		return ret
	}
	return *o.SafeName
}

// GetSafeNameOk returns a tuple with the SafeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetSafeNameOk() (*string, bool) {
	if o == nil || o.SafeName == nil {
		return nil, false
	}
	return o.SafeName, true
}

// HasSafeName returns a boolean if a field has been set.
func (o *Request) HasSafeName() bool {
	if o != nil && o.SafeName != nil {
		return true
	}

	return false
}

// SetSafeName gets a reference to the given string and assigns it to the SafeName field.
func (o *Request) SetSafeName(v string) {
	o.SafeName = &v
}

// GetRequestorUserName returns the RequestorUserName field value if set, zero value otherwise.
func (o *Request) GetRequestorUserName() string {
	if o == nil || o.RequestorUserName == nil {
		var ret string
		return ret
	}
	return *o.RequestorUserName
}

// GetRequestorUserNameOk returns a tuple with the RequestorUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetRequestorUserNameOk() (*string, bool) {
	if o == nil || o.RequestorUserName == nil {
		return nil, false
	}
	return o.RequestorUserName, true
}

// HasRequestorUserName returns a boolean if a field has been set.
func (o *Request) HasRequestorUserName() bool {
	if o != nil && o.RequestorUserName != nil {
		return true
	}

	return false
}

// SetRequestorUserName gets a reference to the given string and assigns it to the RequestorUserName field.
func (o *Request) SetRequestorUserName(v string) {
	o.RequestorUserName = &v
}

// GetRequestorReason returns the RequestorReason field value if set, zero value otherwise.
func (o *Request) GetRequestorReason() string {
	if o == nil || o.RequestorReason == nil {
		var ret string
		return ret
	}
	return *o.RequestorReason
}

// GetRequestorReasonOk returns a tuple with the RequestorReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetRequestorReasonOk() (*string, bool) {
	if o == nil || o.RequestorReason == nil {
		return nil, false
	}
	return o.RequestorReason, true
}

// HasRequestorReason returns a boolean if a field has been set.
func (o *Request) HasRequestorReason() bool {
	if o != nil && o.RequestorReason != nil {
		return true
	}

	return false
}

// SetRequestorReason gets a reference to the given string and assigns it to the RequestorReason field.
func (o *Request) SetRequestorReason(v string) {
	o.RequestorReason = &v
}

// GetUserReason returns the UserReason field value if set, zero value otherwise.
func (o *Request) GetUserReason() string {
	if o == nil || o.UserReason == nil {
		var ret string
		return ret
	}
	return *o.UserReason
}

// GetUserReasonOk returns a tuple with the UserReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetUserReasonOk() (*string, bool) {
	if o == nil || o.UserReason == nil {
		return nil, false
	}
	return o.UserReason, true
}

// HasUserReason returns a boolean if a field has been set.
func (o *Request) HasUserReason() bool {
	if o != nil && o.UserReason != nil {
		return true
	}

	return false
}

// SetUserReason gets a reference to the given string and assigns it to the UserReason field.
func (o *Request) SetUserReason(v string) {
	o.UserReason = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *Request) GetCreationDate() int64 {
	if o == nil || o.CreationDate == nil {
		var ret int64
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetCreationDateOk() (*int64, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *Request) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int64 and assigns it to the CreationDate field.
func (o *Request) SetCreationDate(v int64) {
	o.CreationDate = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *Request) GetOperation() string {
	if o == nil || o.Operation == nil {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetOperationOk() (*string, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *Request) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *Request) SetOperation(v string) {
	o.Operation = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *Request) GetExpirationDate() int64 {
	if o == nil || o.ExpirationDate == nil {
		var ret int64
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetExpirationDateOk() (*int64, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *Request) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given int64 and assigns it to the ExpirationDate field.
func (o *Request) SetExpirationDate(v int64) {
	o.ExpirationDate = &v
}

// GetOperationType returns the OperationType field value if set, zero value otherwise.
func (o *Request) GetOperationType() int32 {
	if o == nil || o.OperationType == nil {
		var ret int32
		return ret
	}
	return *o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetOperationTypeOk() (*int32, bool) {
	if o == nil || o.OperationType == nil {
		return nil, false
	}
	return o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *Request) HasOperationType() bool {
	if o != nil && o.OperationType != nil {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given int32 and assigns it to the OperationType field.
func (o *Request) SetOperationType(v int32) {
	o.OperationType = &v
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *Request) GetAccessType() string {
	if o == nil || o.AccessType == nil {
		var ret string
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetAccessTypeOk() (*string, bool) {
	if o == nil || o.AccessType == nil {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *Request) HasAccessType() bool {
	if o != nil && o.AccessType != nil {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given string and assigns it to the AccessType field.
func (o *Request) SetAccessType(v string) {
	o.AccessType = &v
}

// GetConfirmationsLeft returns the ConfirmationsLeft field value if set, zero value otherwise.
func (o *Request) GetConfirmationsLeft() int64 {
	if o == nil || o.ConfirmationsLeft == nil {
		var ret int64
		return ret
	}
	return *o.ConfirmationsLeft
}

// GetConfirmationsLeftOk returns a tuple with the ConfirmationsLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetConfirmationsLeftOk() (*int64, bool) {
	if o == nil || o.ConfirmationsLeft == nil {
		return nil, false
	}
	return o.ConfirmationsLeft, true
}

// HasConfirmationsLeft returns a boolean if a field has been set.
func (o *Request) HasConfirmationsLeft() bool {
	if o != nil && o.ConfirmationsLeft != nil {
		return true
	}

	return false
}

// SetConfirmationsLeft gets a reference to the given int64 and assigns it to the ConfirmationsLeft field.
func (o *Request) SetConfirmationsLeft(v int64) {
	o.ConfirmationsLeft = &v
}

// GetAccessFrom returns the AccessFrom field value if set, zero value otherwise.
func (o *Request) GetAccessFrom() int64 {
	if o == nil || o.AccessFrom == nil {
		var ret int64
		return ret
	}
	return *o.AccessFrom
}

// GetAccessFromOk returns a tuple with the AccessFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetAccessFromOk() (*int64, bool) {
	if o == nil || o.AccessFrom == nil {
		return nil, false
	}
	return o.AccessFrom, true
}

// HasAccessFrom returns a boolean if a field has been set.
func (o *Request) HasAccessFrom() bool {
	if o != nil && o.AccessFrom != nil {
		return true
	}

	return false
}

// SetAccessFrom gets a reference to the given int64 and assigns it to the AccessFrom field.
func (o *Request) SetAccessFrom(v int64) {
	o.AccessFrom = &v
}

// GetAccessTo returns the AccessTo field value if set, zero value otherwise.
func (o *Request) GetAccessTo() int64 {
	if o == nil || o.AccessTo == nil {
		var ret int64
		return ret
	}
	return *o.AccessTo
}

// GetAccessToOk returns a tuple with the AccessTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetAccessToOk() (*int64, bool) {
	if o == nil || o.AccessTo == nil {
		return nil, false
	}
	return o.AccessTo, true
}

// HasAccessTo returns a boolean if a field has been set.
func (o *Request) HasAccessTo() bool {
	if o != nil && o.AccessTo != nil {
		return true
	}

	return false
}

// SetAccessTo gets a reference to the given int64 and assigns it to the AccessTo field.
func (o *Request) SetAccessTo(v int64) {
	o.AccessTo = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Request) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Request) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *Request) SetStatus(v int32) {
	o.Status = &v
}

// GetStatusTitle returns the StatusTitle field value if set, zero value otherwise.
func (o *Request) GetStatusTitle() string {
	if o == nil || o.StatusTitle == nil {
		var ret string
		return ret
	}
	return *o.StatusTitle
}

// GetStatusTitleOk returns a tuple with the StatusTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetStatusTitleOk() (*string, bool) {
	if o == nil || o.StatusTitle == nil {
		return nil, false
	}
	return o.StatusTitle, true
}

// HasStatusTitle returns a boolean if a field has been set.
func (o *Request) HasStatusTitle() bool {
	if o != nil && o.StatusTitle != nil {
		return true
	}

	return false
}

// SetStatusTitle gets a reference to the given string and assigns it to the StatusTitle field.
func (o *Request) SetStatusTitle(v string) {
	o.StatusTitle = &v
}

// GetInvalidRequestReason returns the InvalidRequestReason field value if set, zero value otherwise.
func (o *Request) GetInvalidRequestReason() int32 {
	if o == nil || o.InvalidRequestReason == nil {
		var ret int32
		return ret
	}
	return *o.InvalidRequestReason
}

// GetInvalidRequestReasonOk returns a tuple with the InvalidRequestReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetInvalidRequestReasonOk() (*int32, bool) {
	if o == nil || o.InvalidRequestReason == nil {
		return nil, false
	}
	return o.InvalidRequestReason, true
}

// HasInvalidRequestReason returns a boolean if a field has been set.
func (o *Request) HasInvalidRequestReason() bool {
	if o != nil && o.InvalidRequestReason != nil {
		return true
	}

	return false
}

// SetInvalidRequestReason gets a reference to the given int32 and assigns it to the InvalidRequestReason field.
func (o *Request) SetInvalidRequestReason(v int32) {
	o.InvalidRequestReason = &v
}

// GetCurrentConfirmationLevel returns the CurrentConfirmationLevel field value if set, zero value otherwise.
func (o *Request) GetCurrentConfirmationLevel() int32 {
	if o == nil || o.CurrentConfirmationLevel == nil {
		var ret int32
		return ret
	}
	return *o.CurrentConfirmationLevel
}

// GetCurrentConfirmationLevelOk returns a tuple with the CurrentConfirmationLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetCurrentConfirmationLevelOk() (*int32, bool) {
	if o == nil || o.CurrentConfirmationLevel == nil {
		return nil, false
	}
	return o.CurrentConfirmationLevel, true
}

// HasCurrentConfirmationLevel returns a boolean if a field has been set.
func (o *Request) HasCurrentConfirmationLevel() bool {
	if o != nil && o.CurrentConfirmationLevel != nil {
		return true
	}

	return false
}

// SetCurrentConfirmationLevel gets a reference to the given int32 and assigns it to the CurrentConfirmationLevel field.
func (o *Request) SetCurrentConfirmationLevel(v int32) {
	o.CurrentConfirmationLevel = &v
}

// GetRequiredConfirmersCountLevel2 returns the RequiredConfirmersCountLevel2 field value if set, zero value otherwise.
func (o *Request) GetRequiredConfirmersCountLevel2() int32 {
	if o == nil || o.RequiredConfirmersCountLevel2 == nil {
		var ret int32
		return ret
	}
	return *o.RequiredConfirmersCountLevel2
}

// GetRequiredConfirmersCountLevel2Ok returns a tuple with the RequiredConfirmersCountLevel2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetRequiredConfirmersCountLevel2Ok() (*int32, bool) {
	if o == nil || o.RequiredConfirmersCountLevel2 == nil {
		return nil, false
	}
	return o.RequiredConfirmersCountLevel2, true
}

// HasRequiredConfirmersCountLevel2 returns a boolean if a field has been set.
func (o *Request) HasRequiredConfirmersCountLevel2() bool {
	if o != nil && o.RequiredConfirmersCountLevel2 != nil {
		return true
	}

	return false
}

// SetRequiredConfirmersCountLevel2 gets a reference to the given int32 and assigns it to the RequiredConfirmersCountLevel2 field.
func (o *Request) SetRequiredConfirmersCountLevel2(v int32) {
	o.RequiredConfirmersCountLevel2 = &v
}

// GetTicketingSystemProperties returns the TicketingSystemProperties field value if set, zero value otherwise.
func (o *Request) GetTicketingSystemProperties() TicketingSystem {
	if o == nil || o.TicketingSystemProperties == nil {
		var ret TicketingSystem
		return ret
	}
	return *o.TicketingSystemProperties
}

// GetTicketingSystemPropertiesOk returns a tuple with the TicketingSystemProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetTicketingSystemPropertiesOk() (*TicketingSystem, bool) {
	if o == nil || o.TicketingSystemProperties == nil {
		return nil, false
	}
	return o.TicketingSystemProperties, true
}

// HasTicketingSystemProperties returns a boolean if a field has been set.
func (o *Request) HasTicketingSystemProperties() bool {
	if o != nil && o.TicketingSystemProperties != nil {
		return true
	}

	return false
}

// SetTicketingSystemProperties gets a reference to the given TicketingSystem and assigns it to the TicketingSystemProperties field.
func (o *Request) SetTicketingSystemProperties(v TicketingSystem) {
	o.TicketingSystemProperties = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *Request) GetAdditionalInfo() map[string]string {
	if o == nil || o.AdditionalInfo == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetAdditionalInfoOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalInfo == nil {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *Request) HasAdditionalInfo() bool {
	if o != nil && o.AdditionalInfo != nil {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given map[string]string and assigns it to the AdditionalInfo field.
func (o *Request) SetAdditionalInfo(v map[string]string) {
	o.AdditionalInfo = &v
}

// GetAccountDetails returns the AccountDetails field value if set, zero value otherwise.
func (o *Request) GetAccountDetails() Account {
	if o == nil || o.AccountDetails == nil {
		var ret Account
		return ret
	}
	return *o.AccountDetails
}

// GetAccountDetailsOk returns a tuple with the AccountDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetAccountDetailsOk() (*Account, bool) {
	if o == nil || o.AccountDetails == nil {
		return nil, false
	}
	return o.AccountDetails, true
}

// HasAccountDetails returns a boolean if a field has been set.
func (o *Request) HasAccountDetails() bool {
	if o != nil && o.AccountDetails != nil {
		return true
	}

	return false
}

// SetAccountDetails gets a reference to the given Account and assigns it to the AccountDetails field.
func (o *Request) SetAccountDetails(v Account) {
	o.AccountDetails = &v
}

// GetConfirmers returns the Confirmers field value if set, zero value otherwise.
func (o *Request) GetConfirmers() []ConfirmerStatus {
	if o == nil || o.Confirmers == nil {
		var ret []ConfirmerStatus
		return ret
	}
	return o.Confirmers
}

// GetConfirmersOk returns a tuple with the Confirmers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetConfirmersOk() ([]ConfirmerStatus, bool) {
	if o == nil || o.Confirmers == nil {
		return nil, false
	}
	return o.Confirmers, true
}

// HasConfirmers returns a boolean if a field has been set.
func (o *Request) HasConfirmers() bool {
	if o != nil && o.Confirmers != nil {
		return true
	}

	return false
}

// SetConfirmers gets a reference to the given []ConfirmerStatus and assigns it to the Confirmers field.
func (o *Request) SetConfirmers(v []ConfirmerStatus) {
	o.Confirmers = v
}

func (o Request) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestID != nil {
		toSerialize["RequestID"] = o.RequestID
	}
	if o.SafeName != nil {
		toSerialize["SafeName"] = o.SafeName
	}
	if o.RequestorUserName != nil {
		toSerialize["RequestorUserName"] = o.RequestorUserName
	}
	if o.RequestorReason != nil {
		toSerialize["RequestorReason"] = o.RequestorReason
	}
	if o.UserReason != nil {
		toSerialize["UserReason"] = o.UserReason
	}
	if o.CreationDate != nil {
		toSerialize["CreationDate"] = o.CreationDate
	}
	if o.Operation != nil {
		toSerialize["Operation"] = o.Operation
	}
	if o.ExpirationDate != nil {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	if o.OperationType != nil {
		toSerialize["OperationType"] = o.OperationType
	}
	if o.AccessType != nil {
		toSerialize["AccessType"] = o.AccessType
	}
	if o.ConfirmationsLeft != nil {
		toSerialize["ConfirmationsLeft"] = o.ConfirmationsLeft
	}
	if o.AccessFrom != nil {
		toSerialize["AccessFrom"] = o.AccessFrom
	}
	if o.AccessTo != nil {
		toSerialize["AccessTo"] = o.AccessTo
	}
	if o.Status != nil {
		toSerialize["Status"] = o.Status
	}
	if o.StatusTitle != nil {
		toSerialize["StatusTitle"] = o.StatusTitle
	}
	if o.InvalidRequestReason != nil {
		toSerialize["InvalidRequestReason"] = o.InvalidRequestReason
	}
	if o.CurrentConfirmationLevel != nil {
		toSerialize["CurrentConfirmationLevel"] = o.CurrentConfirmationLevel
	}
	if o.RequiredConfirmersCountLevel2 != nil {
		toSerialize["RequiredConfirmersCountLevel2"] = o.RequiredConfirmersCountLevel2
	}
	if o.TicketingSystemProperties != nil {
		toSerialize["TicketingSystemProperties"] = o.TicketingSystemProperties
	}
	if o.AdditionalInfo != nil {
		toSerialize["AdditionalInfo"] = o.AdditionalInfo
	}
	if o.AccountDetails != nil {
		toSerialize["AccountDetails"] = o.AccountDetails
	}
	if o.Confirmers != nil {
		toSerialize["Confirmers"] = o.Confirmers
	}
	return json.Marshal(toSerialize)
}

type NullableRequest struct {
	value *Request
	isSet bool
}

func (v NullableRequest) Get() *Request {
	return v.value
}

func (v *NullableRequest) Set(val *Request) {
	v.value = val
	v.isSet = true
}

func (v NullableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequest(val *Request) *NullableRequest {
	return &NullableRequest{value: val, isSet: true}
}

func (v NullableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


