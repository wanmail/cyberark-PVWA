/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RotationalGroupPlatform struct for RotationalGroupPlatform
type RotationalGroupPlatform struct {
	// Indicates whether a platform is active or inactive. An inactive platform cannot be assigned to accounts but will continue to manage accounts that were already assigned to it
	Active *bool `json:"Active,omitempty"`
	// Number of minutes between the rotation of roles between the accounts (Active/Inactive) and the beginning of the password change process for the current Inactive Account
	GracePeriod *int32 `json:"GracePeriod,omitempty"`
	// Unique ID of the platform in the system
	ID *int64 `json:"ID,omitempty"`
	// Unique textual representation of the platform in the system
	PlatformID *string `json:"PlatformID,omitempty"`
	// Display name of the platform
	Name *string `json:"Name,omitempty"`
}

// NewRotationalGroupPlatform instantiates a new RotationalGroupPlatform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRotationalGroupPlatform() *RotationalGroupPlatform {
	this := RotationalGroupPlatform{}
	return &this
}

// NewRotationalGroupPlatformWithDefaults instantiates a new RotationalGroupPlatform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRotationalGroupPlatformWithDefaults() *RotationalGroupPlatform {
	this := RotationalGroupPlatform{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *RotationalGroupPlatform) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationalGroupPlatform) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *RotationalGroupPlatform) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *RotationalGroupPlatform) SetActive(v bool) {
	o.Active = &v
}

// GetGracePeriod returns the GracePeriod field value if set, zero value otherwise.
func (o *RotationalGroupPlatform) GetGracePeriod() int32 {
	if o == nil || o.GracePeriod == nil {
		var ret int32
		return ret
	}
	return *o.GracePeriod
}

// GetGracePeriodOk returns a tuple with the GracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationalGroupPlatform) GetGracePeriodOk() (*int32, bool) {
	if o == nil || o.GracePeriod == nil {
		return nil, false
	}
	return o.GracePeriod, true
}

// HasGracePeriod returns a boolean if a field has been set.
func (o *RotationalGroupPlatform) HasGracePeriod() bool {
	if o != nil && o.GracePeriod != nil {
		return true
	}

	return false
}

// SetGracePeriod gets a reference to the given int32 and assigns it to the GracePeriod field.
func (o *RotationalGroupPlatform) SetGracePeriod(v int32) {
	o.GracePeriod = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *RotationalGroupPlatform) GetID() int64 {
	if o == nil || o.ID == nil {
		var ret int64
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationalGroupPlatform) GetIDOk() (*int64, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *RotationalGroupPlatform) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given int64 and assigns it to the ID field.
func (o *RotationalGroupPlatform) SetID(v int64) {
	o.ID = &v
}

// GetPlatformID returns the PlatformID field value if set, zero value otherwise.
func (o *RotationalGroupPlatform) GetPlatformID() string {
	if o == nil || o.PlatformID == nil {
		var ret string
		return ret
	}
	return *o.PlatformID
}

// GetPlatformIDOk returns a tuple with the PlatformID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationalGroupPlatform) GetPlatformIDOk() (*string, bool) {
	if o == nil || o.PlatformID == nil {
		return nil, false
	}
	return o.PlatformID, true
}

// HasPlatformID returns a boolean if a field has been set.
func (o *RotationalGroupPlatform) HasPlatformID() bool {
	if o != nil && o.PlatformID != nil {
		return true
	}

	return false
}

// SetPlatformID gets a reference to the given string and assigns it to the PlatformID field.
func (o *RotationalGroupPlatform) SetPlatformID(v string) {
	o.PlatformID = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RotationalGroupPlatform) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationalGroupPlatform) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RotationalGroupPlatform) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RotationalGroupPlatform) SetName(v string) {
	o.Name = &v
}

func (o RotationalGroupPlatform) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["Active"] = o.Active
	}
	if o.GracePeriod != nil {
		toSerialize["GracePeriod"] = o.GracePeriod
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.PlatformID != nil {
		toSerialize["PlatformID"] = o.PlatformID
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableRotationalGroupPlatform struct {
	value *RotationalGroupPlatform
	isSet bool
}

func (v NullableRotationalGroupPlatform) Get() *RotationalGroupPlatform {
	return v.value
}

func (v *NullableRotationalGroupPlatform) Set(val *RotationalGroupPlatform) {
	v.value = val
	v.isSet = true
}

func (v NullableRotationalGroupPlatform) IsSet() bool {
	return v.isSet
}

func (v *NullableRotationalGroupPlatform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRotationalGroupPlatform(val *RotationalGroupPlatform) *NullableRotationalGroupPlatform {
	return &NullableRotationalGroupPlatform{value: val, isSet: true}
}

func (v NullableRotationalGroupPlatform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRotationalGroupPlatform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


