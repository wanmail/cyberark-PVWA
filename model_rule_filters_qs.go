/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RuleFiltersQS struct for RuleFiltersQS
type RuleFiltersQS struct {
	// List of names
	Names []string `json:"Names,omitempty"`
}

// NewRuleFiltersQS instantiates a new RuleFiltersQS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleFiltersQS() *RuleFiltersQS {
	this := RuleFiltersQS{}
	return &this
}

// NewRuleFiltersQSWithDefaults instantiates a new RuleFiltersQS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleFiltersQSWithDefaults() *RuleFiltersQS {
	this := RuleFiltersQS{}
	return &this
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *RuleFiltersQS) GetNames() []string {
	if o == nil || o.Names == nil {
		var ret []string
		return ret
	}
	return o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleFiltersQS) GetNamesOk() ([]string, bool) {
	if o == nil || o.Names == nil {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *RuleFiltersQS) HasNames() bool {
	if o != nil && o.Names != nil {
		return true
	}

	return false
}

// SetNames gets a reference to the given []string and assigns it to the Names field.
func (o *RuleFiltersQS) SetNames(v []string) {
	o.Names = v
}

func (o RuleFiltersQS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Names != nil {
		toSerialize["Names"] = o.Names
	}
	return json.Marshal(toSerialize)
}

type NullableRuleFiltersQS struct {
	value *RuleFiltersQS
	isSet bool
}

func (v NullableRuleFiltersQS) Get() *RuleFiltersQS {
	return v.value
}

func (v *NullableRuleFiltersQS) Set(val *RuleFiltersQS) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleFiltersQS) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleFiltersQS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleFiltersQS(val *RuleFiltersQS) *NullableRuleFiltersQS {
	return &NullableRuleFiltersQS{value: val, isSet: true}
}

func (v NullableRuleFiltersQS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleFiltersQS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


