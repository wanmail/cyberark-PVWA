/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SortQS struct for SortQS
type SortQS struct {
	Sort []string `json:"Sort,omitempty"`
}

// NewSortQS instantiates a new SortQS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortQS() *SortQS {
	this := SortQS{}
	return &this
}

// NewSortQSWithDefaults instantiates a new SortQS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortQSWithDefaults() *SortQS {
	this := SortQS{}
	return &this
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *SortQS) GetSort() []string {
	if o == nil || o.Sort == nil {
		var ret []string
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortQS) GetSortOk() ([]string, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *SortQS) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given []string and assigns it to the Sort field.
func (o *SortQS) SetSort(v []string) {
	o.Sort = v
}

func (o SortQS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sort != nil {
		toSerialize["Sort"] = o.Sort
	}
	return json.Marshal(toSerialize)
}

type NullableSortQS struct {
	value *SortQS
	isSet bool
}

func (v NullableSortQS) Get() *SortQS {
	return v.value
}

func (v *NullableSortQS) Set(val *SortQS) {
	v.value = val
	v.isSet = true
}

func (v NullableSortQS) IsSet() bool {
	return v.isSet
}

func (v *NullableSortQS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortQS(val *SortQS) *NullableSortQS {
	return &NullableSortQS{value: val, isSet: true}
}

func (v NullableSortQS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortQS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


