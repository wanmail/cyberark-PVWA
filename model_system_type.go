/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SystemType struct for SystemType
type SystemType struct {
	// Number of platforms that match the filter in the system type
	PlatformsCount *int32 `json:"PlatformsCount,omitempty"`
	// Display name of the system types
	Name *string `json:"Name,omitempty"`
}

// NewSystemType instantiates a new SystemType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemType() *SystemType {
	this := SystemType{}
	return &this
}

// NewSystemTypeWithDefaults instantiates a new SystemType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemTypeWithDefaults() *SystemType {
	this := SystemType{}
	return &this
}

// GetPlatformsCount returns the PlatformsCount field value if set, zero value otherwise.
func (o *SystemType) GetPlatformsCount() int32 {
	if o == nil || o.PlatformsCount == nil {
		var ret int32
		return ret
	}
	return *o.PlatformsCount
}

// GetPlatformsCountOk returns a tuple with the PlatformsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemType) GetPlatformsCountOk() (*int32, bool) {
	if o == nil || o.PlatformsCount == nil {
		return nil, false
	}
	return o.PlatformsCount, true
}

// HasPlatformsCount returns a boolean if a field has been set.
func (o *SystemType) HasPlatformsCount() bool {
	if o != nil && o.PlatformsCount != nil {
		return true
	}

	return false
}

// SetPlatformsCount gets a reference to the given int32 and assigns it to the PlatformsCount field.
func (o *SystemType) SetPlatformsCount(v int32) {
	o.PlatformsCount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SystemType) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemType) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SystemType) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SystemType) SetName(v string) {
	o.Name = &v
}

func (o SystemType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PlatformsCount != nil {
		toSerialize["PlatformsCount"] = o.PlatformsCount
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableSystemType struct {
	value *SystemType
	isSet bool
}

func (v NullableSystemType) Get() *SystemType {
	return v.value
}

func (v *NullableSystemType) Set(val *SystemType) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemType) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemType(val *SystemType) *NullableSystemType {
	return &NullableSystemType{value: val, isSet: true}
}

func (v NullableSystemType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


