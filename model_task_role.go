/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TaskRole struct for TaskRole
type TaskRole struct {
	// Indicates whether the action will be initiated periodically.
	PerformAutomatic *bool `json:"PerformAutomatic,omitempty"`
	// The number of days between each periodic action.
	RequirePasswordEveryXDays *int32 `json:"RequirePasswordEveryXDays,omitempty"`
	// Indicates whether the action will be performed after account are added.
	AutoOnAdd *bool `json:"AutoOnAdd,omitempty"`
	// Indicates whether the action will be performed after account are added.
	IsRequirePasswordEveryXDaysAnException *bool `json:"IsRequirePasswordEveryXDaysAnException,omitempty"`
	// Indicates whether the action can be initiated manually.
	AllowManual *bool `json:"AllowManual,omitempty"`
}

// NewTaskRole instantiates a new TaskRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskRole() *TaskRole {
	this := TaskRole{}
	return &this
}

// NewTaskRoleWithDefaults instantiates a new TaskRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskRoleWithDefaults() *TaskRole {
	this := TaskRole{}
	return &this
}

// GetPerformAutomatic returns the PerformAutomatic field value if set, zero value otherwise.
func (o *TaskRole) GetPerformAutomatic() bool {
	if o == nil || o.PerformAutomatic == nil {
		var ret bool
		return ret
	}
	return *o.PerformAutomatic
}

// GetPerformAutomaticOk returns a tuple with the PerformAutomatic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRole) GetPerformAutomaticOk() (*bool, bool) {
	if o == nil || o.PerformAutomatic == nil {
		return nil, false
	}
	return o.PerformAutomatic, true
}

// HasPerformAutomatic returns a boolean if a field has been set.
func (o *TaskRole) HasPerformAutomatic() bool {
	if o != nil && o.PerformAutomatic != nil {
		return true
	}

	return false
}

// SetPerformAutomatic gets a reference to the given bool and assigns it to the PerformAutomatic field.
func (o *TaskRole) SetPerformAutomatic(v bool) {
	o.PerformAutomatic = &v
}

// GetRequirePasswordEveryXDays returns the RequirePasswordEveryXDays field value if set, zero value otherwise.
func (o *TaskRole) GetRequirePasswordEveryXDays() int32 {
	if o == nil || o.RequirePasswordEveryXDays == nil {
		var ret int32
		return ret
	}
	return *o.RequirePasswordEveryXDays
}

// GetRequirePasswordEveryXDaysOk returns a tuple with the RequirePasswordEveryXDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRole) GetRequirePasswordEveryXDaysOk() (*int32, bool) {
	if o == nil || o.RequirePasswordEveryXDays == nil {
		return nil, false
	}
	return o.RequirePasswordEveryXDays, true
}

// HasRequirePasswordEveryXDays returns a boolean if a field has been set.
func (o *TaskRole) HasRequirePasswordEveryXDays() bool {
	if o != nil && o.RequirePasswordEveryXDays != nil {
		return true
	}

	return false
}

// SetRequirePasswordEveryXDays gets a reference to the given int32 and assigns it to the RequirePasswordEveryXDays field.
func (o *TaskRole) SetRequirePasswordEveryXDays(v int32) {
	o.RequirePasswordEveryXDays = &v
}

// GetAutoOnAdd returns the AutoOnAdd field value if set, zero value otherwise.
func (o *TaskRole) GetAutoOnAdd() bool {
	if o == nil || o.AutoOnAdd == nil {
		var ret bool
		return ret
	}
	return *o.AutoOnAdd
}

// GetAutoOnAddOk returns a tuple with the AutoOnAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRole) GetAutoOnAddOk() (*bool, bool) {
	if o == nil || o.AutoOnAdd == nil {
		return nil, false
	}
	return o.AutoOnAdd, true
}

// HasAutoOnAdd returns a boolean if a field has been set.
func (o *TaskRole) HasAutoOnAdd() bool {
	if o != nil && o.AutoOnAdd != nil {
		return true
	}

	return false
}

// SetAutoOnAdd gets a reference to the given bool and assigns it to the AutoOnAdd field.
func (o *TaskRole) SetAutoOnAdd(v bool) {
	o.AutoOnAdd = &v
}

// GetIsRequirePasswordEveryXDaysAnException returns the IsRequirePasswordEveryXDaysAnException field value if set, zero value otherwise.
func (o *TaskRole) GetIsRequirePasswordEveryXDaysAnException() bool {
	if o == nil || o.IsRequirePasswordEveryXDaysAnException == nil {
		var ret bool
		return ret
	}
	return *o.IsRequirePasswordEveryXDaysAnException
}

// GetIsRequirePasswordEveryXDaysAnExceptionOk returns a tuple with the IsRequirePasswordEveryXDaysAnException field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRole) GetIsRequirePasswordEveryXDaysAnExceptionOk() (*bool, bool) {
	if o == nil || o.IsRequirePasswordEveryXDaysAnException == nil {
		return nil, false
	}
	return o.IsRequirePasswordEveryXDaysAnException, true
}

// HasIsRequirePasswordEveryXDaysAnException returns a boolean if a field has been set.
func (o *TaskRole) HasIsRequirePasswordEveryXDaysAnException() bool {
	if o != nil && o.IsRequirePasswordEveryXDaysAnException != nil {
		return true
	}

	return false
}

// SetIsRequirePasswordEveryXDaysAnException gets a reference to the given bool and assigns it to the IsRequirePasswordEveryXDaysAnException field.
func (o *TaskRole) SetIsRequirePasswordEveryXDaysAnException(v bool) {
	o.IsRequirePasswordEveryXDaysAnException = &v
}

// GetAllowManual returns the AllowManual field value if set, zero value otherwise.
func (o *TaskRole) GetAllowManual() bool {
	if o == nil || o.AllowManual == nil {
		var ret bool
		return ret
	}
	return *o.AllowManual
}

// GetAllowManualOk returns a tuple with the AllowManual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRole) GetAllowManualOk() (*bool, bool) {
	if o == nil || o.AllowManual == nil {
		return nil, false
	}
	return o.AllowManual, true
}

// HasAllowManual returns a boolean if a field has been set.
func (o *TaskRole) HasAllowManual() bool {
	if o != nil && o.AllowManual != nil {
		return true
	}

	return false
}

// SetAllowManual gets a reference to the given bool and assigns it to the AllowManual field.
func (o *TaskRole) SetAllowManual(v bool) {
	o.AllowManual = &v
}

func (o TaskRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PerformAutomatic != nil {
		toSerialize["PerformAutomatic"] = o.PerformAutomatic
	}
	if o.RequirePasswordEveryXDays != nil {
		toSerialize["RequirePasswordEveryXDays"] = o.RequirePasswordEveryXDays
	}
	if o.AutoOnAdd != nil {
		toSerialize["AutoOnAdd"] = o.AutoOnAdd
	}
	if o.IsRequirePasswordEveryXDaysAnException != nil {
		toSerialize["IsRequirePasswordEveryXDaysAnException"] = o.IsRequirePasswordEveryXDaysAnException
	}
	if o.AllowManual != nil {
		toSerialize["AllowManual"] = o.AllowManual
	}
	return json.Marshal(toSerialize)
}

type NullableTaskRole struct {
	value *TaskRole
	isSet bool
}

func (v NullableTaskRole) Get() *TaskRole {
	return v.value
}

func (v *NullableTaskRole) Set(val *TaskRole) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskRole) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskRole(val *TaskRole) *NullableTaskRole {
	return &NullableTaskRole{value: val, isSet: true}
}

func (v NullableTaskRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


