/*
Privileged Access Security REST API

Display the PVWA REST APIs below for a description of how to use them and try them out. Access information about additional REST APIs through the online documentation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserInternet struct for UserInternet
type UserInternet struct {
	HomePage *string `json:"homePage,omitempty"`
	HomeEmail *string `json:"homeEmail,omitempty"`
	BusinessEmail *string `json:"businessEmail,omitempty"`
	OtherEmail *string `json:"otherEmail,omitempty"`
}

// NewUserInternet instantiates a new UserInternet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInternet() *UserInternet {
	this := UserInternet{}
	return &this
}

// NewUserInternetWithDefaults instantiates a new UserInternet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInternetWithDefaults() *UserInternet {
	this := UserInternet{}
	return &this
}

// GetHomePage returns the HomePage field value if set, zero value otherwise.
func (o *UserInternet) GetHomePage() string {
	if o == nil || o.HomePage == nil {
		var ret string
		return ret
	}
	return *o.HomePage
}

// GetHomePageOk returns a tuple with the HomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInternet) GetHomePageOk() (*string, bool) {
	if o == nil || o.HomePage == nil {
		return nil, false
	}
	return o.HomePage, true
}

// HasHomePage returns a boolean if a field has been set.
func (o *UserInternet) HasHomePage() bool {
	if o != nil && o.HomePage != nil {
		return true
	}

	return false
}

// SetHomePage gets a reference to the given string and assigns it to the HomePage field.
func (o *UserInternet) SetHomePage(v string) {
	o.HomePage = &v
}

// GetHomeEmail returns the HomeEmail field value if set, zero value otherwise.
func (o *UserInternet) GetHomeEmail() string {
	if o == nil || o.HomeEmail == nil {
		var ret string
		return ret
	}
	return *o.HomeEmail
}

// GetHomeEmailOk returns a tuple with the HomeEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInternet) GetHomeEmailOk() (*string, bool) {
	if o == nil || o.HomeEmail == nil {
		return nil, false
	}
	return o.HomeEmail, true
}

// HasHomeEmail returns a boolean if a field has been set.
func (o *UserInternet) HasHomeEmail() bool {
	if o != nil && o.HomeEmail != nil {
		return true
	}

	return false
}

// SetHomeEmail gets a reference to the given string and assigns it to the HomeEmail field.
func (o *UserInternet) SetHomeEmail(v string) {
	o.HomeEmail = &v
}

// GetBusinessEmail returns the BusinessEmail field value if set, zero value otherwise.
func (o *UserInternet) GetBusinessEmail() string {
	if o == nil || o.BusinessEmail == nil {
		var ret string
		return ret
	}
	return *o.BusinessEmail
}

// GetBusinessEmailOk returns a tuple with the BusinessEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInternet) GetBusinessEmailOk() (*string, bool) {
	if o == nil || o.BusinessEmail == nil {
		return nil, false
	}
	return o.BusinessEmail, true
}

// HasBusinessEmail returns a boolean if a field has been set.
func (o *UserInternet) HasBusinessEmail() bool {
	if o != nil && o.BusinessEmail != nil {
		return true
	}

	return false
}

// SetBusinessEmail gets a reference to the given string and assigns it to the BusinessEmail field.
func (o *UserInternet) SetBusinessEmail(v string) {
	o.BusinessEmail = &v
}

// GetOtherEmail returns the OtherEmail field value if set, zero value otherwise.
func (o *UserInternet) GetOtherEmail() string {
	if o == nil || o.OtherEmail == nil {
		var ret string
		return ret
	}
	return *o.OtherEmail
}

// GetOtherEmailOk returns a tuple with the OtherEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInternet) GetOtherEmailOk() (*string, bool) {
	if o == nil || o.OtherEmail == nil {
		return nil, false
	}
	return o.OtherEmail, true
}

// HasOtherEmail returns a boolean if a field has been set.
func (o *UserInternet) HasOtherEmail() bool {
	if o != nil && o.OtherEmail != nil {
		return true
	}

	return false
}

// SetOtherEmail gets a reference to the given string and assigns it to the OtherEmail field.
func (o *UserInternet) SetOtherEmail(v string) {
	o.OtherEmail = &v
}

func (o UserInternet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HomePage != nil {
		toSerialize["homePage"] = o.HomePage
	}
	if o.HomeEmail != nil {
		toSerialize["homeEmail"] = o.HomeEmail
	}
	if o.BusinessEmail != nil {
		toSerialize["businessEmail"] = o.BusinessEmail
	}
	if o.OtherEmail != nil {
		toSerialize["otherEmail"] = o.OtherEmail
	}
	return json.Marshal(toSerialize)
}

type NullableUserInternet struct {
	value *UserInternet
	isSet bool
}

func (v NullableUserInternet) Get() *UserInternet {
	return v.value
}

func (v *NullableUserInternet) Set(val *UserInternet) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInternet) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInternet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInternet(val *UserInternet) *NullableUserInternet {
	return &NullableUserInternet{value: val, isSet: true}
}

func (v NullableUserInternet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInternet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


